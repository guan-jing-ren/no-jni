#ifndef javax_net_ssl_SNIMatcher_HPP
#define javax_net_ssl_SNIMatcher_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::net::ssl::SNIMatcher : public jObject<::javax::net::ssl::SNIMatcher, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_net_ssl / "SNIMatcher";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jint()>("getType"), //
		jMethod<::jboolean(::javax::net::ssl::SNIServerName)>("matches"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getType(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getType")] != -1);
		return call<R>("getType", forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto matches(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("matches")] != -1);
		return call<R>("matches", forward<Args>(args)...);
	}

};

#endif
