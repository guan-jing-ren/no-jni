#ifndef javax_xml_XMLConstants_HPP
#define javax_xml_XMLConstants_HPP

#include "../../jfwd_decl.hpp"

class ::javax::xml::XMLConstants : public jObject<::javax::xml::XMLConstants, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_xml / "XMLConstants";

	constexpr static Enume field_signatures{
		jField<::java::lang::String>("ACCESS_EXTERNAL_DTD"), //
		jField<::java::lang::String>("ACCESS_EXTERNAL_SCHEMA"), //
		jField<::java::lang::String>("ACCESS_EXTERNAL_STYLESHEET"), //
		jField<::java::lang::String>("DEFAULT_NS_PREFIX"), //
		jField<::java::lang::String>("FEATURE_SECURE_PROCESSING"), //
		jField<::java::lang::String>("NULL_NS_URI"), //
		jField<::java::lang::String>("RELAXNG_NS_URI"), //
		jField<::java::lang::String>("W3C_XML_SCHEMA_INSTANCE_NS_URI"), //
		jField<::java::lang::String>("W3C_XML_SCHEMA_NS_URI"), //
		jField<::java::lang::String>("W3C_XPATH_DATATYPE_NS_URI"), //
		jField<::java::lang::String>("XMLNS_ATTRIBUTE"), //
		jField<::java::lang::String>("XMLNS_ATTRIBUTE_NS_URI"), //
		jField<::java::lang::String>("XML_DTD_NS_URI"), //
		jField<::java::lang::String>("XML_NS_PREFIX"), //
		jField<::java::lang::String>("XML_NS_URI"), //
	};

	template<typename F = ::java::lang::String>
	static auto ACCESS_EXTERNAL_DTD() {
		static_assert(field_signatures[jField<F>("ACCESS_EXTERNAL_DTD")] != -1);
		return sat<F>("ACCESS_EXTERNAL_DTD");
	}

	template<typename F = ::java::lang::String>
	static auto ACCESS_EXTERNAL_SCHEMA() {
		static_assert(field_signatures[jField<F>("ACCESS_EXTERNAL_SCHEMA")] != -1);
		return sat<F>("ACCESS_EXTERNAL_SCHEMA");
	}

	template<typename F = ::java::lang::String>
	static auto ACCESS_EXTERNAL_STYLESHEET() {
		static_assert(field_signatures[jField<F>("ACCESS_EXTERNAL_STYLESHEET")] != -1);
		return sat<F>("ACCESS_EXTERNAL_STYLESHEET");
	}

	template<typename F = ::java::lang::String>
	static auto DEFAULT_NS_PREFIX() {
		static_assert(field_signatures[jField<F>("DEFAULT_NS_PREFIX")] != -1);
		return sat<F>("DEFAULT_NS_PREFIX");
	}

	template<typename F = ::java::lang::String>
	static auto FEATURE_SECURE_PROCESSING() {
		static_assert(field_signatures[jField<F>("FEATURE_SECURE_PROCESSING")] != -1);
		return sat<F>("FEATURE_SECURE_PROCESSING");
	}

	template<typename F = ::java::lang::String>
	static auto NULL_NS_URI() {
		static_assert(field_signatures[jField<F>("NULL_NS_URI")] != -1);
		return sat<F>("NULL_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto RELAXNG_NS_URI() {
		static_assert(field_signatures[jField<F>("RELAXNG_NS_URI")] != -1);
		return sat<F>("RELAXNG_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto W3C_XML_SCHEMA_INSTANCE_NS_URI() {
		static_assert(field_signatures[jField<F>("W3C_XML_SCHEMA_INSTANCE_NS_URI")] != -1);
		return sat<F>("W3C_XML_SCHEMA_INSTANCE_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto W3C_XML_SCHEMA_NS_URI() {
		static_assert(field_signatures[jField<F>("W3C_XML_SCHEMA_NS_URI")] != -1);
		return sat<F>("W3C_XML_SCHEMA_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto W3C_XPATH_DATATYPE_NS_URI() {
		static_assert(field_signatures[jField<F>("W3C_XPATH_DATATYPE_NS_URI")] != -1);
		return sat<F>("W3C_XPATH_DATATYPE_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto XMLNS_ATTRIBUTE() {
		static_assert(field_signatures[jField<F>("XMLNS_ATTRIBUTE")] != -1);
		return sat<F>("XMLNS_ATTRIBUTE");
	}

	template<typename F = ::java::lang::String>
	static auto XMLNS_ATTRIBUTE_NS_URI() {
		static_assert(field_signatures[jField<F>("XMLNS_ATTRIBUTE_NS_URI")] != -1);
		return sat<F>("XMLNS_ATTRIBUTE_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto XML_DTD_NS_URI() {
		static_assert(field_signatures[jField<F>("XML_DTD_NS_URI")] != -1);
		return sat<F>("XML_DTD_NS_URI");
	}

	template<typename F = ::java::lang::String>
	static auto XML_NS_PREFIX() {
		static_assert(field_signatures[jField<F>("XML_NS_PREFIX")] != -1);
		return sat<F>("XML_NS_PREFIX");
	}

	template<typename F = ::java::lang::String>
	static auto XML_NS_URI() {
		static_assert(field_signatures[jField<F>("XML_NS_URI")] != -1);
		return sat<F>("XML_NS_URI");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
