#ifndef javax_xml_ws_wsaddressing_W3CEndpointReferenceBuilder_HPP
#define javax_xml_ws_wsaddressing_W3CEndpointReferenceBuilder_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder : public jObject<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_xml_ws_wsaddressing / "W3CEndpointReferenceBuilder";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::java::lang::String)>("address"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::javax::xml::namespace_::QName, ::java::lang::String)>("attribute"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReference()>("build"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::org::w3c::dom::Element)>("element"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::javax::xml::namespace_::QName)>("endpointName"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::javax::xml::namespace_::QName)>("interfaceName"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::org::w3c::dom::Element)>("metadata"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::org::w3c::dom::Element)>("referenceParameter"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::javax::xml::namespace_::QName)>("serviceName"), //
		jMethod<::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder(::java::lang::String)>("wsdlDocumentLocation"), //
	};

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto address(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("address")] != -1);
		return call<R>("address", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto attribute(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("attribute")] != -1);
		return call<R>("attribute", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReference, typename... Args>
	auto build(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("build")] != -1);
		return call<R>("build", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto element(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("element")] != -1);
		return call<R>("element", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto endpointName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("endpointName")] != -1);
		return call<R>("endpointName", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto interfaceName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("interfaceName")] != -1);
		return call<R>("interfaceName", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto metadata(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("metadata")] != -1);
		return call<R>("metadata", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto referenceParameter(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("referenceParameter")] != -1);
		return call<R>("referenceParameter", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto serviceName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("serviceName")] != -1);
		return call<R>("serviceName", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::xml::ws::wsaddressing::W3CEndpointReferenceBuilder, typename... Args>
	auto wsdlDocumentLocation(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("wsdlDocumentLocation")] != -1);
		return call<R>("wsdlDocumentLocation", std::forward<Args>(args)...);
	}

};

#endif
