#ifndef javax_xml_crypto_dsig_keyinfo_KeyName_HPP
#define javax_xml_crypto_dsig_keyinfo_KeyName_HPP

#include "../../../../../jfwd_decl.hpp"

class ::javax::xml::crypto::dsig::keyinfo::KeyName : public jObject<::javax::xml::crypto::dsig::keyinfo::KeyName, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_xml_crypto_dsig_keyinfo / "KeyName";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::String()>("getName"), //
		jMethod<::jboolean(::java::lang::String)>("isFeatureSupported"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getName")] != -1);
		return call<R>("getName", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto isFeatureSupported(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isFeatureSupported")] != -1);
		return call<R>("isFeatureSupported", std::forward<Args>(args)...);
	}

};

#endif
