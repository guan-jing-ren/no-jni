#ifndef javax_xml_stream_StreamFilter_HPP
#define javax_xml_stream_StreamFilter_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::xml::stream::StreamFilter : public jObject<::javax::xml::stream::StreamFilter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_xml_stream / "StreamFilter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jboolean(::javax::xml::stream::XMLStreamReader)>("accept"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto accept(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("accept")] != -1);
		return call<R>("accept", std::forward<Args>(args)...);
	}

};

#endif
