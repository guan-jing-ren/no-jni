#ifndef javax_xml_xpath_XPathConstants_HPP
#define javax_xml_xpath_XPathConstants_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::xml::xpath::XPathConstants : public jObject<::javax::xml::xpath::XPathConstants, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_xml_xpath / "XPathConstants";

	constexpr static Enume field_signatures{
		jField<::javax::xml::namespace_::QName>("BOOLEAN"), //
		jField<::java::lang::String>("DOM_OBJECT_MODEL"), //
		jField<::javax::xml::namespace_::QName>("NODE"), //
		jField<::javax::xml::namespace_::QName>("NODESET"), //
		jField<::javax::xml::namespace_::QName>("NUMBER"), //
		jField<::javax::xml::namespace_::QName>("STRING"), //
	};

	template<typename F = ::javax::xml::namespace_::QName>
	static auto BOOLEAN() {
		static_assert(field_signatures[jField<F>("BOOLEAN")] != -1);
		return sat<F>("BOOLEAN");
	}

	template<typename F = ::java::lang::String>
	static auto DOM_OBJECT_MODEL() {
		static_assert(field_signatures[jField<F>("DOM_OBJECT_MODEL")] != -1);
		return sat<F>("DOM_OBJECT_MODEL");
	}

	template<typename F = ::javax::xml::namespace_::QName>
	static auto NODE() {
		static_assert(field_signatures[jField<F>("NODE")] != -1);
		return sat<F>("NODE");
	}

	template<typename F = ::javax::xml::namespace_::QName>
	static auto NODESET() {
		static_assert(field_signatures[jField<F>("NODESET")] != -1);
		return sat<F>("NODESET");
	}

	template<typename F = ::javax::xml::namespace_::QName>
	static auto NUMBER() {
		static_assert(field_signatures[jField<F>("NUMBER")] != -1);
		return sat<F>("NUMBER");
	}

	template<typename F = ::javax::xml::namespace_::QName>
	static auto STRING() {
		static_assert(field_signatures[jField<F>("STRING")] != -1);
		return sat<F>("STRING");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
