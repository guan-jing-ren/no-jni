#ifndef javax_sound_sampled_JPP
#define javax_sound_sampled_JPP

namespace javax::sound::sampled { class AudioFileFormat; }
template<> constexpr auto signature<::javax::sound::sampled::AudioFileFormat> = ::javax_sound_sampled / "AudioFileFormat";
namespace javax::sound::sampled { class AudioFileFormat$Type; }
template<> constexpr auto signature<::javax::sound::sampled::AudioFileFormat$Type> = ::javax_sound_sampled / "AudioFileFormat$Type";
namespace javax::sound::sampled { class AudioFormat; }
template<> constexpr auto signature<::javax::sound::sampled::AudioFormat> = ::javax_sound_sampled / "AudioFormat";
namespace javax::sound::sampled { class AudioFormat$Encoding; }
template<> constexpr auto signature<::javax::sound::sampled::AudioFormat$Encoding> = ::javax_sound_sampled / "AudioFormat$Encoding";
namespace javax::sound::sampled { class AudioInputStream; }
template<> constexpr auto signature<::javax::sound::sampled::AudioInputStream> = ::javax_sound_sampled / "AudioInputStream";
namespace javax::sound::sampled { class AudioInputStream$TargetDataLineInputStream; }
template<> constexpr auto signature<::javax::sound::sampled::AudioInputStream$TargetDataLineInputStream> = ::javax_sound_sampled / "AudioInputStream$TargetDataLineInputStream";
namespace javax::sound::sampled { class AudioPermission; }
template<> constexpr auto signature<::javax::sound::sampled::AudioPermission> = ::javax_sound_sampled / "AudioPermission";
namespace javax::sound::sampled { class AudioSystem; }
template<> constexpr auto signature<::javax::sound::sampled::AudioSystem> = ::javax_sound_sampled / "AudioSystem";
namespace javax::sound::sampled { class BooleanControl; }
template<> constexpr auto signature<::javax::sound::sampled::BooleanControl> = ::javax_sound_sampled / "BooleanControl";
namespace javax::sound::sampled { class BooleanControl$Type; }
template<> constexpr auto signature<::javax::sound::sampled::BooleanControl$Type> = ::javax_sound_sampled / "BooleanControl$Type";
namespace javax::sound::sampled { class Clip; }
template<> constexpr auto signature<::javax::sound::sampled::Clip> = ::javax_sound_sampled / "Clip";
namespace javax::sound::sampled { class CompoundControl; }
template<> constexpr auto signature<::javax::sound::sampled::CompoundControl> = ::javax_sound_sampled / "CompoundControl";
namespace javax::sound::sampled { class CompoundControl$Type; }
template<> constexpr auto signature<::javax::sound::sampled::CompoundControl$Type> = ::javax_sound_sampled / "CompoundControl$Type";
namespace javax::sound::sampled { class Control; }
template<> constexpr auto signature<::javax::sound::sampled::Control> = ::javax_sound_sampled / "Control";
namespace javax::sound::sampled { class Control$Type; }
template<> constexpr auto signature<::javax::sound::sampled::Control$Type> = ::javax_sound_sampled / "Control$Type";
namespace javax::sound::sampled { class DataLine; }
template<> constexpr auto signature<::javax::sound::sampled::DataLine> = ::javax_sound_sampled / "DataLine";
namespace javax::sound::sampled { class DataLine$Info; }
template<> constexpr auto signature<::javax::sound::sampled::DataLine$Info> = ::javax_sound_sampled / "DataLine$Info";
namespace javax::sound::sampled { class EnumControl; }
template<> constexpr auto signature<::javax::sound::sampled::EnumControl> = ::javax_sound_sampled / "EnumControl";
namespace javax::sound::sampled { class EnumControl$Type; }
template<> constexpr auto signature<::javax::sound::sampled::EnumControl$Type> = ::javax_sound_sampled / "EnumControl$Type";
namespace javax::sound::sampled { class FloatControl; }
template<> constexpr auto signature<::javax::sound::sampled::FloatControl> = ::javax_sound_sampled / "FloatControl";
namespace javax::sound::sampled { class FloatControl$Type; }
template<> constexpr auto signature<::javax::sound::sampled::FloatControl$Type> = ::javax_sound_sampled / "FloatControl$Type";
namespace javax::sound::sampled { class Line; }
template<> constexpr auto signature<::javax::sound::sampled::Line> = ::javax_sound_sampled / "Line";
namespace javax::sound::sampled { class Line$Info; }
template<> constexpr auto signature<::javax::sound::sampled::Line$Info> = ::javax_sound_sampled / "Line$Info";
namespace javax::sound::sampled { class LineEvent; }
template<> constexpr auto signature<::javax::sound::sampled::LineEvent> = ::javax_sound_sampled / "LineEvent";
namespace javax::sound::sampled { class LineEvent$Type; }
template<> constexpr auto signature<::javax::sound::sampled::LineEvent$Type> = ::javax_sound_sampled / "LineEvent$Type";
namespace javax::sound::sampled { class LineListener; }
template<> constexpr auto signature<::javax::sound::sampled::LineListener> = ::javax_sound_sampled / "LineListener";
namespace javax::sound::sampled { class LineUnavailableException; }
template<> constexpr auto signature<::javax::sound::sampled::LineUnavailableException> = ::javax_sound_sampled / "LineUnavailableException";
namespace javax::sound::sampled { class Mixer; }
template<> constexpr auto signature<::javax::sound::sampled::Mixer> = ::javax_sound_sampled / "Mixer";
namespace javax::sound::sampled { class Mixer$Info; }
template<> constexpr auto signature<::javax::sound::sampled::Mixer$Info> = ::javax_sound_sampled / "Mixer$Info";
namespace javax::sound::sampled { class Port; }
template<> constexpr auto signature<::javax::sound::sampled::Port> = ::javax_sound_sampled / "Port";
namespace javax::sound::sampled { class Port$Info; }
template<> constexpr auto signature<::javax::sound::sampled::Port$Info> = ::javax_sound_sampled / "Port$Info";
namespace javax::sound::sampled { class ReverbType; }
template<> constexpr auto signature<::javax::sound::sampled::ReverbType> = ::javax_sound_sampled / "ReverbType";
namespace javax::sound::sampled { class SourceDataLine; }
template<> constexpr auto signature<::javax::sound::sampled::SourceDataLine> = ::javax_sound_sampled / "SourceDataLine";
namespace javax::sound::sampled { class TargetDataLine; }
template<> constexpr auto signature<::javax::sound::sampled::TargetDataLine> = ::javax_sound_sampled / "TargetDataLine";
namespace javax::sound::sampled { class UnsupportedAudioFileException; }
template<> constexpr auto signature<::javax::sound::sampled::UnsupportedAudioFileException> = ::javax_sound_sampled / "UnsupportedAudioFileException";

#endif
