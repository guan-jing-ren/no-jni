#ifndef javax_crypto_JPP
#define javax_crypto_JPP

namespace javax::crypto { class AEADBadTagException; }
template<> constexpr auto signature<::javax::crypto::AEADBadTagException> = ::javax_crypto / "AEADBadTagException";
namespace javax::crypto { class BadPaddingException; }
template<> constexpr auto signature<::javax::crypto::BadPaddingException> = ::javax_crypto / "BadPaddingException";
namespace javax::crypto { class Cipher; }
template<> constexpr auto signature<::javax::crypto::Cipher> = ::javax_crypto / "Cipher";
namespace javax::crypto { class Cipher$Transform; }
template<> constexpr auto signature<::javax::crypto::Cipher$Transform> = ::javax_crypto / "Cipher$Transform";
namespace javax::crypto { class CipherInputStream; }
template<> constexpr auto signature<::javax::crypto::CipherInputStream> = ::javax_crypto / "CipherInputStream";
namespace javax::crypto { class CipherOutputStream; }
template<> constexpr auto signature<::javax::crypto::CipherOutputStream> = ::javax_crypto / "CipherOutputStream";
namespace javax::crypto { class CipherSpi; }
template<> constexpr auto signature<::javax::crypto::CipherSpi> = ::javax_crypto / "CipherSpi";
namespace javax::crypto { class CryptoAllPermission; }
template<> constexpr auto signature<::javax::crypto::CryptoAllPermission> = ::javax_crypto / "CryptoAllPermission";
namespace javax::crypto { class CryptoAllPermissionCollection; }
template<> constexpr auto signature<::javax::crypto::CryptoAllPermissionCollection> = ::javax_crypto / "CryptoAllPermissionCollection";
namespace javax::crypto { class CryptoPermission; }
template<> constexpr auto signature<::javax::crypto::CryptoPermission> = ::javax_crypto / "CryptoPermission";
namespace javax::crypto { class CryptoPermissionCollection; }
template<> constexpr auto signature<::javax::crypto::CryptoPermissionCollection> = ::javax_crypto / "CryptoPermissionCollection";
namespace javax::crypto { class CryptoPermissions; }
template<> constexpr auto signature<::javax::crypto::CryptoPermissions> = ::javax_crypto / "CryptoPermissions";
namespace javax::crypto { class CryptoPolicyParser; }
template<> constexpr auto signature<::javax::crypto::CryptoPolicyParser> = ::javax_crypto / "CryptoPolicyParser";
namespace javax::crypto { class CryptoPolicyParser$CryptoPermissionEntry; }
template<> constexpr auto signature<::javax::crypto::CryptoPolicyParser$CryptoPermissionEntry> = ::javax_crypto / "CryptoPolicyParser$CryptoPermissionEntry";
namespace javax::crypto { class CryptoPolicyParser$GrantEntry; }
template<> constexpr auto signature<::javax::crypto::CryptoPolicyParser$GrantEntry> = ::javax_crypto / "CryptoPolicyParser$GrantEntry";
namespace javax::crypto { class CryptoPolicyParser$ParsingException; }
template<> constexpr auto signature<::javax::crypto::CryptoPolicyParser$ParsingException> = ::javax_crypto / "CryptoPolicyParser$ParsingException";
namespace javax::crypto { class EncryptedPrivateKeyInfo; }
template<> constexpr auto signature<::javax::crypto::EncryptedPrivateKeyInfo> = ::javax_crypto / "EncryptedPrivateKeyInfo";
namespace javax::crypto { class ExemptionMechanism; }
template<> constexpr auto signature<::javax::crypto::ExemptionMechanism> = ::javax_crypto / "ExemptionMechanism";
namespace javax::crypto { class ExemptionMechanismException; }
template<> constexpr auto signature<::javax::crypto::ExemptionMechanismException> = ::javax_crypto / "ExemptionMechanismException";
namespace javax::crypto { class ExemptionMechanismSpi; }
template<> constexpr auto signature<::javax::crypto::ExemptionMechanismSpi> = ::javax_crypto / "ExemptionMechanismSpi";
namespace javax::crypto { class IllegalBlockSizeException; }
template<> constexpr auto signature<::javax::crypto::IllegalBlockSizeException> = ::javax_crypto / "IllegalBlockSizeException";
namespace javax::crypto { class JarVerifier; }
template<> constexpr auto signature<::javax::crypto::JarVerifier> = ::javax_crypto / "JarVerifier";
namespace javax::crypto { class JarVerifier$1; }
template<> constexpr auto signature<::javax::crypto::JarVerifier$1> = ::javax_crypto / "JarVerifier$1";
namespace javax::crypto { class JceSecurity; }
template<> constexpr auto signature<::javax::crypto::JceSecurity> = ::javax_crypto / "JceSecurity";
namespace javax::crypto { class JceSecurity$1; }
template<> constexpr auto signature<::javax::crypto::JceSecurity$1> = ::javax_crypto / "JceSecurity$1";
namespace javax::crypto { class JceSecurity$2; }
template<> constexpr auto signature<::javax::crypto::JceSecurity$2> = ::javax_crypto / "JceSecurity$2";
namespace javax::crypto { class JceSecurityManager; }
template<> constexpr auto signature<::javax::crypto::JceSecurityManager> = ::javax_crypto / "JceSecurityManager";
namespace javax::crypto { class JceSecurityManager$1; }
template<> constexpr auto signature<::javax::crypto::JceSecurityManager$1> = ::javax_crypto / "JceSecurityManager$1";
namespace javax::crypto { class KeyAgreement; }
template<> constexpr auto signature<::javax::crypto::KeyAgreement> = ::javax_crypto / "KeyAgreement";
namespace javax::crypto { class KeyAgreementSpi; }
template<> constexpr auto signature<::javax::crypto::KeyAgreementSpi> = ::javax_crypto / "KeyAgreementSpi";
namespace javax::crypto { class KeyGenerator; }
template<> constexpr auto signature<::javax::crypto::KeyGenerator> = ::javax_crypto / "KeyGenerator";
namespace javax::crypto { class KeyGeneratorSpi; }
template<> constexpr auto signature<::javax::crypto::KeyGeneratorSpi> = ::javax_crypto / "KeyGeneratorSpi";
namespace javax::crypto { class Mac; }
template<> constexpr auto signature<::javax::crypto::Mac> = ::javax_crypto / "Mac";
namespace javax::crypto { class MacSpi; }
template<> constexpr auto signature<::javax::crypto::MacSpi> = ::javax_crypto / "MacSpi";
namespace javax::crypto { class NoSuchPaddingException; }
template<> constexpr auto signature<::javax::crypto::NoSuchPaddingException> = ::javax_crypto / "NoSuchPaddingException";
namespace javax::crypto { class NullCipher; }
template<> constexpr auto signature<::javax::crypto::NullCipher> = ::javax_crypto / "NullCipher";
namespace javax::crypto { class NullCipherSpi; }
template<> constexpr auto signature<::javax::crypto::NullCipherSpi> = ::javax_crypto / "NullCipherSpi";
namespace javax::crypto { class PermissionsEnumerator; }
template<> constexpr auto signature<::javax::crypto::PermissionsEnumerator> = ::javax_crypto / "PermissionsEnumerator";
namespace javax::crypto { class SealedObject; }
template<> constexpr auto signature<::javax::crypto::SealedObject> = ::javax_crypto / "SealedObject";
namespace javax::crypto { class SecretKey; }
template<> constexpr auto signature<::javax::crypto::SecretKey> = ::javax_crypto / "SecretKey";
namespace javax::crypto { class SecretKeyFactory; }
template<> constexpr auto signature<::javax::crypto::SecretKeyFactory> = ::javax_crypto / "SecretKeyFactory";
namespace javax::crypto { class SecretKeyFactorySpi; }
template<> constexpr auto signature<::javax::crypto::SecretKeyFactorySpi> = ::javax_crypto / "SecretKeyFactorySpi";
namespace javax::crypto { class ShortBufferException; }
template<> constexpr auto signature<::javax::crypto::ShortBufferException> = ::javax_crypto / "ShortBufferException";
namespace javax::crypto { class extObjectInputStream; }
template<> constexpr auto signature<::javax::crypto::extObjectInputStream> = ::javax_crypto / "extObjectInputStream";

#endif
