#ifndef javax_sql_ConnectionEventListener_HPP
#define javax_sql_ConnectionEventListener_HPP

#include "../../jfwd_decl.hpp"

class ::javax::sql::ConnectionEventListener : public jObject<::javax::sql::ConnectionEventListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_sql / "ConnectionEventListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::javax::sql::ConnectionEvent)>("connectionClosed"), //
		jMethod<::jvoid(::javax::sql::ConnectionEvent)>("connectionErrorOccurred"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto connectionClosed(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("connectionClosed")] != -1);
		return call<R>("connectionClosed", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto connectionErrorOccurred(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("connectionErrorOccurred")] != -1);
		return call<R>("connectionErrorOccurred", std::forward<Args>(args)...);
	}

};

#endif
