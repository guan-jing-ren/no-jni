#ifndef javax_tools_JavaFileManager$Location_HPP
#define javax_tools_JavaFileManager$Location_HPP

#include "../../jfwd_decl.hpp"

class ::javax::tools::JavaFileManager$Location : public jObject<::javax::tools::JavaFileManager$Location, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_tools / "JavaFileManager$Location";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::String()>("getName"), //
		jMethod<::jboolean()>("isOutputLocation"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getName")] != -1);
		return call<R>("getName", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto isOutputLocation(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isOutputLocation")] != -1);
		return call<R>("isOutputLocation", std::forward<Args>(args)...);
	}

};

#endif
