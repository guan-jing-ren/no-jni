#ifndef javax_management_NotificationEmitter_HPP
#define javax_management_NotificationEmitter_HPP

#include "../../jfwd_decl.hpp"

class ::javax::management::NotificationEmitter : public jObject<::javax::management::NotificationEmitter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_management / "NotificationEmitter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::javax::management::NotificationListener, ::javax::management::NotificationFilter, ::java::lang::Object)>("removeNotificationListener"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto removeNotificationListener(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("removeNotificationListener")] != -1);
		return call<R>("removeNotificationListener", forward<Args>(args)...);
	}

};

#endif
