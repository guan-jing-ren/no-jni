#ifndef javax_management_relation_RelationSupportMBean_HPP
#define javax_management_relation_RelationSupportMBean_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::management::relation::RelationSupportMBean : public jObject<::javax::management::relation::RelationSupportMBean, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_management_relation / "RelationSupportMBean";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Boolean()>("isInRelationService"), //
		jMethod<::jvoid(::java::lang::Boolean)>("setRelationServiceManagementFlag"), //
	};

	template<typename R = ::java::lang::Boolean, typename... Args>
	auto isInRelationService(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isInRelationService")] != -1);
		return call<R>("isInRelationService", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setRelationServiceManagementFlag(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setRelationServiceManagementFlag")] != -1);
		return call<R>("setRelationServiceManagementFlag", std::forward<Args>(args)...);
	}

};

#endif
