#ifndef javax_management_MBeanServerBuilder_HPP
#define javax_management_MBeanServerBuilder_HPP

#include "../../jfwd_decl.hpp"

class ::javax::management::MBeanServerBuilder : public jObject<::javax::management::MBeanServerBuilder, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_management / "MBeanServerBuilder";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::management::MBeanServer(::java::lang::String, ::javax::management::MBeanServer, ::javax::management::MBeanServerDelegate)>("newMBeanServer"), //
		jMethod<::javax::management::MBeanServerDelegate()>("newMBeanServerDelegate"), //
	};

	template<typename R = ::javax::management::MBeanServer, typename... Args>
	auto newMBeanServer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("newMBeanServer")] != -1);
		return call<R>("newMBeanServer", forward<Args>(args)...);
	}

	template<typename R = ::javax::management::MBeanServerDelegate, typename... Args>
	auto newMBeanServerDelegate(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("newMBeanServerDelegate")] != -1);
		return call<R>("newMBeanServerDelegate", forward<Args>(args)...);
	}

};

#endif
