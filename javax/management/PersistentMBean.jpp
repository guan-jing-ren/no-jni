#ifndef javax_management_PersistentMBean_HPP
#define javax_management_PersistentMBean_HPP

#include "../../jfwd_decl.hpp"

class ::javax::management::PersistentMBean : public jObject<::javax::management::PersistentMBean, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_management / "PersistentMBean";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid()>("load"), //
		jMethod<::jvoid()>("store"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto load(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("load")] != -1);
		return call<R>("load", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto store(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("store")] != -1);
		return call<R>("store", forward<Args>(args)...);
	}

};

#endif
