#ifndef javax_print_DocFlavor$BYTE_ARRAY_HPP
#define javax_print_DocFlavor$BYTE_ARRAY_HPP

#include "../../jfwd_decl.hpp"

class ::javax::print::DocFlavor$BYTE_ARRAY : public jObject<::javax::print::DocFlavor$BYTE_ARRAY, ::javax::print::DocFlavor> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_print / "DocFlavor$BYTE_ARRAY";

	constexpr static Enume field_signatures{
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("AUTOSENSE"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("GIF"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("JPEG"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("PCL"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("PDF"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("PNG"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("POSTSCRIPT"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_HOST"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_US_ASCII"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_UTF_16"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_UTF_16BE"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_UTF_16LE"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_HTML_UTF_8"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_HOST"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_US_ASCII"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_UTF_16"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_UTF_16BE"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_UTF_16LE"), //
		jField<::javax::print::DocFlavor$BYTE_ARRAY>("TEXT_PLAIN_UTF_8"), //
	};

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto AUTOSENSE() {
		static_assert(field_signatures[jField<F>("AUTOSENSE")] != -1);
		return sat<F>("AUTOSENSE");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto GIF() {
		static_assert(field_signatures[jField<F>("GIF")] != -1);
		return sat<F>("GIF");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto JPEG() {
		static_assert(field_signatures[jField<F>("JPEG")] != -1);
		return sat<F>("JPEG");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto PCL() {
		static_assert(field_signatures[jField<F>("PCL")] != -1);
		return sat<F>("PCL");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto PDF() {
		static_assert(field_signatures[jField<F>("PDF")] != -1);
		return sat<F>("PDF");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto PNG() {
		static_assert(field_signatures[jField<F>("PNG")] != -1);
		return sat<F>("PNG");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto POSTSCRIPT() {
		static_assert(field_signatures[jField<F>("POSTSCRIPT")] != -1);
		return sat<F>("POSTSCRIPT");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_HOST() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_HOST")] != -1);
		return sat<F>("TEXT_HTML_HOST");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_US_ASCII() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_US_ASCII")] != -1);
		return sat<F>("TEXT_HTML_US_ASCII");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_UTF_16() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_UTF_16")] != -1);
		return sat<F>("TEXT_HTML_UTF_16");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_UTF_16BE() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_UTF_16BE")] != -1);
		return sat<F>("TEXT_HTML_UTF_16BE");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_UTF_16LE() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_UTF_16LE")] != -1);
		return sat<F>("TEXT_HTML_UTF_16LE");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_HTML_UTF_8() {
		static_assert(field_signatures[jField<F>("TEXT_HTML_UTF_8")] != -1);
		return sat<F>("TEXT_HTML_UTF_8");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_HOST() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_HOST")] != -1);
		return sat<F>("TEXT_PLAIN_HOST");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_US_ASCII() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_US_ASCII")] != -1);
		return sat<F>("TEXT_PLAIN_US_ASCII");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_UTF_16() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_UTF_16")] != -1);
		return sat<F>("TEXT_PLAIN_UTF_16");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_UTF_16BE() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_UTF_16BE")] != -1);
		return sat<F>("TEXT_PLAIN_UTF_16BE");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_UTF_16LE() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_UTF_16LE")] != -1);
		return sat<F>("TEXT_PLAIN_UTF_16LE");
	}

	template<typename F = ::javax::print::DocFlavor$BYTE_ARRAY>
	static auto TEXT_PLAIN_UTF_8() {
		static_assert(field_signatures[jField<F>("TEXT_PLAIN_UTF_8")] != -1);
		return sat<F>("TEXT_PLAIN_UTF_8");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String)>(), //
	};

};

#endif
