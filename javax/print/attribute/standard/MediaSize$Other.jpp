#ifndef javax_print_attribute_standard_MediaSize$Other_HPP
#define javax_print_attribute_standard_MediaSize$Other_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::print::attribute::standard::MediaSize$Other : public jObject<::javax::print::attribute::standard::MediaSize$Other, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_print_attribute_standard / "MediaSize$Other";

	constexpr static Enume field_signatures{
		jField<::javax::print::attribute::standard::MediaSize>("EXECUTIVE"), //
		jField<::javax::print::attribute::standard::MediaSize>("FOLIO"), //
		jField<::javax::print::attribute::standard::MediaSize>("INVOICE"), //
		jField<::javax::print::attribute::standard::MediaSize>("ITALY_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSize>("JAPANESE_DOUBLE_POSTCARD"), //
		jField<::javax::print::attribute::standard::MediaSize>("JAPANESE_POSTCARD"), //
		jField<::javax::print::attribute::standard::MediaSize>("LEDGER"), //
		jField<::javax::print::attribute::standard::MediaSize>("MONARCH_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSize>("PERSONAL_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSize>("QUARTO"), //
		jField<::javax::print::attribute::standard::MediaSize>("TABLOID"), //
	};

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto EXECUTIVE() {
		static_assert(field_signatures[jField<F>("EXECUTIVE")] != -1);
		return sat<F>("EXECUTIVE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto FOLIO() {
		static_assert(field_signatures[jField<F>("FOLIO")] != -1);
		return sat<F>("FOLIO");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto INVOICE() {
		static_assert(field_signatures[jField<F>("INVOICE")] != -1);
		return sat<F>("INVOICE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto ITALY_ENVELOPE() {
		static_assert(field_signatures[jField<F>("ITALY_ENVELOPE")] != -1);
		return sat<F>("ITALY_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto JAPANESE_DOUBLE_POSTCARD() {
		static_assert(field_signatures[jField<F>("JAPANESE_DOUBLE_POSTCARD")] != -1);
		return sat<F>("JAPANESE_DOUBLE_POSTCARD");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto JAPANESE_POSTCARD() {
		static_assert(field_signatures[jField<F>("JAPANESE_POSTCARD")] != -1);
		return sat<F>("JAPANESE_POSTCARD");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto LEDGER() {
		static_assert(field_signatures[jField<F>("LEDGER")] != -1);
		return sat<F>("LEDGER");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto MONARCH_ENVELOPE() {
		static_assert(field_signatures[jField<F>("MONARCH_ENVELOPE")] != -1);
		return sat<F>("MONARCH_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto PERSONAL_ENVELOPE() {
		static_assert(field_signatures[jField<F>("PERSONAL_ENVELOPE")] != -1);
		return sat<F>("PERSONAL_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto QUARTO() {
		static_assert(field_signatures[jField<F>("QUARTO")] != -1);
		return sat<F>("QUARTO");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSize>
	static auto TABLOID() {
		static_assert(field_signatures[jField<F>("TABLOID")] != -1);
		return sat<F>("TABLOID");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
