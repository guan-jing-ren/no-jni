#ifndef javax_print_attribute_standard_MediaSizeName_HPP
#define javax_print_attribute_standard_MediaSizeName_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::print::attribute::standard::MediaSizeName : public jObject<::javax::print::attribute::standard::MediaSizeName, ::javax::print::attribute::standard::Media> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_print_attribute_standard / "MediaSizeName";

	constexpr static Enume field_signatures{
		jField<::javax::print::attribute::standard::MediaSizeName>("A"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("B"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("C"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("D"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("E"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("EXECUTIVE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("FOLIO"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("INVOICE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A0"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A1"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A10"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A2"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A3"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A4"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A5"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A6"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A7"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A8"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_A9"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B0"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B1"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B10"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B2"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B3"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B4"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B5"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B6"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B7"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B8"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_B9"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C0"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C1"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C2"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C3"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C4"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C5"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_C6"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ISO_DESIGNATED_LONG"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("ITALY_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JAPANESE_DOUBLE_POSTCARD"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JAPANESE_POSTCARD"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B0"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B1"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B10"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B2"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B3"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B4"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B5"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B6"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B7"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B8"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("JIS_B9"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("LEDGER"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("MONARCH_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_10X13_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_10X14_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_10X15_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_5X7"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_6X9_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_7X9_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_8X10"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_9X11_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_9X12_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_LEGAL"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_LETTER"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_NUMBER_10_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_NUMBER_11_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_NUMBER_12_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_NUMBER_14_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("NA_NUMBER_9_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("PERSONAL_ENVELOPE"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("QUARTO"), //
		jField<::javax::print::attribute::standard::MediaSizeName>("TABLOID"), //
	};

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto A() {
		static_assert(field_signatures[jField<F>("A")] != -1);
		return sat<F>("A");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto B() {
		static_assert(field_signatures[jField<F>("B")] != -1);
		return sat<F>("B");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto C() {
		static_assert(field_signatures[jField<F>("C")] != -1);
		return sat<F>("C");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto D() {
		static_assert(field_signatures[jField<F>("D")] != -1);
		return sat<F>("D");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto E() {
		static_assert(field_signatures[jField<F>("E")] != -1);
		return sat<F>("E");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto EXECUTIVE() {
		static_assert(field_signatures[jField<F>("EXECUTIVE")] != -1);
		return sat<F>("EXECUTIVE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto FOLIO() {
		static_assert(field_signatures[jField<F>("FOLIO")] != -1);
		return sat<F>("FOLIO");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto INVOICE() {
		static_assert(field_signatures[jField<F>("INVOICE")] != -1);
		return sat<F>("INVOICE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A0() {
		static_assert(field_signatures[jField<F>("ISO_A0")] != -1);
		return sat<F>("ISO_A0");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A1() {
		static_assert(field_signatures[jField<F>("ISO_A1")] != -1);
		return sat<F>("ISO_A1");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A10() {
		static_assert(field_signatures[jField<F>("ISO_A10")] != -1);
		return sat<F>("ISO_A10");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A2() {
		static_assert(field_signatures[jField<F>("ISO_A2")] != -1);
		return sat<F>("ISO_A2");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A3() {
		static_assert(field_signatures[jField<F>("ISO_A3")] != -1);
		return sat<F>("ISO_A3");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A4() {
		static_assert(field_signatures[jField<F>("ISO_A4")] != -1);
		return sat<F>("ISO_A4");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A5() {
		static_assert(field_signatures[jField<F>("ISO_A5")] != -1);
		return sat<F>("ISO_A5");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A6() {
		static_assert(field_signatures[jField<F>("ISO_A6")] != -1);
		return sat<F>("ISO_A6");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A7() {
		static_assert(field_signatures[jField<F>("ISO_A7")] != -1);
		return sat<F>("ISO_A7");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A8() {
		static_assert(field_signatures[jField<F>("ISO_A8")] != -1);
		return sat<F>("ISO_A8");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_A9() {
		static_assert(field_signatures[jField<F>("ISO_A9")] != -1);
		return sat<F>("ISO_A9");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B0() {
		static_assert(field_signatures[jField<F>("ISO_B0")] != -1);
		return sat<F>("ISO_B0");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B1() {
		static_assert(field_signatures[jField<F>("ISO_B1")] != -1);
		return sat<F>("ISO_B1");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B10() {
		static_assert(field_signatures[jField<F>("ISO_B10")] != -1);
		return sat<F>("ISO_B10");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B2() {
		static_assert(field_signatures[jField<F>("ISO_B2")] != -1);
		return sat<F>("ISO_B2");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B3() {
		static_assert(field_signatures[jField<F>("ISO_B3")] != -1);
		return sat<F>("ISO_B3");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B4() {
		static_assert(field_signatures[jField<F>("ISO_B4")] != -1);
		return sat<F>("ISO_B4");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B5() {
		static_assert(field_signatures[jField<F>("ISO_B5")] != -1);
		return sat<F>("ISO_B5");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B6() {
		static_assert(field_signatures[jField<F>("ISO_B6")] != -1);
		return sat<F>("ISO_B6");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B7() {
		static_assert(field_signatures[jField<F>("ISO_B7")] != -1);
		return sat<F>("ISO_B7");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B8() {
		static_assert(field_signatures[jField<F>("ISO_B8")] != -1);
		return sat<F>("ISO_B8");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_B9() {
		static_assert(field_signatures[jField<F>("ISO_B9")] != -1);
		return sat<F>("ISO_B9");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C0() {
		static_assert(field_signatures[jField<F>("ISO_C0")] != -1);
		return sat<F>("ISO_C0");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C1() {
		static_assert(field_signatures[jField<F>("ISO_C1")] != -1);
		return sat<F>("ISO_C1");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C2() {
		static_assert(field_signatures[jField<F>("ISO_C2")] != -1);
		return sat<F>("ISO_C2");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C3() {
		static_assert(field_signatures[jField<F>("ISO_C3")] != -1);
		return sat<F>("ISO_C3");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C4() {
		static_assert(field_signatures[jField<F>("ISO_C4")] != -1);
		return sat<F>("ISO_C4");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C5() {
		static_assert(field_signatures[jField<F>("ISO_C5")] != -1);
		return sat<F>("ISO_C5");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_C6() {
		static_assert(field_signatures[jField<F>("ISO_C6")] != -1);
		return sat<F>("ISO_C6");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ISO_DESIGNATED_LONG() {
		static_assert(field_signatures[jField<F>("ISO_DESIGNATED_LONG")] != -1);
		return sat<F>("ISO_DESIGNATED_LONG");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto ITALY_ENVELOPE() {
		static_assert(field_signatures[jField<F>("ITALY_ENVELOPE")] != -1);
		return sat<F>("ITALY_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JAPANESE_DOUBLE_POSTCARD() {
		static_assert(field_signatures[jField<F>("JAPANESE_DOUBLE_POSTCARD")] != -1);
		return sat<F>("JAPANESE_DOUBLE_POSTCARD");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JAPANESE_POSTCARD() {
		static_assert(field_signatures[jField<F>("JAPANESE_POSTCARD")] != -1);
		return sat<F>("JAPANESE_POSTCARD");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B0() {
		static_assert(field_signatures[jField<F>("JIS_B0")] != -1);
		return sat<F>("JIS_B0");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B1() {
		static_assert(field_signatures[jField<F>("JIS_B1")] != -1);
		return sat<F>("JIS_B1");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B10() {
		static_assert(field_signatures[jField<F>("JIS_B10")] != -1);
		return sat<F>("JIS_B10");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B2() {
		static_assert(field_signatures[jField<F>("JIS_B2")] != -1);
		return sat<F>("JIS_B2");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B3() {
		static_assert(field_signatures[jField<F>("JIS_B3")] != -1);
		return sat<F>("JIS_B3");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B4() {
		static_assert(field_signatures[jField<F>("JIS_B4")] != -1);
		return sat<F>("JIS_B4");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B5() {
		static_assert(field_signatures[jField<F>("JIS_B5")] != -1);
		return sat<F>("JIS_B5");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B6() {
		static_assert(field_signatures[jField<F>("JIS_B6")] != -1);
		return sat<F>("JIS_B6");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B7() {
		static_assert(field_signatures[jField<F>("JIS_B7")] != -1);
		return sat<F>("JIS_B7");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B8() {
		static_assert(field_signatures[jField<F>("JIS_B8")] != -1);
		return sat<F>("JIS_B8");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto JIS_B9() {
		static_assert(field_signatures[jField<F>("JIS_B9")] != -1);
		return sat<F>("JIS_B9");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto LEDGER() {
		static_assert(field_signatures[jField<F>("LEDGER")] != -1);
		return sat<F>("LEDGER");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto MONARCH_ENVELOPE() {
		static_assert(field_signatures[jField<F>("MONARCH_ENVELOPE")] != -1);
		return sat<F>("MONARCH_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_10X13_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_10X13_ENVELOPE")] != -1);
		return sat<F>("NA_10X13_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_10X14_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_10X14_ENVELOPE")] != -1);
		return sat<F>("NA_10X14_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_10X15_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_10X15_ENVELOPE")] != -1);
		return sat<F>("NA_10X15_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_5X7() {
		static_assert(field_signatures[jField<F>("NA_5X7")] != -1);
		return sat<F>("NA_5X7");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_6X9_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_6X9_ENVELOPE")] != -1);
		return sat<F>("NA_6X9_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_7X9_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_7X9_ENVELOPE")] != -1);
		return sat<F>("NA_7X9_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_8X10() {
		static_assert(field_signatures[jField<F>("NA_8X10")] != -1);
		return sat<F>("NA_8X10");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_9X11_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_9X11_ENVELOPE")] != -1);
		return sat<F>("NA_9X11_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_9X12_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_9X12_ENVELOPE")] != -1);
		return sat<F>("NA_9X12_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_LEGAL() {
		static_assert(field_signatures[jField<F>("NA_LEGAL")] != -1);
		return sat<F>("NA_LEGAL");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_LETTER() {
		static_assert(field_signatures[jField<F>("NA_LETTER")] != -1);
		return sat<F>("NA_LETTER");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_NUMBER_10_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_NUMBER_10_ENVELOPE")] != -1);
		return sat<F>("NA_NUMBER_10_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_NUMBER_11_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_NUMBER_11_ENVELOPE")] != -1);
		return sat<F>("NA_NUMBER_11_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_NUMBER_12_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_NUMBER_12_ENVELOPE")] != -1);
		return sat<F>("NA_NUMBER_12_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_NUMBER_14_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_NUMBER_14_ENVELOPE")] != -1);
		return sat<F>("NA_NUMBER_14_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto NA_NUMBER_9_ENVELOPE() {
		static_assert(field_signatures[jField<F>("NA_NUMBER_9_ENVELOPE")] != -1);
		return sat<F>("NA_NUMBER_9_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto PERSONAL_ENVELOPE() {
		static_assert(field_signatures[jField<F>("PERSONAL_ENVELOPE")] != -1);
		return sat<F>("PERSONAL_ENVELOPE");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto QUARTO() {
		static_assert(field_signatures[jField<F>("QUARTO")] != -1);
		return sat<F>("QUARTO");
	}

	template<typename F = ::javax::print::attribute::standard::MediaSizeName>
	static auto TABLOID() {
		static_assert(field_signatures[jField<F>("TABLOID")] != -1);
		return sat<F>("TABLOID");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
