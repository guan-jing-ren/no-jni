#ifndef javax_accessibility_AccessibleKeyBinding_HPP
#define javax_accessibility_AccessibleKeyBinding_HPP

#include "../../jfwd_decl.hpp"

class ::javax::accessibility::AccessibleKeyBinding : public jObject<::javax::accessibility::AccessibleKeyBinding, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_accessibility / "AccessibleKeyBinding";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Object(::jint)>("getAccessibleKeyBinding"), //
		jMethod<::jint()>("getAccessibleKeyBindingCount"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto getAccessibleKeyBinding(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getAccessibleKeyBinding")] != -1);
		return call<R>("getAccessibleKeyBinding", forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getAccessibleKeyBindingCount(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getAccessibleKeyBindingCount")] != -1);
		return call<R>("getAccessibleKeyBindingCount", forward<Args>(args)...);
	}

};

#endif
