#ifndef javax_accessibility_AccessibleBundle_HPP
#define javax_accessibility_AccessibleBundle_HPP

#include "../../jfwd_decl.hpp"

class ::javax::accessibility::AccessibleBundle : public jObject<::javax::accessibility::AccessibleBundle, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_accessibility / "AccessibleBundle";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::lang::String()>("toDisplayString"), //
		jMethod<::java::lang::String(::java::util::Locale)>("toDisplayString"), //
		jMethod<::java::lang::String()>("toString"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto toDisplayString(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("toDisplayString")] != -1);
		return call<R>("toDisplayString", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto toString(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("toString")] != -1);
		return call<R>("toString", forward<Args>(args)...);
	}

};

#endif
