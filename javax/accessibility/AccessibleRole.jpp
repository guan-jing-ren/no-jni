#ifndef javax_accessibility_AccessibleRole_HPP
#define javax_accessibility_AccessibleRole_HPP

#include "../../jfwd_decl.hpp"

class ::javax::accessibility::AccessibleRole : public jObject<::javax::accessibility::AccessibleRole, ::javax::accessibility::AccessibleBundle> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_accessibility / "AccessibleRole";

	constexpr static Enume field_signatures{
		jField<::javax::accessibility::AccessibleRole>("ALERT"), //
		jField<::javax::accessibility::AccessibleRole>("AWT_COMPONENT"), //
		jField<::javax::accessibility::AccessibleRole>("CANVAS"), //
		jField<::javax::accessibility::AccessibleRole>("CHECK_BOX"), //
		jField<::javax::accessibility::AccessibleRole>("COLOR_CHOOSER"), //
		jField<::javax::accessibility::AccessibleRole>("COLUMN_HEADER"), //
		jField<::javax::accessibility::AccessibleRole>("COMBO_BOX"), //
		jField<::javax::accessibility::AccessibleRole>("DATE_EDITOR"), //
		jField<::javax::accessibility::AccessibleRole>("DESKTOP_ICON"), //
		jField<::javax::accessibility::AccessibleRole>("DESKTOP_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("DIALOG"), //
		jField<::javax::accessibility::AccessibleRole>("DIRECTORY_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("EDITBAR"), //
		jField<::javax::accessibility::AccessibleRole>("FILE_CHOOSER"), //
		jField<::javax::accessibility::AccessibleRole>("FILLER"), //
		jField<::javax::accessibility::AccessibleRole>("FONT_CHOOSER"), //
		jField<::javax::accessibility::AccessibleRole>("FOOTER"), //
		jField<::javax::accessibility::AccessibleRole>("FRAME"), //
		jField<::javax::accessibility::AccessibleRole>("GLASS_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("GROUP_BOX"), //
		jField<::javax::accessibility::AccessibleRole>("HEADER"), //
		jField<::javax::accessibility::AccessibleRole>("HTML_CONTAINER"), //
		jField<::javax::accessibility::AccessibleRole>("HYPERLINK"), //
		jField<::javax::accessibility::AccessibleRole>("ICON"), //
		jField<::javax::accessibility::AccessibleRole>("INTERNAL_FRAME"), //
		jField<::javax::accessibility::AccessibleRole>("LABEL"), //
		jField<::javax::accessibility::AccessibleRole>("LAYERED_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("LIST"), //
		jField<::javax::accessibility::AccessibleRole>("LIST_ITEM"), //
		jField<::javax::accessibility::AccessibleRole>("MENU"), //
		jField<::javax::accessibility::AccessibleRole>("MENU_BAR"), //
		jField<::javax::accessibility::AccessibleRole>("MENU_ITEM"), //
		jField<::javax::accessibility::AccessibleRole>("OPTION_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("PAGE_TAB"), //
		jField<::javax::accessibility::AccessibleRole>("PAGE_TAB_LIST"), //
		jField<::javax::accessibility::AccessibleRole>("PANEL"), //
		jField<::javax::accessibility::AccessibleRole>("PARAGRAPH"), //
		jField<::javax::accessibility::AccessibleRole>("PASSWORD_TEXT"), //
		jField<::javax::accessibility::AccessibleRole>("POPUP_MENU"), //
		jField<::javax::accessibility::AccessibleRole>("PROGRESS_BAR"), //
		jField<::javax::accessibility::AccessibleRole>("PROGRESS_MONITOR"), //
		jField<::javax::accessibility::AccessibleRole>("PUSH_BUTTON"), //
		jField<::javax::accessibility::AccessibleRole>("RADIO_BUTTON"), //
		jField<::javax::accessibility::AccessibleRole>("ROOT_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("ROW_HEADER"), //
		jField<::javax::accessibility::AccessibleRole>("RULER"), //
		jField<::javax::accessibility::AccessibleRole>("SCROLL_BAR"), //
		jField<::javax::accessibility::AccessibleRole>("SCROLL_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("SEPARATOR"), //
		jField<::javax::accessibility::AccessibleRole>("SLIDER"), //
		jField<::javax::accessibility::AccessibleRole>("SPIN_BOX"), //
		jField<::javax::accessibility::AccessibleRole>("SPLIT_PANE"), //
		jField<::javax::accessibility::AccessibleRole>("STATUS_BAR"), //
		jField<::javax::accessibility::AccessibleRole>("SWING_COMPONENT"), //
		jField<::javax::accessibility::AccessibleRole>("TABLE"), //
		jField<::javax::accessibility::AccessibleRole>("TEXT"), //
		jField<::javax::accessibility::AccessibleRole>("TOGGLE_BUTTON"), //
		jField<::javax::accessibility::AccessibleRole>("TOOL_BAR"), //
		jField<::javax::accessibility::AccessibleRole>("TOOL_TIP"), //
		jField<::javax::accessibility::AccessibleRole>("TREE"), //
		jField<::javax::accessibility::AccessibleRole>("UNKNOWN"), //
		jField<::javax::accessibility::AccessibleRole>("VIEWPORT"), //
		jField<::javax::accessibility::AccessibleRole>("WINDOW"), //
	};

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto ALERT() {
		static_assert(field_signatures[jField<F>("ALERT")] != -1);
		return sat<F>("ALERT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto AWT_COMPONENT() {
		static_assert(field_signatures[jField<F>("AWT_COMPONENT")] != -1);
		return sat<F>("AWT_COMPONENT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto CANVAS() {
		static_assert(field_signatures[jField<F>("CANVAS")] != -1);
		return sat<F>("CANVAS");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto CHECK_BOX() {
		static_assert(field_signatures[jField<F>("CHECK_BOX")] != -1);
		return sat<F>("CHECK_BOX");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto COLOR_CHOOSER() {
		static_assert(field_signatures[jField<F>("COLOR_CHOOSER")] != -1);
		return sat<F>("COLOR_CHOOSER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto COLUMN_HEADER() {
		static_assert(field_signatures[jField<F>("COLUMN_HEADER")] != -1);
		return sat<F>("COLUMN_HEADER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto COMBO_BOX() {
		static_assert(field_signatures[jField<F>("COMBO_BOX")] != -1);
		return sat<F>("COMBO_BOX");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto DATE_EDITOR() {
		static_assert(field_signatures[jField<F>("DATE_EDITOR")] != -1);
		return sat<F>("DATE_EDITOR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto DESKTOP_ICON() {
		static_assert(field_signatures[jField<F>("DESKTOP_ICON")] != -1);
		return sat<F>("DESKTOP_ICON");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto DESKTOP_PANE() {
		static_assert(field_signatures[jField<F>("DESKTOP_PANE")] != -1);
		return sat<F>("DESKTOP_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto DIALOG() {
		static_assert(field_signatures[jField<F>("DIALOG")] != -1);
		return sat<F>("DIALOG");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto DIRECTORY_PANE() {
		static_assert(field_signatures[jField<F>("DIRECTORY_PANE")] != -1);
		return sat<F>("DIRECTORY_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto EDITBAR() {
		static_assert(field_signatures[jField<F>("EDITBAR")] != -1);
		return sat<F>("EDITBAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto FILE_CHOOSER() {
		static_assert(field_signatures[jField<F>("FILE_CHOOSER")] != -1);
		return sat<F>("FILE_CHOOSER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto FILLER() {
		static_assert(field_signatures[jField<F>("FILLER")] != -1);
		return sat<F>("FILLER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto FONT_CHOOSER() {
		static_assert(field_signatures[jField<F>("FONT_CHOOSER")] != -1);
		return sat<F>("FONT_CHOOSER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto FOOTER() {
		static_assert(field_signatures[jField<F>("FOOTER")] != -1);
		return sat<F>("FOOTER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto FRAME() {
		static_assert(field_signatures[jField<F>("FRAME")] != -1);
		return sat<F>("FRAME");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto GLASS_PANE() {
		static_assert(field_signatures[jField<F>("GLASS_PANE")] != -1);
		return sat<F>("GLASS_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto GROUP_BOX() {
		static_assert(field_signatures[jField<F>("GROUP_BOX")] != -1);
		return sat<F>("GROUP_BOX");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto HEADER() {
		static_assert(field_signatures[jField<F>("HEADER")] != -1);
		return sat<F>("HEADER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto HTML_CONTAINER() {
		static_assert(field_signatures[jField<F>("HTML_CONTAINER")] != -1);
		return sat<F>("HTML_CONTAINER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto HYPERLINK() {
		static_assert(field_signatures[jField<F>("HYPERLINK")] != -1);
		return sat<F>("HYPERLINK");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto ICON() {
		static_assert(field_signatures[jField<F>("ICON")] != -1);
		return sat<F>("ICON");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto INTERNAL_FRAME() {
		static_assert(field_signatures[jField<F>("INTERNAL_FRAME")] != -1);
		return sat<F>("INTERNAL_FRAME");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto LABEL() {
		static_assert(field_signatures[jField<F>("LABEL")] != -1);
		return sat<F>("LABEL");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto LAYERED_PANE() {
		static_assert(field_signatures[jField<F>("LAYERED_PANE")] != -1);
		return sat<F>("LAYERED_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto LIST() {
		static_assert(field_signatures[jField<F>("LIST")] != -1);
		return sat<F>("LIST");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto LIST_ITEM() {
		static_assert(field_signatures[jField<F>("LIST_ITEM")] != -1);
		return sat<F>("LIST_ITEM");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto MENU() {
		static_assert(field_signatures[jField<F>("MENU")] != -1);
		return sat<F>("MENU");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto MENU_BAR() {
		static_assert(field_signatures[jField<F>("MENU_BAR")] != -1);
		return sat<F>("MENU_BAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto MENU_ITEM() {
		static_assert(field_signatures[jField<F>("MENU_ITEM")] != -1);
		return sat<F>("MENU_ITEM");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto OPTION_PANE() {
		static_assert(field_signatures[jField<F>("OPTION_PANE")] != -1);
		return sat<F>("OPTION_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PAGE_TAB() {
		static_assert(field_signatures[jField<F>("PAGE_TAB")] != -1);
		return sat<F>("PAGE_TAB");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PAGE_TAB_LIST() {
		static_assert(field_signatures[jField<F>("PAGE_TAB_LIST")] != -1);
		return sat<F>("PAGE_TAB_LIST");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PANEL() {
		static_assert(field_signatures[jField<F>("PANEL")] != -1);
		return sat<F>("PANEL");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PARAGRAPH() {
		static_assert(field_signatures[jField<F>("PARAGRAPH")] != -1);
		return sat<F>("PARAGRAPH");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PASSWORD_TEXT() {
		static_assert(field_signatures[jField<F>("PASSWORD_TEXT")] != -1);
		return sat<F>("PASSWORD_TEXT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto POPUP_MENU() {
		static_assert(field_signatures[jField<F>("POPUP_MENU")] != -1);
		return sat<F>("POPUP_MENU");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PROGRESS_BAR() {
		static_assert(field_signatures[jField<F>("PROGRESS_BAR")] != -1);
		return sat<F>("PROGRESS_BAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PROGRESS_MONITOR() {
		static_assert(field_signatures[jField<F>("PROGRESS_MONITOR")] != -1);
		return sat<F>("PROGRESS_MONITOR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto PUSH_BUTTON() {
		static_assert(field_signatures[jField<F>("PUSH_BUTTON")] != -1);
		return sat<F>("PUSH_BUTTON");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto RADIO_BUTTON() {
		static_assert(field_signatures[jField<F>("RADIO_BUTTON")] != -1);
		return sat<F>("RADIO_BUTTON");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto ROOT_PANE() {
		static_assert(field_signatures[jField<F>("ROOT_PANE")] != -1);
		return sat<F>("ROOT_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto ROW_HEADER() {
		static_assert(field_signatures[jField<F>("ROW_HEADER")] != -1);
		return sat<F>("ROW_HEADER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto RULER() {
		static_assert(field_signatures[jField<F>("RULER")] != -1);
		return sat<F>("RULER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SCROLL_BAR() {
		static_assert(field_signatures[jField<F>("SCROLL_BAR")] != -1);
		return sat<F>("SCROLL_BAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SCROLL_PANE() {
		static_assert(field_signatures[jField<F>("SCROLL_PANE")] != -1);
		return sat<F>("SCROLL_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SEPARATOR() {
		static_assert(field_signatures[jField<F>("SEPARATOR")] != -1);
		return sat<F>("SEPARATOR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SLIDER() {
		static_assert(field_signatures[jField<F>("SLIDER")] != -1);
		return sat<F>("SLIDER");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SPIN_BOX() {
		static_assert(field_signatures[jField<F>("SPIN_BOX")] != -1);
		return sat<F>("SPIN_BOX");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SPLIT_PANE() {
		static_assert(field_signatures[jField<F>("SPLIT_PANE")] != -1);
		return sat<F>("SPLIT_PANE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto STATUS_BAR() {
		static_assert(field_signatures[jField<F>("STATUS_BAR")] != -1);
		return sat<F>("STATUS_BAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto SWING_COMPONENT() {
		static_assert(field_signatures[jField<F>("SWING_COMPONENT")] != -1);
		return sat<F>("SWING_COMPONENT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TABLE() {
		static_assert(field_signatures[jField<F>("TABLE")] != -1);
		return sat<F>("TABLE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TEXT() {
		static_assert(field_signatures[jField<F>("TEXT")] != -1);
		return sat<F>("TEXT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TOGGLE_BUTTON() {
		static_assert(field_signatures[jField<F>("TOGGLE_BUTTON")] != -1);
		return sat<F>("TOGGLE_BUTTON");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TOOL_BAR() {
		static_assert(field_signatures[jField<F>("TOOL_BAR")] != -1);
		return sat<F>("TOOL_BAR");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TOOL_TIP() {
		static_assert(field_signatures[jField<F>("TOOL_TIP")] != -1);
		return sat<F>("TOOL_TIP");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto TREE() {
		static_assert(field_signatures[jField<F>("TREE")] != -1);
		return sat<F>("TREE");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto UNKNOWN() {
		static_assert(field_signatures[jField<F>("UNKNOWN")] != -1);
		return sat<F>("UNKNOWN");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto VIEWPORT() {
		static_assert(field_signatures[jField<F>("VIEWPORT")] != -1);
		return sat<F>("VIEWPORT");
	}

	template<typename F = ::javax::accessibility::AccessibleRole>
	static auto WINDOW() {
		static_assert(field_signatures[jField<F>("WINDOW")] != -1);
		return sat<F>("WINDOW");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
