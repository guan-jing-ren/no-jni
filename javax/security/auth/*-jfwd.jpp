#ifndef javax_security_auth_JPP
#define javax_security_auth_JPP

namespace javax::security::auth { class AuthPermission; }
template<> constexpr auto signature<::javax::security::auth::AuthPermission> = ::javax_security_auth / "AuthPermission";
namespace javax::security::auth { class DestroyFailedException; }
template<> constexpr auto signature<::javax::security::auth::DestroyFailedException> = ::javax_security_auth / "DestroyFailedException";
namespace javax::security::auth { class Destroyable; }
template<> constexpr auto signature<::javax::security::auth::Destroyable> = ::javax_security_auth / "Destroyable";
namespace javax::security::auth { class Policy; }
template<> constexpr auto signature<::javax::security::auth::Policy> = ::javax_security_auth / "Policy";
namespace javax::security::auth { class Policy$1; }
template<> constexpr auto signature<::javax::security::auth::Policy$1> = ::javax_security_auth / "Policy$1";
namespace javax::security::auth { class Policy$2; }
template<> constexpr auto signature<::javax::security::auth::Policy$2> = ::javax_security_auth / "Policy$2";
namespace javax::security::auth { class Policy$3; }
template<> constexpr auto signature<::javax::security::auth::Policy$3> = ::javax_security_auth / "Policy$3";
namespace javax::security::auth { class Policy$4; }
template<> constexpr auto signature<::javax::security::auth::Policy$4> = ::javax_security_auth / "Policy$4";
namespace javax::security::auth { class PrivateCredentialPermission; }
template<> constexpr auto signature<::javax::security::auth::PrivateCredentialPermission> = ::javax_security_auth / "PrivateCredentialPermission";
namespace javax::security::auth { class PrivateCredentialPermission$CredOwner; }
template<> constexpr auto signature<::javax::security::auth::PrivateCredentialPermission$CredOwner> = ::javax_security_auth / "PrivateCredentialPermission$CredOwner";
namespace javax::security::auth { class RefreshFailedException; }
template<> constexpr auto signature<::javax::security::auth::RefreshFailedException> = ::javax_security_auth / "RefreshFailedException";
namespace javax::security::auth { class Refreshable; }
template<> constexpr auto signature<::javax::security::auth::Refreshable> = ::javax_security_auth / "Refreshable";
namespace javax::security::auth { class Subject; }
template<> constexpr auto signature<::javax::security::auth::Subject> = ::javax_security_auth / "Subject";
namespace javax::security::auth { class Subject$1; }
template<> constexpr auto signature<::javax::security::auth::Subject$1> = ::javax_security_auth / "Subject$1";
namespace javax::security::auth { class Subject$2; }
template<> constexpr auto signature<::javax::security::auth::Subject$2> = ::javax_security_auth / "Subject$2";
namespace javax::security::auth { class Subject$AuthPermissionHolder; }
template<> constexpr auto signature<::javax::security::auth::Subject$AuthPermissionHolder> = ::javax_security_auth / "Subject$AuthPermissionHolder";
namespace javax::security::auth { class Subject$ClassSet; }
template<> constexpr auto signature<::javax::security::auth::Subject$ClassSet> = ::javax_security_auth / "Subject$ClassSet";
namespace javax::security::auth { class Subject$ClassSet$1; }
template<> constexpr auto signature<::javax::security::auth::Subject$ClassSet$1> = ::javax_security_auth / "Subject$ClassSet$1";
namespace javax::security::auth { class Subject$SecureSet; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet> = ::javax_security_auth / "Subject$SecureSet";
namespace javax::security::auth { class Subject$SecureSet$1; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$1> = ::javax_security_auth / "Subject$SecureSet$1";
namespace javax::security::auth { class Subject$SecureSet$2; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$2> = ::javax_security_auth / "Subject$SecureSet$2";
namespace javax::security::auth { class Subject$SecureSet$3; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$3> = ::javax_security_auth / "Subject$SecureSet$3";
namespace javax::security::auth { class Subject$SecureSet$4; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$4> = ::javax_security_auth / "Subject$SecureSet$4";
namespace javax::security::auth { class Subject$SecureSet$5; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$5> = ::javax_security_auth / "Subject$SecureSet$5";
namespace javax::security::auth { class Subject$SecureSet$6; }
template<> constexpr auto signature<::javax::security::auth::Subject$SecureSet$6> = ::javax_security_auth / "Subject$SecureSet$6";
namespace javax::security::auth { class SubjectDomainCombiner; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner> = ::javax_security_auth / "SubjectDomainCombiner";
namespace javax::security::auth { class SubjectDomainCombiner$1; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$1> = ::javax_security_auth / "SubjectDomainCombiner$1";
namespace javax::security::auth { class SubjectDomainCombiner$2; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$2> = ::javax_security_auth / "SubjectDomainCombiner$2";
namespace javax::security::auth { class SubjectDomainCombiner$3; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$3> = ::javax_security_auth / "SubjectDomainCombiner$3";
namespace javax::security::auth { class SubjectDomainCombiner$4; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$4> = ::javax_security_auth / "SubjectDomainCombiner$4";
namespace javax::security::auth { class SubjectDomainCombiner$5; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$5> = ::javax_security_auth / "SubjectDomainCombiner$5";
namespace javax::security::auth { class SubjectDomainCombiner$WeakKeyValueMap; }
template<> constexpr auto signature<::javax::security::auth::SubjectDomainCombiner$WeakKeyValueMap> = ::javax_security_auth / "SubjectDomainCombiner$WeakKeyValueMap";

#endif
