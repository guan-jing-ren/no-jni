#ifndef javax_security_auth_callback_UnsupportedCallbackException_HPP
#define javax_security_auth_callback_UnsupportedCallbackException_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::security::auth::callback::UnsupportedCallbackException : public jObject<::javax::security::auth::callback::UnsupportedCallbackException, ::java::lang::Exception> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_security_auth_callback / "UnsupportedCallbackException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::javax::security::auth::callback::Callback)>(), //
		jConstructor<::jvoid(::javax::security::auth::callback::Callback, ::java::lang::String)>(), //
		jMethod<::javax::security::auth::callback::Callback()>("getCallback"), //
	};

	template<typename R = ::javax::security::auth::callback::Callback, typename... Args>
	auto getCallback(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCallback")] != -1);
		return call<R>("getCallback", std::forward<Args>(args)...);
	}

};

#endif
