#ifndef javax_swing_event_MenuKeyEvent_HPP
#define javax_swing_event_MenuKeyEvent_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::event::MenuKeyEvent : public jObject<::javax::swing::event::MenuKeyEvent, ::java::awt::event::KeyEvent> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_event / "MenuKeyEvent";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::awt::Component, ::jint, ::jlong, ::jint, ::jint, ::jchar, ::javax::swing::MenuElement *, ::javax::swing::MenuSelectionManager)>(), //
		jMethod<::javax::swing::MenuSelectionManager()>("getMenuSelectionManager"), //
		jMethod<::javax::swing::MenuElement *()>("getPath"), //
	};

	template<typename R = ::javax::swing::MenuSelectionManager, typename... Args>
	auto getMenuSelectionManager(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getMenuSelectionManager")] != -1);
		return call<R>("getMenuSelectionManager", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::MenuElement *, typename... Args>
	auto getPath(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getPath")] != -1);
		return call<R>("getPath", forward<Args>(args)...);
	}

};

#endif
