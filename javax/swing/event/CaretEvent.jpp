#ifndef javax_swing_event_CaretEvent_HPP
#define javax_swing_event_CaretEvent_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::event::CaretEvent : public jObject<::javax::swing::event::CaretEvent, ::java::util::EventObject> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_event / "CaretEvent";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::Object)>(), //
		jMethod<::jint()>("getDot"), //
		jMethod<::jint()>("getMark"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getDot(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDot")] != -1);
		return call<R>("getDot", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getMark(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMark")] != -1);
		return call<R>("getMark", std::forward<Args>(args)...);
	}

};

#endif
