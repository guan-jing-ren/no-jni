#ifndef javax_swing_event_ChangeListener_HPP
#define javax_swing_event_ChangeListener_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::event::ChangeListener : public jObject<::javax::swing::event::ChangeListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_event / "ChangeListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::javax::swing::event::ChangeEvent)>("stateChanged"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto stateChanged(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("stateChanged")] != -1);
		return call<R>("stateChanged", std::forward<Args>(args)...);
	}

};

#endif
