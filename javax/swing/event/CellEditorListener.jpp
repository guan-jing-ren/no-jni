#ifndef javax_swing_event_CellEditorListener_HPP
#define javax_swing_event_CellEditorListener_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::event::CellEditorListener : public jObject<::javax::swing::event::CellEditorListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_event / "CellEditorListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::javax::swing::event::ChangeEvent)>("editingCanceled"), //
		jMethod<::jvoid(::javax::swing::event::ChangeEvent)>("editingStopped"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto editingCanceled(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("editingCanceled")] != -1);
		return call<R>("editingCanceled", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto editingStopped(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("editingStopped")] != -1);
		return call<R>("editingStopped", std::forward<Args>(args)...);
	}

};

#endif
