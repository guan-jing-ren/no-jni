#ifndef javax_swing_text_TabableView_HPP
#define javax_swing_text_TabableView_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::text::TabableView : public jObject<::javax::swing::text::TabableView, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_text / "TabableView";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jfloat(::jint, ::jint)>("getPartialSpan"), //
		jMethod<::jfloat(::jfloat, ::javax::swing::text::TabExpander)>("getTabbedSpan"), //
	};

	template<typename R = ::jfloat, typename... Args>
	auto getPartialSpan(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getPartialSpan")] != -1);
		return call<R>("getPartialSpan", forward<Args>(args)...);
	}

	template<typename R = ::jfloat, typename... Args>
	auto getTabbedSpan(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getTabbedSpan")] != -1);
		return call<R>("getTabbedSpan", forward<Args>(args)...);
	}

};

#endif
