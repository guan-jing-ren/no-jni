#ifndef javax_swing_text_JPP
#define javax_swing_text_JPP

namespace javax::swing::text { class AbstractDocument; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument> = ::javax_swing_text / "AbstractDocument";
namespace javax::swing::text { class AbstractDocument$1; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$1> = ::javax_swing_text / "AbstractDocument$1";
namespace javax::swing::text { class AbstractDocument$2; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$2> = ::javax_swing_text / "AbstractDocument$2";
namespace javax::swing::text { class AbstractDocument$AbstractElement; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$AbstractElement> = ::javax_swing_text / "AbstractDocument$AbstractElement";
namespace javax::swing::text { class AbstractDocument$AttributeContext; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$AttributeContext> = ::javax_swing_text / "AbstractDocument$AttributeContext";
namespace javax::swing::text { class AbstractDocument$BidiElement; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$BidiElement> = ::javax_swing_text / "AbstractDocument$BidiElement";
namespace javax::swing::text { class AbstractDocument$BidiRootElement; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$BidiRootElement> = ::javax_swing_text / "AbstractDocument$BidiRootElement";
namespace javax::swing::text { class AbstractDocument$BranchElement; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$BranchElement> = ::javax_swing_text / "AbstractDocument$BranchElement";
namespace javax::swing::text { class AbstractDocument$Content; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$Content> = ::javax_swing_text / "AbstractDocument$Content";
namespace javax::swing::text { class AbstractDocument$DefaultDocumentEvent; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$DefaultDocumentEvent> = ::javax_swing_text / "AbstractDocument$DefaultDocumentEvent";
namespace javax::swing::text { class AbstractDocument$DefaultFilterBypass; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$DefaultFilterBypass> = ::javax_swing_text / "AbstractDocument$DefaultFilterBypass";
namespace javax::swing::text { class AbstractDocument$ElementEdit; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$ElementEdit> = ::javax_swing_text / "AbstractDocument$ElementEdit";
namespace javax::swing::text { class AbstractDocument$LeafElement; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$LeafElement> = ::javax_swing_text / "AbstractDocument$LeafElement";
namespace javax::swing::text { class AbstractDocument$UndoRedoDocumentEvent; }
template<> constexpr auto signature<::javax::swing::text::AbstractDocument$UndoRedoDocumentEvent> = ::javax_swing_text / "AbstractDocument$UndoRedoDocumentEvent";
namespace javax::swing::text { class AbstractWriter; }
template<> constexpr auto signature<::javax::swing::text::AbstractWriter> = ::javax_swing_text / "AbstractWriter";
namespace javax::swing::text { class AsyncBoxView; }
template<> constexpr auto signature<::javax::swing::text::AsyncBoxView> = ::javax_swing_text / "AsyncBoxView";
namespace javax::swing::text { class AsyncBoxView$ChildLocator; }
template<> constexpr auto signature<::javax::swing::text::AsyncBoxView$ChildLocator> = ::javax_swing_text / "AsyncBoxView$ChildLocator";
namespace javax::swing::text { class AsyncBoxView$ChildState; }
template<> constexpr auto signature<::javax::swing::text::AsyncBoxView$ChildState> = ::javax_swing_text / "AsyncBoxView$ChildState";
namespace javax::swing::text { class AsyncBoxView$FlushTask; }
template<> constexpr auto signature<::javax::swing::text::AsyncBoxView$FlushTask> = ::javax_swing_text / "AsyncBoxView$FlushTask";
namespace javax::swing::text { class AttributeSet; }
template<> constexpr auto signature<::javax::swing::text::AttributeSet> = ::javax_swing_text / "AttributeSet";
namespace javax::swing::text { class AttributeSet$CharacterAttribute; }
template<> constexpr auto signature<::javax::swing::text::AttributeSet$CharacterAttribute> = ::javax_swing_text / "AttributeSet$CharacterAttribute";
namespace javax::swing::text { class AttributeSet$ColorAttribute; }
template<> constexpr auto signature<::javax::swing::text::AttributeSet$ColorAttribute> = ::javax_swing_text / "AttributeSet$ColorAttribute";
namespace javax::swing::text { class AttributeSet$FontAttribute; }
template<> constexpr auto signature<::javax::swing::text::AttributeSet$FontAttribute> = ::javax_swing_text / "AttributeSet$FontAttribute";
namespace javax::swing::text { class AttributeSet$ParagraphAttribute; }
template<> constexpr auto signature<::javax::swing::text::AttributeSet$ParagraphAttribute> = ::javax_swing_text / "AttributeSet$ParagraphAttribute";
namespace javax::swing::text { class BadLocationException; }
template<> constexpr auto signature<::javax::swing::text::BadLocationException> = ::javax_swing_text / "BadLocationException";
namespace javax::swing::text { class BoxView; }
template<> constexpr auto signature<::javax::swing::text::BoxView> = ::javax_swing_text / "BoxView";
namespace javax::swing::text { class Caret; }
template<> constexpr auto signature<::javax::swing::text::Caret> = ::javax_swing_text / "Caret";
namespace javax::swing::text { class ChangedCharSetException; }
template<> constexpr auto signature<::javax::swing::text::ChangedCharSetException> = ::javax_swing_text / "ChangedCharSetException";
namespace javax::swing::text { class ComponentView; }
template<> constexpr auto signature<::javax::swing::text::ComponentView> = ::javax_swing_text / "ComponentView";
namespace javax::swing::text { class ComponentView$1; }
template<> constexpr auto signature<::javax::swing::text::ComponentView$1> = ::javax_swing_text / "ComponentView$1";
namespace javax::swing::text { class ComponentView$Invalidator; }
template<> constexpr auto signature<::javax::swing::text::ComponentView$Invalidator> = ::javax_swing_text / "ComponentView$Invalidator";
namespace javax::swing::text { class CompositeView; }
template<> constexpr auto signature<::javax::swing::text::CompositeView> = ::javax_swing_text / "CompositeView";
namespace javax::swing::text { class DateFormatter; }
template<> constexpr auto signature<::javax::swing::text::DateFormatter> = ::javax_swing_text / "DateFormatter";
namespace javax::swing::text { class DefaultCaret; }
template<> constexpr auto signature<::javax::swing::text::DefaultCaret> = ::javax_swing_text / "DefaultCaret";
namespace javax::swing::text { class DefaultCaret$1; }
template<> constexpr auto signature<::javax::swing::text::DefaultCaret$1> = ::javax_swing_text / "DefaultCaret$1";
namespace javax::swing::text { class DefaultCaret$DefaultFilterBypass; }
template<> constexpr auto signature<::javax::swing::text::DefaultCaret$DefaultFilterBypass> = ::javax_swing_text / "DefaultCaret$DefaultFilterBypass";
namespace javax::swing::text { class DefaultCaret$Handler; }
template<> constexpr auto signature<::javax::swing::text::DefaultCaret$Handler> = ::javax_swing_text / "DefaultCaret$Handler";
namespace javax::swing::text { class DefaultCaret$SafeScroller; }
template<> constexpr auto signature<::javax::swing::text::DefaultCaret$SafeScroller> = ::javax_swing_text / "DefaultCaret$SafeScroller";
namespace javax::swing::text { class DefaultEditorKit; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit> = ::javax_swing_text / "DefaultEditorKit";
namespace javax::swing::text { class DefaultEditorKit$BeepAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$BeepAction> = ::javax_swing_text / "DefaultEditorKit$BeepAction";
namespace javax::swing::text { class DefaultEditorKit$BeginAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$BeginAction> = ::javax_swing_text / "DefaultEditorKit$BeginAction";
namespace javax::swing::text { class DefaultEditorKit$BeginLineAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$BeginLineAction> = ::javax_swing_text / "DefaultEditorKit$BeginLineAction";
namespace javax::swing::text { class DefaultEditorKit$BeginParagraphAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$BeginParagraphAction> = ::javax_swing_text / "DefaultEditorKit$BeginParagraphAction";
namespace javax::swing::text { class DefaultEditorKit$BeginWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$BeginWordAction> = ::javax_swing_text / "DefaultEditorKit$BeginWordAction";
namespace javax::swing::text { class DefaultEditorKit$CopyAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$CopyAction> = ::javax_swing_text / "DefaultEditorKit$CopyAction";
namespace javax::swing::text { class DefaultEditorKit$CutAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$CutAction> = ::javax_swing_text / "DefaultEditorKit$CutAction";
namespace javax::swing::text { class DefaultEditorKit$DefaultKeyTypedAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$DefaultKeyTypedAction> = ::javax_swing_text / "DefaultEditorKit$DefaultKeyTypedAction";
namespace javax::swing::text { class DefaultEditorKit$DeleteNextCharAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$DeleteNextCharAction> = ::javax_swing_text / "DefaultEditorKit$DeleteNextCharAction";
namespace javax::swing::text { class DefaultEditorKit$DeletePrevCharAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$DeletePrevCharAction> = ::javax_swing_text / "DefaultEditorKit$DeletePrevCharAction";
namespace javax::swing::text { class DefaultEditorKit$DeleteWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$DeleteWordAction> = ::javax_swing_text / "DefaultEditorKit$DeleteWordAction";
namespace javax::swing::text { class DefaultEditorKit$DumpModelAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$DumpModelAction> = ::javax_swing_text / "DefaultEditorKit$DumpModelAction";
namespace javax::swing::text { class DefaultEditorKit$EndAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$EndAction> = ::javax_swing_text / "DefaultEditorKit$EndAction";
namespace javax::swing::text { class DefaultEditorKit$EndLineAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$EndLineAction> = ::javax_swing_text / "DefaultEditorKit$EndLineAction";
namespace javax::swing::text { class DefaultEditorKit$EndParagraphAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$EndParagraphAction> = ::javax_swing_text / "DefaultEditorKit$EndParagraphAction";
namespace javax::swing::text { class DefaultEditorKit$EndWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$EndWordAction> = ::javax_swing_text / "DefaultEditorKit$EndWordAction";
namespace javax::swing::text { class DefaultEditorKit$InsertBreakAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$InsertBreakAction> = ::javax_swing_text / "DefaultEditorKit$InsertBreakAction";
namespace javax::swing::text { class DefaultEditorKit$InsertContentAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$InsertContentAction> = ::javax_swing_text / "DefaultEditorKit$InsertContentAction";
namespace javax::swing::text { class DefaultEditorKit$InsertTabAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$InsertTabAction> = ::javax_swing_text / "DefaultEditorKit$InsertTabAction";
namespace javax::swing::text { class DefaultEditorKit$NextVisualPositionAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$NextVisualPositionAction> = ::javax_swing_text / "DefaultEditorKit$NextVisualPositionAction";
namespace javax::swing::text { class DefaultEditorKit$NextWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$NextWordAction> = ::javax_swing_text / "DefaultEditorKit$NextWordAction";
namespace javax::swing::text { class DefaultEditorKit$PageAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$PageAction> = ::javax_swing_text / "DefaultEditorKit$PageAction";
namespace javax::swing::text { class DefaultEditorKit$PasteAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$PasteAction> = ::javax_swing_text / "DefaultEditorKit$PasteAction";
namespace javax::swing::text { class DefaultEditorKit$PreviousWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$PreviousWordAction> = ::javax_swing_text / "DefaultEditorKit$PreviousWordAction";
namespace javax::swing::text { class DefaultEditorKit$ReadOnlyAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$ReadOnlyAction> = ::javax_swing_text / "DefaultEditorKit$ReadOnlyAction";
namespace javax::swing::text { class DefaultEditorKit$SelectAllAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$SelectAllAction> = ::javax_swing_text / "DefaultEditorKit$SelectAllAction";
namespace javax::swing::text { class DefaultEditorKit$SelectLineAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$SelectLineAction> = ::javax_swing_text / "DefaultEditorKit$SelectLineAction";
namespace javax::swing::text { class DefaultEditorKit$SelectParagraphAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$SelectParagraphAction> = ::javax_swing_text / "DefaultEditorKit$SelectParagraphAction";
namespace javax::swing::text { class DefaultEditorKit$SelectWordAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$SelectWordAction> = ::javax_swing_text / "DefaultEditorKit$SelectWordAction";
namespace javax::swing::text { class DefaultEditorKit$ToggleComponentOrientationAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$ToggleComponentOrientationAction> = ::javax_swing_text / "DefaultEditorKit$ToggleComponentOrientationAction";
namespace javax::swing::text { class DefaultEditorKit$UnselectAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$UnselectAction> = ::javax_swing_text / "DefaultEditorKit$UnselectAction";
namespace javax::swing::text { class DefaultEditorKit$VerticalPageAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$VerticalPageAction> = ::javax_swing_text / "DefaultEditorKit$VerticalPageAction";
namespace javax::swing::text { class DefaultEditorKit$WritableAction; }
template<> constexpr auto signature<::javax::swing::text::DefaultEditorKit$WritableAction> = ::javax_swing_text / "DefaultEditorKit$WritableAction";
namespace javax::swing::text { class DefaultFormatter; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatter> = ::javax_swing_text / "DefaultFormatter";
namespace javax::swing::text { class DefaultFormatter$1; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatter$1> = ::javax_swing_text / "DefaultFormatter$1";
namespace javax::swing::text { class DefaultFormatter$DefaultDocumentFilter; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatter$DefaultDocumentFilter> = ::javax_swing_text / "DefaultFormatter$DefaultDocumentFilter";
namespace javax::swing::text { class DefaultFormatter$DefaultNavigationFilter; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatter$DefaultNavigationFilter> = ::javax_swing_text / "DefaultFormatter$DefaultNavigationFilter";
namespace javax::swing::text { class DefaultFormatter$ReplaceHolder; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatter$ReplaceHolder> = ::javax_swing_text / "DefaultFormatter$ReplaceHolder";
namespace javax::swing::text { class DefaultFormatterFactory; }
template<> constexpr auto signature<::javax::swing::text::DefaultFormatterFactory> = ::javax_swing_text / "DefaultFormatterFactory";
namespace javax::swing::text { class DefaultHighlighter; }
template<> constexpr auto signature<::javax::swing::text::DefaultHighlighter> = ::javax_swing_text / "DefaultHighlighter";
namespace javax::swing::text { class DefaultHighlighter$DefaultHighlightPainter; }
template<> constexpr auto signature<::javax::swing::text::DefaultHighlighter$DefaultHighlightPainter> = ::javax_swing_text / "DefaultHighlighter$DefaultHighlightPainter";
namespace javax::swing::text { class DefaultHighlighter$HighlightInfo; }
template<> constexpr auto signature<::javax::swing::text::DefaultHighlighter$HighlightInfo> = ::javax_swing_text / "DefaultHighlighter$HighlightInfo";
namespace javax::swing::text { class DefaultHighlighter$LayeredHighlightInfo; }
template<> constexpr auto signature<::javax::swing::text::DefaultHighlighter$LayeredHighlightInfo> = ::javax_swing_text / "DefaultHighlighter$LayeredHighlightInfo";
namespace javax::swing::text { class DefaultHighlighter$SafeDamager; }
template<> constexpr auto signature<::javax::swing::text::DefaultHighlighter$SafeDamager> = ::javax_swing_text / "DefaultHighlighter$SafeDamager";
namespace javax::swing::text { class DefaultStyledDocument; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument> = ::javax_swing_text / "DefaultStyledDocument";
namespace javax::swing::text { class DefaultStyledDocument$AbstractChangeHandler; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$AbstractChangeHandler> = ::javax_swing_text / "DefaultStyledDocument$AbstractChangeHandler";
namespace javax::swing::text { class DefaultStyledDocument$AbstractChangeHandler$DocReference; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$AbstractChangeHandler$DocReference> = ::javax_swing_text / "DefaultStyledDocument$AbstractChangeHandler$DocReference";
namespace javax::swing::text { class DefaultStyledDocument$AttributeUndoableEdit; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$AttributeUndoableEdit> = ::javax_swing_text / "DefaultStyledDocument$AttributeUndoableEdit";
namespace javax::swing::text { class DefaultStyledDocument$ChangeUpdateRunnable; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$ChangeUpdateRunnable> = ::javax_swing_text / "DefaultStyledDocument$ChangeUpdateRunnable";
namespace javax::swing::text { class DefaultStyledDocument$ElementBuffer; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$ElementBuffer> = ::javax_swing_text / "DefaultStyledDocument$ElementBuffer";
namespace javax::swing::text { class DefaultStyledDocument$ElementBuffer$ElemChanges; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$ElementBuffer$ElemChanges> = ::javax_swing_text / "DefaultStyledDocument$ElementBuffer$ElemChanges";
namespace javax::swing::text { class DefaultStyledDocument$ElementSpec; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$ElementSpec> = ::javax_swing_text / "DefaultStyledDocument$ElementSpec";
namespace javax::swing::text { class DefaultStyledDocument$SectionElement; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$SectionElement> = ::javax_swing_text / "DefaultStyledDocument$SectionElement";
namespace javax::swing::text { class DefaultStyledDocument$StyleChangeHandler; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$StyleChangeHandler> = ::javax_swing_text / "DefaultStyledDocument$StyleChangeHandler";
namespace javax::swing::text { class DefaultStyledDocument$StyleChangeUndoableEdit; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$StyleChangeUndoableEdit> = ::javax_swing_text / "DefaultStyledDocument$StyleChangeUndoableEdit";
namespace javax::swing::text { class DefaultStyledDocument$StyleContextChangeHandler; }
template<> constexpr auto signature<::javax::swing::text::DefaultStyledDocument$StyleContextChangeHandler> = ::javax_swing_text / "DefaultStyledDocument$StyleContextChangeHandler";
namespace javax::swing::text { class DefaultTextUI; }
template<> constexpr auto signature<::javax::swing::text::DefaultTextUI> = ::javax_swing_text / "DefaultTextUI";
namespace javax::swing::text { class Document; }
template<> constexpr auto signature<::javax::swing::text::Document> = ::javax_swing_text / "Document";
namespace javax::swing::text { class DocumentFilter; }
template<> constexpr auto signature<::javax::swing::text::DocumentFilter> = ::javax_swing_text / "DocumentFilter";
namespace javax::swing::text { class DocumentFilter$FilterBypass; }
template<> constexpr auto signature<::javax::swing::text::DocumentFilter$FilterBypass> = ::javax_swing_text / "DocumentFilter$FilterBypass";
namespace javax::swing::text { class EditorKit; }
template<> constexpr auto signature<::javax::swing::text::EditorKit> = ::javax_swing_text / "EditorKit";
namespace javax::swing::text { class Element; }
template<> constexpr auto signature<::javax::swing::text::Element> = ::javax_swing_text / "Element";
namespace javax::swing::text { class ElementIterator; }
template<> constexpr auto signature<::javax::swing::text::ElementIterator> = ::javax_swing_text / "ElementIterator";
namespace javax::swing::text { class ElementIterator$1; }
template<> constexpr auto signature<::javax::swing::text::ElementIterator$1> = ::javax_swing_text / "ElementIterator$1";
namespace javax::swing::text { class ElementIterator$StackItem; }
template<> constexpr auto signature<::javax::swing::text::ElementIterator$StackItem> = ::javax_swing_text / "ElementIterator$StackItem";
namespace javax::swing::text { class FieldView; }
template<> constexpr auto signature<::javax::swing::text::FieldView> = ::javax_swing_text / "FieldView";
namespace javax::swing::text { class FlowView; }
template<> constexpr auto signature<::javax::swing::text::FlowView> = ::javax_swing_text / "FlowView";
namespace javax::swing::text { class FlowView$FlowStrategy; }
template<> constexpr auto signature<::javax::swing::text::FlowView$FlowStrategy> = ::javax_swing_text / "FlowView$FlowStrategy";
namespace javax::swing::text { class FlowView$LogicalView; }
template<> constexpr auto signature<::javax::swing::text::FlowView$LogicalView> = ::javax_swing_text / "FlowView$LogicalView";
namespace javax::swing::text { class GapContent; }
template<> constexpr auto signature<::javax::swing::text::GapContent> = ::javax_swing_text / "GapContent";
namespace javax::swing::text { class GapContent$InsertUndo; }
template<> constexpr auto signature<::javax::swing::text::GapContent$InsertUndo> = ::javax_swing_text / "GapContent$InsertUndo";
namespace javax::swing::text { class GapContent$MarkData; }
template<> constexpr auto signature<::javax::swing::text::GapContent$MarkData> = ::javax_swing_text / "GapContent$MarkData";
namespace javax::swing::text { class GapContent$MarkVector; }
template<> constexpr auto signature<::javax::swing::text::GapContent$MarkVector> = ::javax_swing_text / "GapContent$MarkVector";
namespace javax::swing::text { class GapContent$RemoveUndo; }
template<> constexpr auto signature<::javax::swing::text::GapContent$RemoveUndo> = ::javax_swing_text / "GapContent$RemoveUndo";
namespace javax::swing::text { class GapContent$StickyPosition; }
template<> constexpr auto signature<::javax::swing::text::GapContent$StickyPosition> = ::javax_swing_text / "GapContent$StickyPosition";
namespace javax::swing::text { class GapContent$UndoPosRef; }
template<> constexpr auto signature<::javax::swing::text::GapContent$UndoPosRef> = ::javax_swing_text / "GapContent$UndoPosRef";
namespace javax::swing::text { class GapVector; }
template<> constexpr auto signature<::javax::swing::text::GapVector> = ::javax_swing_text / "GapVector";
namespace javax::swing::text { class GlyphPainter1; }
template<> constexpr auto signature<::javax::swing::text::GlyphPainter1> = ::javax_swing_text / "GlyphPainter1";
namespace javax::swing::text { class GlyphPainter2; }
template<> constexpr auto signature<::javax::swing::text::GlyphPainter2> = ::javax_swing_text / "GlyphPainter2";
namespace javax::swing::text { class GlyphView; }
template<> constexpr auto signature<::javax::swing::text::GlyphView> = ::javax_swing_text / "GlyphView";
namespace javax::swing::text { class GlyphView$GlyphPainter; }
template<> constexpr auto signature<::javax::swing::text::GlyphView$GlyphPainter> = ::javax_swing_text / "GlyphView$GlyphPainter";
namespace javax::swing::text { class GlyphView$JustificationInfo; }
template<> constexpr auto signature<::javax::swing::text::GlyphView$JustificationInfo> = ::javax_swing_text / "GlyphView$JustificationInfo";
namespace javax::swing::text { class Highlighter; }
template<> constexpr auto signature<::javax::swing::text::Highlighter> = ::javax_swing_text / "Highlighter";
namespace javax::swing::text { class Highlighter$Highlight; }
template<> constexpr auto signature<::javax::swing::text::Highlighter$Highlight> = ::javax_swing_text / "Highlighter$Highlight";
namespace javax::swing::text { class Highlighter$HighlightPainter; }
template<> constexpr auto signature<::javax::swing::text::Highlighter$HighlightPainter> = ::javax_swing_text / "Highlighter$HighlightPainter";
namespace javax::swing::text { class IconView; }
template<> constexpr auto signature<::javax::swing::text::IconView> = ::javax_swing_text / "IconView";
namespace javax::swing::text { class InternationalFormatter; }
template<> constexpr auto signature<::javax::swing::text::InternationalFormatter> = ::javax_swing_text / "InternationalFormatter";
namespace javax::swing::text { class InternationalFormatter$ExtendedReplaceHolder; }
template<> constexpr auto signature<::javax::swing::text::InternationalFormatter$ExtendedReplaceHolder> = ::javax_swing_text / "InternationalFormatter$ExtendedReplaceHolder";
namespace javax::swing::text { class InternationalFormatter$IncrementAction; }
template<> constexpr auto signature<::javax::swing::text::InternationalFormatter$IncrementAction> = ::javax_swing_text / "InternationalFormatter$IncrementAction";
namespace javax::swing::text { class JTextComponent; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent> = ::javax_swing_text / "JTextComponent";
namespace javax::swing::text { class JTextComponent$1; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$1> = ::javax_swing_text / "JTextComponent$1";
namespace javax::swing::text { class JTextComponent$2; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$2> = ::javax_swing_text / "JTextComponent$2";
namespace javax::swing::text { class JTextComponent$3; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$3> = ::javax_swing_text / "JTextComponent$3";
namespace javax::swing::text { class JTextComponent$3$1; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$3$1> = ::javax_swing_text / "JTextComponent$3$1";
namespace javax::swing::text { class JTextComponent$3$2; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$3$2> = ::javax_swing_text / "JTextComponent$3$2";
namespace javax::swing::text { class JTextComponent$4; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$4> = ::javax_swing_text / "JTextComponent$4";
namespace javax::swing::text { class JTextComponent$4$1; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$4$1> = ::javax_swing_text / "JTextComponent$4$1";
namespace javax::swing::text { class JTextComponent$5; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$5> = ::javax_swing_text / "JTextComponent$5";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent$1; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent$1> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent$1";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent$2; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent$2> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent$2";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent$3; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent$3> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent$3";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent$4; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent$4> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent$4";
namespace javax::swing::text { class JTextComponent$AccessibleJTextComponent$IndexedSegment; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$AccessibleJTextComponent$IndexedSegment> = ::javax_swing_text / "JTextComponent$AccessibleJTextComponent$IndexedSegment";
namespace javax::swing::text { class JTextComponent$ComposedTextCaret; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$ComposedTextCaret> = ::javax_swing_text / "JTextComponent$ComposedTextCaret";
namespace javax::swing::text { class JTextComponent$DefaultKeymap; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$DefaultKeymap> = ::javax_swing_text / "JTextComponent$DefaultKeymap";
namespace javax::swing::text { class JTextComponent$DefaultTransferHandler; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$DefaultTransferHandler> = ::javax_swing_text / "JTextComponent$DefaultTransferHandler";
namespace javax::swing::text { class JTextComponent$DoSetCaretPosition; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$DoSetCaretPosition> = ::javax_swing_text / "JTextComponent$DoSetCaretPosition";
namespace javax::swing::text { class JTextComponent$DropLocation; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$DropLocation> = ::javax_swing_text / "JTextComponent$DropLocation";
namespace javax::swing::text { class JTextComponent$InputMethodRequestsHandler; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$InputMethodRequestsHandler> = ::javax_swing_text / "JTextComponent$InputMethodRequestsHandler";
namespace javax::swing::text { class JTextComponent$KeyBinding; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$KeyBinding> = ::javax_swing_text / "JTextComponent$KeyBinding";
namespace javax::swing::text { class JTextComponent$KeymapActionMap; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$KeymapActionMap> = ::javax_swing_text / "JTextComponent$KeymapActionMap";
namespace javax::swing::text { class JTextComponent$KeymapWrapper; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$KeymapWrapper> = ::javax_swing_text / "JTextComponent$KeymapWrapper";
namespace javax::swing::text { class JTextComponent$MutableCaretEvent; }
template<> constexpr auto signature<::javax::swing::text::JTextComponent$MutableCaretEvent> = ::javax_swing_text / "JTextComponent$MutableCaretEvent";
namespace javax::swing::text { class Keymap; }
template<> constexpr auto signature<::javax::swing::text::Keymap> = ::javax_swing_text / "Keymap";
namespace javax::swing::text { class LabelView; }
template<> constexpr auto signature<::javax::swing::text::LabelView> = ::javax_swing_text / "LabelView";
namespace javax::swing::text { class LayeredHighlighter; }
template<> constexpr auto signature<::javax::swing::text::LayeredHighlighter> = ::javax_swing_text / "LayeredHighlighter";
namespace javax::swing::text { class LayeredHighlighter$LayerPainter; }
template<> constexpr auto signature<::javax::swing::text::LayeredHighlighter$LayerPainter> = ::javax_swing_text / "LayeredHighlighter$LayerPainter";
namespace javax::swing::text { class LayoutQueue; }
template<> constexpr auto signature<::javax::swing::text::LayoutQueue> = ::javax_swing_text / "LayoutQueue";
namespace javax::swing::text { class LayoutQueue$LayoutThread; }
template<> constexpr auto signature<::javax::swing::text::LayoutQueue$LayoutThread> = ::javax_swing_text / "LayoutQueue$LayoutThread";
namespace javax::swing::text { class MaskFormatter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter> = ::javax_swing_text / "MaskFormatter";
namespace javax::swing::text { class MaskFormatter$1; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$1> = ::javax_swing_text / "MaskFormatter$1";
namespace javax::swing::text { class MaskFormatter$AlphaNumericCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$AlphaNumericCharacter> = ::javax_swing_text / "MaskFormatter$AlphaNumericCharacter";
namespace javax::swing::text { class MaskFormatter$CharCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$CharCharacter> = ::javax_swing_text / "MaskFormatter$CharCharacter";
namespace javax::swing::text { class MaskFormatter$DigitMaskCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$DigitMaskCharacter> = ::javax_swing_text / "MaskFormatter$DigitMaskCharacter";
namespace javax::swing::text { class MaskFormatter$HexCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$HexCharacter> = ::javax_swing_text / "MaskFormatter$HexCharacter";
namespace javax::swing::text { class MaskFormatter$LiteralCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$LiteralCharacter> = ::javax_swing_text / "MaskFormatter$LiteralCharacter";
namespace javax::swing::text { class MaskFormatter$LowerCaseCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$LowerCaseCharacter> = ::javax_swing_text / "MaskFormatter$LowerCaseCharacter";
namespace javax::swing::text { class MaskFormatter$MaskCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$MaskCharacter> = ::javax_swing_text / "MaskFormatter$MaskCharacter";
namespace javax::swing::text { class MaskFormatter$UpperCaseCharacter; }
template<> constexpr auto signature<::javax::swing::text::MaskFormatter$UpperCaseCharacter> = ::javax_swing_text / "MaskFormatter$UpperCaseCharacter";
namespace javax::swing::text { class MutableAttributeSet; }
template<> constexpr auto signature<::javax::swing::text::MutableAttributeSet> = ::javax_swing_text / "MutableAttributeSet";
namespace javax::swing::text { class NavigationFilter; }
template<> constexpr auto signature<::javax::swing::text::NavigationFilter> = ::javax_swing_text / "NavigationFilter";
namespace javax::swing::text { class NavigationFilter$FilterBypass; }
template<> constexpr auto signature<::javax::swing::text::NavigationFilter$FilterBypass> = ::javax_swing_text / "NavigationFilter$FilterBypass";
namespace javax::swing::text { class NumberFormatter; }
template<> constexpr auto signature<::javax::swing::text::NumberFormatter> = ::javax_swing_text / "NumberFormatter";
namespace javax::swing::text { class ParagraphView; }
template<> constexpr auto signature<::javax::swing::text::ParagraphView> = ::javax_swing_text / "ParagraphView";
namespace javax::swing::text { class ParagraphView$Row; }
template<> constexpr auto signature<::javax::swing::text::ParagraphView$Row> = ::javax_swing_text / "ParagraphView$Row";
namespace javax::swing::text { class PasswordView; }
template<> constexpr auto signature<::javax::swing::text::PasswordView> = ::javax_swing_text / "PasswordView";
namespace javax::swing::text { class PlainDocument; }
template<> constexpr auto signature<::javax::swing::text::PlainDocument> = ::javax_swing_text / "PlainDocument";
namespace javax::swing::text { class PlainView; }
template<> constexpr auto signature<::javax::swing::text::PlainView> = ::javax_swing_text / "PlainView";
namespace javax::swing::text { class Position; }
template<> constexpr auto signature<::javax::swing::text::Position> = ::javax_swing_text / "Position";
namespace javax::swing::text { class Position$Bias; }
template<> constexpr auto signature<::javax::swing::text::Position$Bias> = ::javax_swing_text / "Position$Bias";
namespace javax::swing::text { class Segment; }
template<> constexpr auto signature<::javax::swing::text::Segment> = ::javax_swing_text / "Segment";
namespace javax::swing::text { class SegmentCache; }
template<> constexpr auto signature<::javax::swing::text::SegmentCache> = ::javax_swing_text / "SegmentCache";
namespace javax::swing::text { class SegmentCache$1; }
template<> constexpr auto signature<::javax::swing::text::SegmentCache$1> = ::javax_swing_text / "SegmentCache$1";
namespace javax::swing::text { class SegmentCache$CachedSegment; }
template<> constexpr auto signature<::javax::swing::text::SegmentCache$CachedSegment> = ::javax_swing_text / "SegmentCache$CachedSegment";
namespace javax::swing::text { class SimpleAttributeSet; }
template<> constexpr auto signature<::javax::swing::text::SimpleAttributeSet> = ::javax_swing_text / "SimpleAttributeSet";
namespace javax::swing::text { class SimpleAttributeSet$EmptyAttributeSet; }
template<> constexpr auto signature<::javax::swing::text::SimpleAttributeSet$EmptyAttributeSet> = ::javax_swing_text / "SimpleAttributeSet$EmptyAttributeSet";
namespace javax::swing::text { class StateInvariantError; }
template<> constexpr auto signature<::javax::swing::text::StateInvariantError> = ::javax_swing_text / "StateInvariantError";
namespace javax::swing::text { class StringContent; }
template<> constexpr auto signature<::javax::swing::text::StringContent> = ::javax_swing_text / "StringContent";
namespace javax::swing::text { class StringContent$InsertUndo; }
template<> constexpr auto signature<::javax::swing::text::StringContent$InsertUndo> = ::javax_swing_text / "StringContent$InsertUndo";
namespace javax::swing::text { class StringContent$PosRec; }
template<> constexpr auto signature<::javax::swing::text::StringContent$PosRec> = ::javax_swing_text / "StringContent$PosRec";
namespace javax::swing::text { class StringContent$RemoveUndo; }
template<> constexpr auto signature<::javax::swing::text::StringContent$RemoveUndo> = ::javax_swing_text / "StringContent$RemoveUndo";
namespace javax::swing::text { class StringContent$StickyPosition; }
template<> constexpr auto signature<::javax::swing::text::StringContent$StickyPosition> = ::javax_swing_text / "StringContent$StickyPosition";
namespace javax::swing::text { class StringContent$UndoPosRef; }
template<> constexpr auto signature<::javax::swing::text::StringContent$UndoPosRef> = ::javax_swing_text / "StringContent$UndoPosRef";
namespace javax::swing::text { class Style; }
template<> constexpr auto signature<::javax::swing::text::Style> = ::javax_swing_text / "Style";
namespace javax::swing::text { class StyleConstants; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants> = ::javax_swing_text / "StyleConstants";
namespace javax::swing::text { class StyleConstants$1; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants$1> = ::javax_swing_text / "StyleConstants$1";
namespace javax::swing::text { class StyleConstants$CharacterConstants; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants$CharacterConstants> = ::javax_swing_text / "StyleConstants$CharacterConstants";
namespace javax::swing::text { class StyleConstants$ColorConstants; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants$ColorConstants> = ::javax_swing_text / "StyleConstants$ColorConstants";
namespace javax::swing::text { class StyleConstants$FontConstants; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants$FontConstants> = ::javax_swing_text / "StyleConstants$FontConstants";
namespace javax::swing::text { class StyleConstants$ParagraphConstants; }
template<> constexpr auto signature<::javax::swing::text::StyleConstants$ParagraphConstants> = ::javax_swing_text / "StyleConstants$ParagraphConstants";
namespace javax::swing::text { class StyleContext; }
template<> constexpr auto signature<::javax::swing::text::StyleContext> = ::javax_swing_text / "StyleContext";
namespace javax::swing::text { class StyleContext$FontKey; }
template<> constexpr auto signature<::javax::swing::text::StyleContext$FontKey> = ::javax_swing_text / "StyleContext$FontKey";
namespace javax::swing::text { class StyleContext$KeyBuilder; }
template<> constexpr auto signature<::javax::swing::text::StyleContext$KeyBuilder> = ::javax_swing_text / "StyleContext$KeyBuilder";
namespace javax::swing::text { class StyleContext$KeyEnumeration; }
template<> constexpr auto signature<::javax::swing::text::StyleContext$KeyEnumeration> = ::javax_swing_text / "StyleContext$KeyEnumeration";
namespace javax::swing::text { class StyleContext$NamedStyle; }
template<> constexpr auto signature<::javax::swing::text::StyleContext$NamedStyle> = ::javax_swing_text / "StyleContext$NamedStyle";
namespace javax::swing::text { class StyleContext$SmallAttributeSet; }
template<> constexpr auto signature<::javax::swing::text::StyleContext$SmallAttributeSet> = ::javax_swing_text / "StyleContext$SmallAttributeSet";
namespace javax::swing::text { class StyledDocument; }
template<> constexpr auto signature<::javax::swing::text::StyledDocument> = ::javax_swing_text / "StyledDocument";
namespace javax::swing::text { class StyledEditorKit; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit> = ::javax_swing_text / "StyledEditorKit";
namespace javax::swing::text { class StyledEditorKit$1; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$1> = ::javax_swing_text / "StyledEditorKit$1";
namespace javax::swing::text { class StyledEditorKit$AlignmentAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$AlignmentAction> = ::javax_swing_text / "StyledEditorKit$AlignmentAction";
namespace javax::swing::text { class StyledEditorKit$AttributeTracker; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$AttributeTracker> = ::javax_swing_text / "StyledEditorKit$AttributeTracker";
namespace javax::swing::text { class StyledEditorKit$BoldAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$BoldAction> = ::javax_swing_text / "StyledEditorKit$BoldAction";
namespace javax::swing::text { class StyledEditorKit$FontFamilyAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$FontFamilyAction> = ::javax_swing_text / "StyledEditorKit$FontFamilyAction";
namespace javax::swing::text { class StyledEditorKit$FontSizeAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$FontSizeAction> = ::javax_swing_text / "StyledEditorKit$FontSizeAction";
namespace javax::swing::text { class StyledEditorKit$ForegroundAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$ForegroundAction> = ::javax_swing_text / "StyledEditorKit$ForegroundAction";
namespace javax::swing::text { class StyledEditorKit$ItalicAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$ItalicAction> = ::javax_swing_text / "StyledEditorKit$ItalicAction";
namespace javax::swing::text { class StyledEditorKit$StyledInsertBreakAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$StyledInsertBreakAction> = ::javax_swing_text / "StyledEditorKit$StyledInsertBreakAction";
namespace javax::swing::text { class StyledEditorKit$StyledTextAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$StyledTextAction> = ::javax_swing_text / "StyledEditorKit$StyledTextAction";
namespace javax::swing::text { class StyledEditorKit$StyledViewFactory; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$StyledViewFactory> = ::javax_swing_text / "StyledEditorKit$StyledViewFactory";
namespace javax::swing::text { class StyledEditorKit$UnderlineAction; }
template<> constexpr auto signature<::javax::swing::text::StyledEditorKit$UnderlineAction> = ::javax_swing_text / "StyledEditorKit$UnderlineAction";
namespace javax::swing::text { class TabExpander; }
template<> constexpr auto signature<::javax::swing::text::TabExpander> = ::javax_swing_text / "TabExpander";
namespace javax::swing::text { class TabSet; }
template<> constexpr auto signature<::javax::swing::text::TabSet> = ::javax_swing_text / "TabSet";
namespace javax::swing::text { class TabStop; }
template<> constexpr auto signature<::javax::swing::text::TabStop> = ::javax_swing_text / "TabStop";
namespace javax::swing::text { class TabableView; }
template<> constexpr auto signature<::javax::swing::text::TabableView> = ::javax_swing_text / "TabableView";
namespace javax::swing::text { class TableView; }
template<> constexpr auto signature<::javax::swing::text::TableView> = ::javax_swing_text / "TableView";
namespace javax::swing::text { class TableView$GridCell; }
template<> constexpr auto signature<::javax::swing::text::TableView$GridCell> = ::javax_swing_text / "TableView$GridCell";
namespace javax::swing::text { class TableView$TableCell; }
template<> constexpr auto signature<::javax::swing::text::TableView$TableCell> = ::javax_swing_text / "TableView$TableCell";
namespace javax::swing::text { class TableView$TableRow; }
template<> constexpr auto signature<::javax::swing::text::TableView$TableRow> = ::javax_swing_text / "TableView$TableRow";
namespace javax::swing::text { class TextAction; }
template<> constexpr auto signature<::javax::swing::text::TextAction> = ::javax_swing_text / "TextAction";
namespace javax::swing::text { class TextLayoutStrategy; }
template<> constexpr auto signature<::javax::swing::text::TextLayoutStrategy> = ::javax_swing_text / "TextLayoutStrategy";
namespace javax::swing::text { class TextLayoutStrategy$AttributedSegment; }
template<> constexpr auto signature<::javax::swing::text::TextLayoutStrategy$AttributedSegment> = ::javax_swing_text / "TextLayoutStrategy$AttributedSegment";
namespace javax::swing::text { class Utilities; }
template<> constexpr auto signature<::javax::swing::text::Utilities> = ::javax_swing_text / "Utilities";
namespace javax::swing::text { class View; }
template<> constexpr auto signature<::javax::swing::text::View> = ::javax_swing_text / "View";
namespace javax::swing::text { class ViewFactory; }
template<> constexpr auto signature<::javax::swing::text::ViewFactory> = ::javax_swing_text / "ViewFactory";
namespace javax::swing::text { class WhitespaceBasedBreakIterator; }
template<> constexpr auto signature<::javax::swing::text::WhitespaceBasedBreakIterator> = ::javax_swing_text / "WhitespaceBasedBreakIterator";
namespace javax::swing::text { class WrappedPlainView; }
template<> constexpr auto signature<::javax::swing::text::WrappedPlainView> = ::javax_swing_text / "WrappedPlainView";
namespace javax::swing::text { class WrappedPlainView$WrappedLine; }
template<> constexpr auto signature<::javax::swing::text::WrappedPlainView$WrappedLine> = ::javax_swing_text / "WrappedPlainView$WrappedLine";
namespace javax::swing::text { class ZoneView; }
template<> constexpr auto signature<::javax::swing::text::ZoneView> = ::javax_swing_text / "ZoneView";
namespace javax::swing::text { class ZoneView$Zone; }
template<> constexpr auto signature<::javax::swing::text::ZoneView$Zone> = ::javax_swing_text / "ZoneView$Zone";

#endif
