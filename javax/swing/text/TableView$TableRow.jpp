#ifndef javax_swing_text_TableView$TableRow_HPP
#define javax_swing_text_TableView$TableRow_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::text::TableView$TableRow : public jObject<::javax::swing::text::TableView$TableRow, ::javax::swing::text::BoxView> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_text / "TableView$TableRow";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::javax::swing::text::TableView, ::javax::swing::text::Element)>(), //
		jMethod<::jint(::jint)>("getResizeWeight"), //
		jMethod<::jvoid(::jint, ::jint, ::javax::swing::text::View *)>("replace"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getResizeWeight(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getResizeWeight")] != -1);
		return call<R>("getResizeWeight", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto replace(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("replace")] != -1);
		return call<R>("replace", std::forward<Args>(args)...);
	}

};

#endif
