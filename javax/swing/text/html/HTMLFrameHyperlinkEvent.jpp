#ifndef javax_swing_text_html_HTMLFrameHyperlinkEvent_HPP
#define javax_swing_text_html_HTMLFrameHyperlinkEvent_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::text::html::HTMLFrameHyperlinkEvent : public jObject<::javax::swing::text::html::HTMLFrameHyperlinkEvent, ::javax::swing::event::HyperlinkEvent> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_text_html / "HTMLFrameHyperlinkEvent";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::Object, ::javax::swing::event::HyperlinkEvent$EventType, ::java::net::URL, ::java::lang::String)>(), //
		jConstructor<::jvoid(::java::lang::Object, ::javax::swing::event::HyperlinkEvent$EventType, ::java::net::URL, ::java::lang::String, ::java::lang::String)>(), //
		jConstructor<::jvoid(::java::lang::Object, ::javax::swing::event::HyperlinkEvent$EventType, ::java::net::URL, ::java::lang::String, ::javax::swing::text::Element, ::java::awt::event::InputEvent, ::java::lang::String)>(), //
		jConstructor<::jvoid(::java::lang::Object, ::javax::swing::event::HyperlinkEvent$EventType, ::java::net::URL, ::java::lang::String, ::javax::swing::text::Element, ::java::lang::String)>(), //
		jConstructor<::jvoid(::java::lang::Object, ::javax::swing::event::HyperlinkEvent$EventType, ::java::net::URL, ::javax::swing::text::Element, ::java::lang::String)>(), //
		jMethod<::java::lang::String()>("getTarget"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getTarget(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTarget")] != -1);
		return call<R>("getTarget", std::forward<Args>(args)...);
	}

};

#endif
