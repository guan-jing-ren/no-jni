#ifndef javax_swing_text_html_HTMLEditorKit$InsertHTMLTextAction_HPP
#define javax_swing_text_html_HTMLEditorKit$InsertHTMLTextAction_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::text::html::HTMLEditorKit$InsertHTMLTextAction : public jObject<::javax::swing::text::html::HTMLEditorKit$InsertHTMLTextAction, ::javax::swing::text::html::HTMLEditorKit$HTMLTextAction> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_text_html / "HTMLEditorKit$InsertHTMLTextAction";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::java::lang::String, ::javax::swing::text::html::HTML$Tag, ::javax::swing::text::html::HTML$Tag)>(), //
		jConstructor<::jvoid(::java::lang::String, ::java::lang::String, ::javax::swing::text::html::HTML$Tag, ::javax::swing::text::html::HTML$Tag, ::javax::swing::text::html::HTML$Tag, ::javax::swing::text::html::HTML$Tag)>(), //
		jMethod<::jvoid(::java::awt::event::ActionEvent)>("actionPerformed"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto actionPerformed(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("actionPerformed")] != -1);
		return call<R>("actionPerformed", forward<Args>(args)...);
	}

};

#endif
