#ifndef javax_swing_GroupLayout$SequentialGroup_HPP
#define javax_swing_GroupLayout$SequentialGroup_HPP

#include "../../jfwd_decl.hpp"

class ::javax::swing::GroupLayout$SequentialGroup : public jObject<::javax::swing::GroupLayout$SequentialGroup, ::javax::swing::GroupLayout$Group> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing / "GroupLayout$SequentialGroup";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::javax::swing::GroupLayout$Group(::java::awt::Component)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::java::awt::Component)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$Group(::java::awt::Component, ::jint, ::jint, ::jint)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::java::awt::Component, ::jint, ::jint, ::jint)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jboolean, ::java::awt::Component)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jboolean, ::java::awt::Component, ::jint, ::jint, ::jint)>("addComponent"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup()>("addContainerGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jint, ::jint)>("addContainerGap"), //
		jMethod<::javax::swing::GroupLayout$Group(::jint)>("addGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jint)>("addGap"), //
		jMethod<::javax::swing::GroupLayout$Group(::jint, ::jint, ::jint)>("addGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jint, ::jint, ::jint)>("addGap"), //
		jMethod<::javax::swing::GroupLayout$Group(::javax::swing::GroupLayout$Group)>("addGroup"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::javax::swing::GroupLayout$Group)>("addGroup"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::jboolean, ::javax::swing::GroupLayout$Group)>("addGroup"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::javax::swing::JComponent, ::javax::swing::JComponent, ::javax::swing::LayoutStyle$ComponentPlacement)>("addPreferredGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::javax::swing::JComponent, ::javax::swing::JComponent, ::javax::swing::LayoutStyle$ComponentPlacement, ::jint, ::jint)>("addPreferredGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::javax::swing::LayoutStyle$ComponentPlacement)>("addPreferredGap"), //
		jMethod<::javax::swing::GroupLayout$SequentialGroup(::javax::swing::LayoutStyle$ComponentPlacement, ::jint, ::jint)>("addPreferredGap"), //
	};

	template<typename R = ::javax::swing::GroupLayout$Group, typename... Args>
	auto addComponent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("addComponent")] != -1);
		return call<R>("addComponent", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::GroupLayout$SequentialGroup, typename... Args>
	auto addContainerGap(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("addContainerGap")] != -1);
		return call<R>("addContainerGap", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::GroupLayout$Group, typename... Args>
	auto addGap(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("addGap")] != -1);
		return call<R>("addGap", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::GroupLayout$Group, typename... Args>
	auto addGroup(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("addGroup")] != -1);
		return call<R>("addGroup", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::GroupLayout$SequentialGroup, typename... Args>
	auto addPreferredGap(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("addPreferredGap")] != -1);
		return call<R>("addPreferredGap", forward<Args>(args)...);
	}

};

#endif
