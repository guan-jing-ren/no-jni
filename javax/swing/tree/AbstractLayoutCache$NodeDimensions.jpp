#ifndef javax_swing_tree_AbstractLayoutCache$NodeDimensions_HPP
#define javax_swing_tree_AbstractLayoutCache$NodeDimensions_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::swing::tree::AbstractLayoutCache$NodeDimensions : public jObject<::javax::swing::tree::AbstractLayoutCache$NodeDimensions, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_tree / "AbstractLayoutCache$NodeDimensions";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::awt::Rectangle(::java::lang::Object, ::jint, ::jint, ::jboolean, ::java::awt::Rectangle)>("getNodeDimensions"), //
	};

	template<typename R = ::java::awt::Rectangle, typename... Args>
	auto getNodeDimensions(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getNodeDimensions")] != -1);
		return call<R>("getNodeDimensions", std::forward<Args>(args)...);
	}

};

#endif
