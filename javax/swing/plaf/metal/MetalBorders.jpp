#ifndef javax_swing_plaf_metal_MetalBorders_HPP
#define javax_swing_plaf_metal_MetalBorders_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::metal::MetalBorders : public jObject<::javax::swing::plaf::metal::MetalBorders, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_metal / "MetalBorders";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::swing::border::Border()>("getButtonBorder"), //
		jMethod<::javax::swing::border::Border()>("getDesktopIconBorder"), //
		jMethod<::javax::swing::border::Border()>("getTextBorder"), //
		jMethod<::javax::swing::border::Border()>("getTextFieldBorder"), //
		jMethod<::javax::swing::border::Border()>("getToggleButtonBorder"), //
	};

	template<typename R = ::javax::swing::border::Border, typename... Args>
	static auto getButtonBorder(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getButtonBorder")] != -1);
		return scall<R>("getButtonBorder", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::border::Border, typename... Args>
	static auto getDesktopIconBorder(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getDesktopIconBorder")] != -1);
		return scall<R>("getDesktopIconBorder", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::border::Border, typename... Args>
	static auto getTextBorder(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getTextBorder")] != -1);
		return scall<R>("getTextBorder", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::border::Border, typename... Args>
	static auto getTextFieldBorder(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getTextFieldBorder")] != -1);
		return scall<R>("getTextFieldBorder", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::border::Border, typename... Args>
	static auto getToggleButtonBorder(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getToggleButtonBorder")] != -1);
		return scall<R>("getToggleButtonBorder", forward<Args>(args)...);
	}

};

#endif
