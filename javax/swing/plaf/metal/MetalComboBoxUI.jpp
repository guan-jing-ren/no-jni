#ifndef javax_swing_plaf_metal_MetalComboBoxUI_HPP
#define javax_swing_plaf_metal_MetalComboBoxUI_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::metal::MetalComboBoxUI : public jObject<::javax::swing::plaf::metal::MetalComboBoxUI, ::javax::swing::plaf::basic::BasicComboBoxUI> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_metal / "MetalComboBoxUI";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid()>("configureEditor"), //
		jMethod<::java::beans::PropertyChangeListener()>("createPropertyChangeListener"), //
		jMethod<::javax::swing::plaf::ComponentUI(::javax::swing::JComponent)>("createUI"), //
		jMethod<::jint(::javax::swing::JComponent, ::jint, ::jint)>("getBaseline"), //
		jMethod<::java::awt::Dimension(::javax::swing::JComponent)>("getMinimumSize"), //
		jMethod<::jvoid(::java::awt::Container, ::javax::swing::plaf::metal::MetalComboBoxUI$MetalComboBoxLayoutManager)>("layoutComboBox"), //
		jMethod<::jvoid(::java::awt::Graphics, ::javax::swing::JComponent)>("paint"), //
		jMethod<::jvoid(::java::awt::Graphics, ::java::awt::Rectangle, ::jboolean)>("paintCurrentValue"), //
		jMethod<::jvoid(::java::awt::Graphics, ::java::awt::Rectangle, ::jboolean)>("paintCurrentValueBackground"), //
		jMethod<::jvoid()>("unconfigureEditor"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto configureEditor(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("configureEditor")] != -1);
		return call<R>("configureEditor", forward<Args>(args)...);
	}

	template<typename R = ::java::beans::PropertyChangeListener, typename... Args>
	auto createPropertyChangeListener(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("createPropertyChangeListener")] != -1);
		return call<R>("createPropertyChangeListener", forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::plaf::ComponentUI, typename... Args>
	static auto createUI(Args &&...args) {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("createUI")] != -1);
		return scall<R>("createUI", forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getBaseline(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getBaseline")] != -1);
		return call<R>("getBaseline", forward<Args>(args)...);
	}

	template<typename R = ::java::awt::Dimension, typename... Args>
	auto getMinimumSize(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getMinimumSize")] != -1);
		return call<R>("getMinimumSize", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto layoutComboBox(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("layoutComboBox")] != -1);
		return call<R>("layoutComboBox", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto paint(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("paint")] != -1);
		return call<R>("paint", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto paintCurrentValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("paintCurrentValue")] != -1);
		return call<R>("paintCurrentValue", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto paintCurrentValueBackground(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("paintCurrentValueBackground")] != -1);
		return call<R>("paintCurrentValueBackground", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto unconfigureEditor(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("unconfigureEditor")] != -1);
		return call<R>("unconfigureEditor", forward<Args>(args)...);
	}

};

#endif
