#ifndef javax_swing_plaf_metal_MetalIconFactory_HPP
#define javax_swing_plaf_metal_MetalIconFactory_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::metal::MetalIconFactory : public jObject<::javax::swing::plaf::metal::MetalIconFactory, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_metal / "MetalIconFactory";

	constexpr static Enume field_signatures{
		jField<::jboolean>("DARK"), //
		jField<::jboolean>("LIGHT"), //
	};

	template<typename F = ::jboolean>
	static auto DARK() {
		static_assert(field_signatures[jField<F>("DARK")] != -1);
		return sat<F>("DARK");
	}

	template<typename F = ::jboolean>
	static auto LIGHT() {
		static_assert(field_signatures[jField<F>("LIGHT")] != -1);
		return sat<F>("LIGHT");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::swing::Icon()>("getCheckBoxIcon"), //
		jMethod<::javax::swing::Icon()>("getCheckBoxMenuItemIcon"), //
		jMethod<::javax::swing::Icon()>("getFileChooserDetailViewIcon"), //
		jMethod<::javax::swing::Icon()>("getFileChooserHomeFolderIcon"), //
		jMethod<::javax::swing::Icon()>("getFileChooserListViewIcon"), //
		jMethod<::javax::swing::Icon()>("getFileChooserNewFolderIcon"), //
		jMethod<::javax::swing::Icon()>("getFileChooserUpFolderIcon"), //
		jMethod<::javax::swing::Icon()>("getHorizontalSliderThumbIcon"), //
		jMethod<::javax::swing::Icon(::jint)>("getInternalFrameAltMaximizeIcon"), //
		jMethod<::javax::swing::Icon(::jint)>("getInternalFrameCloseIcon"), //
		jMethod<::javax::swing::Icon()>("getInternalFrameDefaultMenuIcon"), //
		jMethod<::javax::swing::Icon(::jint)>("getInternalFrameMaximizeIcon"), //
		jMethod<::javax::swing::Icon(::jint)>("getInternalFrameMinimizeIcon"), //
		jMethod<::javax::swing::Icon()>("getMenuArrowIcon"), //
		jMethod<::javax::swing::Icon()>("getMenuItemArrowIcon"), //
		jMethod<::javax::swing::Icon()>("getMenuItemCheckIcon"), //
		jMethod<::javax::swing::Icon()>("getRadioButtonIcon"), //
		jMethod<::javax::swing::Icon()>("getRadioButtonMenuItemIcon"), //
		jMethod<::javax::swing::Icon()>("getTreeComputerIcon"), //
		jMethod<::javax::swing::Icon(::jboolean)>("getTreeControlIcon"), //
		jMethod<::javax::swing::Icon()>("getTreeFloppyDriveIcon"), //
		jMethod<::javax::swing::Icon()>("getTreeFolderIcon"), //
		jMethod<::javax::swing::Icon()>("getTreeHardDriveIcon"), //
		jMethod<::javax::swing::Icon()>("getTreeLeafIcon"), //
		jMethod<::javax::swing::Icon()>("getVerticalSliderThumbIcon"), //
	};

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getCheckBoxIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCheckBoxIcon")] != -1);
		return scall<R>("getCheckBoxIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getCheckBoxMenuItemIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCheckBoxMenuItemIcon")] != -1);
		return scall<R>("getCheckBoxMenuItemIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getFileChooserDetailViewIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFileChooserDetailViewIcon")] != -1);
		return scall<R>("getFileChooserDetailViewIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getFileChooserHomeFolderIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFileChooserHomeFolderIcon")] != -1);
		return scall<R>("getFileChooserHomeFolderIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getFileChooserListViewIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFileChooserListViewIcon")] != -1);
		return scall<R>("getFileChooserListViewIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getFileChooserNewFolderIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFileChooserNewFolderIcon")] != -1);
		return scall<R>("getFileChooserNewFolderIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getFileChooserUpFolderIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFileChooserUpFolderIcon")] != -1);
		return scall<R>("getFileChooserUpFolderIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getHorizontalSliderThumbIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getHorizontalSliderThumbIcon")] != -1);
		return scall<R>("getHorizontalSliderThumbIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getInternalFrameAltMaximizeIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInternalFrameAltMaximizeIcon")] != -1);
		return scall<R>("getInternalFrameAltMaximizeIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getInternalFrameCloseIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInternalFrameCloseIcon")] != -1);
		return scall<R>("getInternalFrameCloseIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getInternalFrameDefaultMenuIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInternalFrameDefaultMenuIcon")] != -1);
		return scall<R>("getInternalFrameDefaultMenuIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getInternalFrameMaximizeIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInternalFrameMaximizeIcon")] != -1);
		return scall<R>("getInternalFrameMaximizeIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getInternalFrameMinimizeIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInternalFrameMinimizeIcon")] != -1);
		return scall<R>("getInternalFrameMinimizeIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getMenuArrowIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMenuArrowIcon")] != -1);
		return scall<R>("getMenuArrowIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getMenuItemArrowIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMenuItemArrowIcon")] != -1);
		return scall<R>("getMenuItemArrowIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getMenuItemCheckIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMenuItemCheckIcon")] != -1);
		return scall<R>("getMenuItemCheckIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getRadioButtonIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getRadioButtonIcon")] != -1);
		return scall<R>("getRadioButtonIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getRadioButtonMenuItemIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getRadioButtonMenuItemIcon")] != -1);
		return scall<R>("getRadioButtonMenuItemIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeComputerIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeComputerIcon")] != -1);
		return scall<R>("getTreeComputerIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeControlIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeControlIcon")] != -1);
		return scall<R>("getTreeControlIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeFloppyDriveIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeFloppyDriveIcon")] != -1);
		return scall<R>("getTreeFloppyDriveIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeFolderIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeFolderIcon")] != -1);
		return scall<R>("getTreeFolderIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeHardDriveIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeHardDriveIcon")] != -1);
		return scall<R>("getTreeHardDriveIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getTreeLeafIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getTreeLeafIcon")] != -1);
		return scall<R>("getTreeLeafIcon", std::forward<Args>(args)...);
	}

	template<typename R = ::javax::swing::Icon, typename... Args>
	static auto getVerticalSliderThumbIcon(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getVerticalSliderThumbIcon")] != -1);
		return scall<R>("getVerticalSliderThumbIcon", std::forward<Args>(args)...);
	}

};

#endif
