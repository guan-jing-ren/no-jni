#ifndef javax_swing_plaf_basic_BasicInternalFrameTitlePane$SizeAction_HPP
#define javax_swing_plaf_basic_BasicInternalFrameTitlePane$SizeAction_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::basic::BasicInternalFrameTitlePane$SizeAction : public jObject<::javax::swing::plaf::basic::BasicInternalFrameTitlePane$SizeAction, ::javax::swing::AbstractAction> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_basic / "BasicInternalFrameTitlePane$SizeAction";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::javax::swing::plaf::basic::BasicInternalFrameTitlePane)>(), //
		jMethod<::jvoid(::java::awt::event::ActionEvent)>("actionPerformed"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto actionPerformed(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("actionPerformed")] != -1);
		return call<R>("actionPerformed", forward<Args>(args)...);
	}

};

#endif
