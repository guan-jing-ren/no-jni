#ifndef javax_swing_plaf_basic_BasicBorders$MarginBorder_HPP
#define javax_swing_plaf_basic_BasicBorders$MarginBorder_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::basic::BasicBorders$MarginBorder : public jObject<::javax::swing::plaf::basic::BasicBorders$MarginBorder, ::javax::swing::border::AbstractBorder> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_basic / "BasicBorders$MarginBorder";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::awt::Insets(::java::awt::Component, ::java::awt::Insets)>("getBorderInsets"), //
	};

	template<typename R = ::java::awt::Insets, typename... Args>
	auto getBorderInsets(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getBorderInsets")] != -1);
		return call<R>("getBorderInsets", std::forward<Args>(args)...);
	}

};

#endif
