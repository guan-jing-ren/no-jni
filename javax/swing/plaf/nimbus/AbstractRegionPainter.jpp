#ifndef javax_swing_plaf_nimbus_AbstractRegionPainter_HPP
#define javax_swing_plaf_nimbus_AbstractRegionPainter_HPP

#include "../../../../jfwd_decl.hpp"

class ::javax::swing::plaf::nimbus::AbstractRegionPainter : public jObject<::javax::swing::plaf::nimbus::AbstractRegionPainter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_swing_plaf_nimbus / "AbstractRegionPainter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::Graphics2D, ::java::lang::Object, ::jint, ::jint)>("paint"), //
		jMethod<::jvoid(::java::awt::Graphics2D, ::javax::swing::JComponent, ::jint, ::jint)>("paint"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto paint(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("paint")] != -1);
		return call<R>("paint", forward<Args>(args)...);
	}

};

#endif
