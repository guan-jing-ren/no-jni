#ifndef javax_naming_JPP
#define javax_naming_JPP

namespace javax::naming { class AuthenticationException; }
template<> constexpr auto signature<::javax::naming::AuthenticationException> = ::javax_naming / "AuthenticationException";
namespace javax::naming { class AuthenticationNotSupportedException; }
template<> constexpr auto signature<::javax::naming::AuthenticationNotSupportedException> = ::javax_naming / "AuthenticationNotSupportedException";
namespace javax::naming { class BinaryRefAddr; }
template<> constexpr auto signature<::javax::naming::BinaryRefAddr> = ::javax_naming / "BinaryRefAddr";
namespace javax::naming { class Binding; }
template<> constexpr auto signature<::javax::naming::Binding> = ::javax_naming / "Binding";
namespace javax::naming { class CannotProceedException; }
template<> constexpr auto signature<::javax::naming::CannotProceedException> = ::javax_naming / "CannotProceedException";
namespace javax::naming { class CommunicationException; }
template<> constexpr auto signature<::javax::naming::CommunicationException> = ::javax_naming / "CommunicationException";
namespace javax::naming { class CompositeName; }
template<> constexpr auto signature<::javax::naming::CompositeName> = ::javax_naming / "CompositeName";
namespace javax::naming { class CompoundName; }
template<> constexpr auto signature<::javax::naming::CompoundName> = ::javax_naming / "CompoundName";
namespace javax::naming { class ConfigurationException; }
template<> constexpr auto signature<::javax::naming::ConfigurationException> = ::javax_naming / "ConfigurationException";
namespace javax::naming { class Context; }
template<> constexpr auto signature<::javax::naming::Context> = ::javax_naming / "Context";
namespace javax::naming { class ContextNotEmptyException; }
template<> constexpr auto signature<::javax::naming::ContextNotEmptyException> = ::javax_naming / "ContextNotEmptyException";
namespace javax::naming { class InitialContext; }
template<> constexpr auto signature<::javax::naming::InitialContext> = ::javax_naming / "InitialContext";
namespace javax::naming { class InsufficientResourcesException; }
template<> constexpr auto signature<::javax::naming::InsufficientResourcesException> = ::javax_naming / "InsufficientResourcesException";
namespace javax::naming { class InterruptedNamingException; }
template<> constexpr auto signature<::javax::naming::InterruptedNamingException> = ::javax_naming / "InterruptedNamingException";
namespace javax::naming { class InvalidNameException; }
template<> constexpr auto signature<::javax::naming::InvalidNameException> = ::javax_naming / "InvalidNameException";
namespace javax::naming { class LimitExceededException; }
template<> constexpr auto signature<::javax::naming::LimitExceededException> = ::javax_naming / "LimitExceededException";
namespace javax::naming { class LinkException; }
template<> constexpr auto signature<::javax::naming::LinkException> = ::javax_naming / "LinkException";
namespace javax::naming { class LinkLoopException; }
template<> constexpr auto signature<::javax::naming::LinkLoopException> = ::javax_naming / "LinkLoopException";
namespace javax::naming { class LinkRef; }
template<> constexpr auto signature<::javax::naming::LinkRef> = ::javax_naming / "LinkRef";
namespace javax::naming { class MalformedLinkException; }
template<> constexpr auto signature<::javax::naming::MalformedLinkException> = ::javax_naming / "MalformedLinkException";
namespace javax::naming { class Name; }
template<> constexpr auto signature<::javax::naming::Name> = ::javax_naming / "Name";
namespace javax::naming { class NameAlreadyBoundException; }
template<> constexpr auto signature<::javax::naming::NameAlreadyBoundException> = ::javax_naming / "NameAlreadyBoundException";
namespace javax::naming { class NameClassPair; }
template<> constexpr auto signature<::javax::naming::NameClassPair> = ::javax_naming / "NameClassPair";
namespace javax::naming { class NameImpl; }
template<> constexpr auto signature<::javax::naming::NameImpl> = ::javax_naming / "NameImpl";
namespace javax::naming { class NameImplEnumerator; }
template<> constexpr auto signature<::javax::naming::NameImplEnumerator> = ::javax_naming / "NameImplEnumerator";
namespace javax::naming { class NameNotFoundException; }
template<> constexpr auto signature<::javax::naming::NameNotFoundException> = ::javax_naming / "NameNotFoundException";
namespace javax::naming { class NameParser; }
template<> constexpr auto signature<::javax::naming::NameParser> = ::javax_naming / "NameParser";
namespace javax::naming { class NamingEnumeration; }
template<> constexpr auto signature<::javax::naming::NamingEnumeration> = ::javax_naming / "NamingEnumeration";
namespace javax::naming { class NamingException; }
template<> constexpr auto signature<::javax::naming::NamingException> = ::javax_naming / "NamingException";
namespace javax::naming { class NamingSecurityException; }
template<> constexpr auto signature<::javax::naming::NamingSecurityException> = ::javax_naming / "NamingSecurityException";
namespace javax::naming { class NoInitialContextException; }
template<> constexpr auto signature<::javax::naming::NoInitialContextException> = ::javax_naming / "NoInitialContextException";
namespace javax::naming { class NoPermissionException; }
template<> constexpr auto signature<::javax::naming::NoPermissionException> = ::javax_naming / "NoPermissionException";
namespace javax::naming { class NotContextException; }
template<> constexpr auto signature<::javax::naming::NotContextException> = ::javax_naming / "NotContextException";
namespace javax::naming { class OperationNotSupportedException; }
template<> constexpr auto signature<::javax::naming::OperationNotSupportedException> = ::javax_naming / "OperationNotSupportedException";
namespace javax::naming { class PartialResultException; }
template<> constexpr auto signature<::javax::naming::PartialResultException> = ::javax_naming / "PartialResultException";
namespace javax::naming { class RefAddr; }
template<> constexpr auto signature<::javax::naming::RefAddr> = ::javax_naming / "RefAddr";
namespace javax::naming { class Reference; }
template<> constexpr auto signature<::javax::naming::Reference> = ::javax_naming / "Reference";
namespace javax::naming { class Referenceable; }
template<> constexpr auto signature<::javax::naming::Referenceable> = ::javax_naming / "Referenceable";
namespace javax::naming { class ReferralException; }
template<> constexpr auto signature<::javax::naming::ReferralException> = ::javax_naming / "ReferralException";
namespace javax::naming { class ServiceUnavailableException; }
template<> constexpr auto signature<::javax::naming::ServiceUnavailableException> = ::javax_naming / "ServiceUnavailableException";
namespace javax::naming { class SizeLimitExceededException; }
template<> constexpr auto signature<::javax::naming::SizeLimitExceededException> = ::javax_naming / "SizeLimitExceededException";
namespace javax::naming { class StringRefAddr; }
template<> constexpr auto signature<::javax::naming::StringRefAddr> = ::javax_naming / "StringRefAddr";
namespace javax::naming { class TimeLimitExceededException; }
template<> constexpr auto signature<::javax::naming::TimeLimitExceededException> = ::javax_naming / "TimeLimitExceededException";

#endif
