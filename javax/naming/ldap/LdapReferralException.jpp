#ifndef javax_naming_ldap_LdapReferralException_HPP
#define javax_naming_ldap_LdapReferralException_HPP

#include "../../../jfwd_decl.hpp"

class ::javax::naming::ldap::LdapReferralException : public jObject<::javax::naming::ldap::LdapReferralException, ::javax::naming::ReferralException> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::javax_naming_ldap / "LdapReferralException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::javax::naming::Context()>("getReferralContext"), //
		jMethod<::javax::naming::Context(::java::util::Hashtable)>("getReferralContext"), //
		jMethod<::javax::naming::Context(::java::util::Hashtable, ::javax::naming::ldap::Control *)>("getReferralContext"), //
	};

	template<typename R = ::javax::naming::Context, typename... Args>
	auto getReferralContext(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getReferralContext")] != -1);
		return call<R>("getReferralContext", forward<Args>(args)...);
	}

};

#endif
