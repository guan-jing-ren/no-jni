#ifndef java_beans_AppletInitializer_HPP
#define java_beans_AppletInitializer_HPP

#include "../../jfwd_decl.hpp"

class ::java::beans::AppletInitializer : public jObject<::java::beans::AppletInitializer, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_beans / "AppletInitializer";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::applet::Applet)>("activate"), //
		jMethod<::jvoid(::java::applet::Applet, ::java::beans::beancontext::BeanContext)>("initialize"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto activate(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("activate")] != -1);
		return call<R>("activate", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto initialize(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("initialize")] != -1);
		return call<R>("initialize", forward<Args>(args)...);
	}

};

#endif
