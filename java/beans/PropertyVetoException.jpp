#ifndef java_beans_PropertyVetoException_HPP
#define java_beans_PropertyVetoException_HPP

#include "../../jfwd_decl.hpp"

class ::java::beans::PropertyVetoException : public jObject<::java::beans::PropertyVetoException, ::java::lang::Exception> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_beans / "PropertyVetoException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::java::beans::PropertyChangeEvent)>(), //
		jMethod<::java::beans::PropertyChangeEvent()>("getPropertyChangeEvent"), //
	};

	template<typename R = ::java::beans::PropertyChangeEvent, typename... Args>
	auto getPropertyChangeEvent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPropertyChangeEvent")] != -1);
		return call<R>("getPropertyChangeEvent", std::forward<Args>(args)...);
	}

};

#endif
