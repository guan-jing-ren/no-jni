#ifndef java_beans_beancontext_BeanContextContainerProxy_HPP
#define java_beans_beancontext_BeanContextContainerProxy_HPP

#include "../../../jfwd_decl.hpp"

class ::java::beans::beancontext::BeanContextContainerProxy : public jObject<::java::beans::beancontext::BeanContextContainerProxy, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_beans_beancontext / "BeanContextContainerProxy";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::awt::Container()>("getContainer"), //
	};

	template<typename R = ::java::awt::Container, typename... Args>
	auto getContainer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getContainer")] != -1);
		return call<R>("getContainer", std::forward<Args>(args)...);
	}

};

#endif
