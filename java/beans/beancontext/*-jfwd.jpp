#ifndef java_beans_beancontext_JPP
#define java_beans_beancontext_JPP

namespace java::beans::beancontext { class BeanContext; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContext> = ::java_beans_beancontext / "BeanContext";
namespace java::beans::beancontext { class BeanContextChild; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextChild> = ::java_beans_beancontext / "BeanContextChild";
namespace java::beans::beancontext { class BeanContextChildComponentProxy; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextChildComponentProxy> = ::java_beans_beancontext / "BeanContextChildComponentProxy";
namespace java::beans::beancontext { class BeanContextChildSupport; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextChildSupport> = ::java_beans_beancontext / "BeanContextChildSupport";
namespace java::beans::beancontext { class BeanContextContainerProxy; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextContainerProxy> = ::java_beans_beancontext / "BeanContextContainerProxy";
namespace java::beans::beancontext { class BeanContextEvent; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextEvent> = ::java_beans_beancontext / "BeanContextEvent";
namespace java::beans::beancontext { class BeanContextMembershipEvent; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextMembershipEvent> = ::java_beans_beancontext / "BeanContextMembershipEvent";
namespace java::beans::beancontext { class BeanContextMembershipListener; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextMembershipListener> = ::java_beans_beancontext / "BeanContextMembershipListener";
namespace java::beans::beancontext { class BeanContextProxy; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextProxy> = ::java_beans_beancontext / "BeanContextProxy";
namespace java::beans::beancontext { class BeanContextServiceAvailableEvent; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServiceAvailableEvent> = ::java_beans_beancontext / "BeanContextServiceAvailableEvent";
namespace java::beans::beancontext { class BeanContextServiceProvider; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServiceProvider> = ::java_beans_beancontext / "BeanContextServiceProvider";
namespace java::beans::beancontext { class BeanContextServiceProviderBeanInfo; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServiceProviderBeanInfo> = ::java_beans_beancontext / "BeanContextServiceProviderBeanInfo";
namespace java::beans::beancontext { class BeanContextServiceRevokedEvent; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServiceRevokedEvent> = ::java_beans_beancontext / "BeanContextServiceRevokedEvent";
namespace java::beans::beancontext { class BeanContextServiceRevokedListener; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServiceRevokedListener> = ::java_beans_beancontext / "BeanContextServiceRevokedListener";
namespace java::beans::beancontext { class BeanContextServices; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServices> = ::java_beans_beancontext / "BeanContextServices";
namespace java::beans::beancontext { class BeanContextServicesListener; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesListener> = ::java_beans_beancontext / "BeanContextServicesListener";
namespace java::beans::beancontext { class BeanContextServicesSupport; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport> = ::java_beans_beancontext / "BeanContextServicesSupport";
namespace java::beans::beancontext { class BeanContextServicesSupport$BCSSChild; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport$BCSSChild> = ::java_beans_beancontext / "BeanContextServicesSupport$BCSSChild";
namespace java::beans::beancontext { class BeanContextServicesSupport$BCSSChild$BCSSCServiceClassRef; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport$BCSSChild$BCSSCServiceClassRef> = ::java_beans_beancontext / "BeanContextServicesSupport$BCSSChild$BCSSCServiceClassRef";
namespace java::beans::beancontext { class BeanContextServicesSupport$BCSSChild$BCSSCServiceRef; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport$BCSSChild$BCSSCServiceRef> = ::java_beans_beancontext / "BeanContextServicesSupport$BCSSChild$BCSSCServiceRef";
namespace java::beans::beancontext { class BeanContextServicesSupport$BCSSProxyServiceProvider; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport$BCSSProxyServiceProvider> = ::java_beans_beancontext / "BeanContextServicesSupport$BCSSProxyServiceProvider";
namespace java::beans::beancontext { class BeanContextServicesSupport$BCSSServiceProvider; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextServicesSupport$BCSSServiceProvider> = ::java_beans_beancontext / "BeanContextServicesSupport$BCSSServiceProvider";
namespace java::beans::beancontext { class BeanContextSupport; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextSupport> = ::java_beans_beancontext / "BeanContextSupport";
namespace java::beans::beancontext { class BeanContextSupport$1; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextSupport$1> = ::java_beans_beancontext / "BeanContextSupport$1";
namespace java::beans::beancontext { class BeanContextSupport$2; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextSupport$2> = ::java_beans_beancontext / "BeanContextSupport$2";
namespace java::beans::beancontext { class BeanContextSupport$BCSChild; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextSupport$BCSChild> = ::java_beans_beancontext / "BeanContextSupport$BCSChild";
namespace java::beans::beancontext { class BeanContextSupport$BCSIterator; }
template<> constexpr auto signature<::java::beans::beancontext::BeanContextSupport$BCSIterator> = ::java_beans_beancontext / "BeanContextSupport$BCSIterator";

#endif
