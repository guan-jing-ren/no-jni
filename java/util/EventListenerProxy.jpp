#ifndef java_util_EventListenerProxy_HPP
#define java_util_EventListenerProxy_HPP

#include "../../jfwd_decl.hpp"

class ::java::util::EventListenerProxy : public jObject<::java::util::EventListenerProxy, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util / "EventListenerProxy";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::util::EventListener)>(), //
		jMethod<::java::util::EventListener()>("getListener"), //
	};

	template<typename R = ::java::util::EventListener, typename... Args>
	auto getListener(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getListener")] != -1);
		return call<R>("getListener", forward<Args>(args)...);
	}

};

#endif
