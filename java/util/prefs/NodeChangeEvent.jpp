#ifndef java_util_prefs_NodeChangeEvent_HPP
#define java_util_prefs_NodeChangeEvent_HPP

#include "../../../jfwd_decl.hpp"

class ::java::util::prefs::NodeChangeEvent : public jObject<::java::util::prefs::NodeChangeEvent, ::java::util::EventObject> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util_prefs / "NodeChangeEvent";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::util::prefs::Preferences, ::java::util::prefs::Preferences)>(), //
		jMethod<::java::util::prefs::Preferences()>("getChild"), //
		jMethod<::java::util::prefs::Preferences()>("getParent"), //
	};

	template<typename R = ::java::util::prefs::Preferences, typename... Args>
	auto getChild(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getChild")] != -1);
		return call<R>("getChild", forward<Args>(args)...);
	}

	template<typename R = ::java::util::prefs::Preferences, typename... Args>
	auto getParent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getParent")] != -1);
		return call<R>("getParent", forward<Args>(args)...);
	}

};

#endif
