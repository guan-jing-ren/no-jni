#ifndef java_util_function_JPP
#define java_util_function_JPP

namespace java::util::function { class BiConsumer; }
template<> constexpr auto signature<::java::util::function::BiConsumer> = ::java_util_function / "BiConsumer";
namespace java::util::function { class BiFunction; }
template<> constexpr auto signature<::java::util::function::BiFunction> = ::java_util_function / "BiFunction";
namespace java::util::function { class BiPredicate; }
template<> constexpr auto signature<::java::util::function::BiPredicate> = ::java_util_function / "BiPredicate";
namespace java::util::function { class BinaryOperator; }
template<> constexpr auto signature<::java::util::function::BinaryOperator> = ::java_util_function / "BinaryOperator";
namespace java::util::function { class BooleanSupplier; }
template<> constexpr auto signature<::java::util::function::BooleanSupplier> = ::java_util_function / "BooleanSupplier";
namespace java::util::function { class Consumer; }
template<> constexpr auto signature<::java::util::function::Consumer> = ::java_util_function / "Consumer";
namespace java::util::function { class DoubleBinaryOperator; }
template<> constexpr auto signature<::java::util::function::DoubleBinaryOperator> = ::java_util_function / "DoubleBinaryOperator";
namespace java::util::function { class DoubleConsumer; }
template<> constexpr auto signature<::java::util::function::DoubleConsumer> = ::java_util_function / "DoubleConsumer";
namespace java::util::function { class DoubleFunction; }
template<> constexpr auto signature<::java::util::function::DoubleFunction> = ::java_util_function / "DoubleFunction";
namespace java::util::function { class DoublePredicate; }
template<> constexpr auto signature<::java::util::function::DoublePredicate> = ::java_util_function / "DoublePredicate";
namespace java::util::function { class DoubleSupplier; }
template<> constexpr auto signature<::java::util::function::DoubleSupplier> = ::java_util_function / "DoubleSupplier";
namespace java::util::function { class DoubleToIntFunction; }
template<> constexpr auto signature<::java::util::function::DoubleToIntFunction> = ::java_util_function / "DoubleToIntFunction";
namespace java::util::function { class DoubleToLongFunction; }
template<> constexpr auto signature<::java::util::function::DoubleToLongFunction> = ::java_util_function / "DoubleToLongFunction";
namespace java::util::function { class DoubleUnaryOperator; }
template<> constexpr auto signature<::java::util::function::DoubleUnaryOperator> = ::java_util_function / "DoubleUnaryOperator";
namespace java::util::function { class Function; }
template<> constexpr auto signature<::java::util::function::Function> = ::java_util_function / "Function";
namespace java::util::function { class IntBinaryOperator; }
template<> constexpr auto signature<::java::util::function::IntBinaryOperator> = ::java_util_function / "IntBinaryOperator";
namespace java::util::function { class IntConsumer; }
template<> constexpr auto signature<::java::util::function::IntConsumer> = ::java_util_function / "IntConsumer";
namespace java::util::function { class IntFunction; }
template<> constexpr auto signature<::java::util::function::IntFunction> = ::java_util_function / "IntFunction";
namespace java::util::function { class IntPredicate; }
template<> constexpr auto signature<::java::util::function::IntPredicate> = ::java_util_function / "IntPredicate";
namespace java::util::function { class IntSupplier; }
template<> constexpr auto signature<::java::util::function::IntSupplier> = ::java_util_function / "IntSupplier";
namespace java::util::function { class IntToDoubleFunction; }
template<> constexpr auto signature<::java::util::function::IntToDoubleFunction> = ::java_util_function / "IntToDoubleFunction";
namespace java::util::function { class IntToLongFunction; }
template<> constexpr auto signature<::java::util::function::IntToLongFunction> = ::java_util_function / "IntToLongFunction";
namespace java::util::function { class IntUnaryOperator; }
template<> constexpr auto signature<::java::util::function::IntUnaryOperator> = ::java_util_function / "IntUnaryOperator";
namespace java::util::function { class LongBinaryOperator; }
template<> constexpr auto signature<::java::util::function::LongBinaryOperator> = ::java_util_function / "LongBinaryOperator";
namespace java::util::function { class LongConsumer; }
template<> constexpr auto signature<::java::util::function::LongConsumer> = ::java_util_function / "LongConsumer";
namespace java::util::function { class LongFunction; }
template<> constexpr auto signature<::java::util::function::LongFunction> = ::java_util_function / "LongFunction";
namespace java::util::function { class LongPredicate; }
template<> constexpr auto signature<::java::util::function::LongPredicate> = ::java_util_function / "LongPredicate";
namespace java::util::function { class LongSupplier; }
template<> constexpr auto signature<::java::util::function::LongSupplier> = ::java_util_function / "LongSupplier";
namespace java::util::function { class LongToDoubleFunction; }
template<> constexpr auto signature<::java::util::function::LongToDoubleFunction> = ::java_util_function / "LongToDoubleFunction";
namespace java::util::function { class LongToIntFunction; }
template<> constexpr auto signature<::java::util::function::LongToIntFunction> = ::java_util_function / "LongToIntFunction";
namespace java::util::function { class LongUnaryOperator; }
template<> constexpr auto signature<::java::util::function::LongUnaryOperator> = ::java_util_function / "LongUnaryOperator";
namespace java::util::function { class ObjDoubleConsumer; }
template<> constexpr auto signature<::java::util::function::ObjDoubleConsumer> = ::java_util_function / "ObjDoubleConsumer";
namespace java::util::function { class ObjIntConsumer; }
template<> constexpr auto signature<::java::util::function::ObjIntConsumer> = ::java_util_function / "ObjIntConsumer";
namespace java::util::function { class ObjLongConsumer; }
template<> constexpr auto signature<::java::util::function::ObjLongConsumer> = ::java_util_function / "ObjLongConsumer";
namespace java::util::function { class Predicate; }
template<> constexpr auto signature<::java::util::function::Predicate> = ::java_util_function / "Predicate";
namespace java::util::function { class Supplier; }
template<> constexpr auto signature<::java::util::function::Supplier> = ::java_util_function / "Supplier";
namespace java::util::function { class ToDoubleBiFunction; }
template<> constexpr auto signature<::java::util::function::ToDoubleBiFunction> = ::java_util_function / "ToDoubleBiFunction";
namespace java::util::function { class ToDoubleFunction; }
template<> constexpr auto signature<::java::util::function::ToDoubleFunction> = ::java_util_function / "ToDoubleFunction";
namespace java::util::function { class ToIntBiFunction; }
template<> constexpr auto signature<::java::util::function::ToIntBiFunction> = ::java_util_function / "ToIntBiFunction";
namespace java::util::function { class ToIntFunction; }
template<> constexpr auto signature<::java::util::function::ToIntFunction> = ::java_util_function / "ToIntFunction";
namespace java::util::function { class ToLongBiFunction; }
template<> constexpr auto signature<::java::util::function::ToLongBiFunction> = ::java_util_function / "ToLongBiFunction";
namespace java::util::function { class ToLongFunction; }
template<> constexpr auto signature<::java::util::function::ToLongFunction> = ::java_util_function / "ToLongFunction";
namespace java::util::function { class UnaryOperator; }
template<> constexpr auto signature<::java::util::function::UnaryOperator> = ::java_util_function / "UnaryOperator";

#endif
