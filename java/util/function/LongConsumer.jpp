#ifndef java_util_function_LongConsumer_HPP
#define java_util_function_LongConsumer_HPP

#include "../../../jfwd_decl.hpp"

class ::java::util::function::LongConsumer : public jObject<::java::util::function::LongConsumer, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util_function / "LongConsumer";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::jlong)>("accept"), //
		jMethod<::java::util::function::LongConsumer(::java::util::function::LongConsumer)>("andThen"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto accept(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("accept")] != -1);
		return call<R>("accept", forward<Args>(args)...);
	}

	template<typename R = ::java::util::function::LongConsumer, typename... Args>
	auto andThen(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("andThen")] != -1);
		return call<R>("andThen", forward<Args>(args)...);
	}

};

#endif
