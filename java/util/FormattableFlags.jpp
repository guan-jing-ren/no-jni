#ifndef java_util_FormattableFlags_HPP
#define java_util_FormattableFlags_HPP

#include "../../jfwd_decl.hpp"

class ::java::util::FormattableFlags : public jObject<::java::util::FormattableFlags, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util / "FormattableFlags";

	constexpr static Enume field_signatures{
		jField<::jint>("ALTERNATE"), //
		jField<::jint>("LEFT_JUSTIFY"), //
		jField<::jint>("UPPERCASE"), //
	};

	template<typename F = ::jint>
	static auto ALTERNATE() {
		static_assert(field_signatures[jField<F>("ALTERNATE")] != -1);
		return sat<F>("ALTERNATE");
	}

	template<typename F = ::jint>
	static auto LEFT_JUSTIFY() {
		static_assert(field_signatures[jField<F>("LEFT_JUSTIFY")] != -1);
		return sat<F>("LEFT_JUSTIFY");
	}

	template<typename F = ::jint>
	static auto UPPERCASE() {
		static_assert(field_signatures[jField<F>("UPPERCASE")] != -1);
		return sat<F>("UPPERCASE");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
