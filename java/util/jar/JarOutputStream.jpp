#ifndef java_util_jar_JarOutputStream_HPP
#define java_util_jar_JarOutputStream_HPP

#include "../../../jfwd_decl.hpp"

class ::java::util::jar::JarOutputStream : public jObject<::java::util::jar::JarOutputStream, ::java::util::zip::ZipOutputStream> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util_jar / "JarOutputStream";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::io::OutputStream)>(), //
		jConstructor<::jvoid(::java::io::OutputStream, ::java::util::jar::Manifest)>(), //
		jMethod<::jvoid(::java::util::zip::ZipEntry)>("putNextEntry"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto putNextEntry(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("putNextEntry")] != -1);
		return call<R>("putNextEntry", std::forward<Args>(args)...);
	}

};

#endif
