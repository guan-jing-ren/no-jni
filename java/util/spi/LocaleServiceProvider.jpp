#ifndef java_util_spi_LocaleServiceProvider_HPP
#define java_util_spi_LocaleServiceProvider_HPP

#include "../../../jfwd_decl.hpp"

class ::java::util::spi::LocaleServiceProvider : public jObject<::java::util::spi::LocaleServiceProvider, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util_spi / "LocaleServiceProvider";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::util::Locale *()>("getAvailableLocales"), //
		jMethod<::jboolean(::java::util::Locale)>("isSupportedLocale"), //
	};

	template<typename R = ::java::util::Locale *, typename... Args>
	auto getAvailableLocales(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getAvailableLocales")] != -1);
		return call<R>("getAvailableLocales", forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto isSupportedLocale(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("isSupportedLocale")] != -1);
		return call<R>("isSupportedLocale", forward<Args>(args)...);
	}

};

#endif
