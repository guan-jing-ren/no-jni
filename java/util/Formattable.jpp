#ifndef java_util_Formattable_HPP
#define java_util_Formattable_HPP

#include "../../jfwd_decl.hpp"

class ::java::util::Formattable : public jObject<::java::util::Formattable, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util / "Formattable";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::util::Formatter, ::jint, ::jint, ::jint)>("formatTo"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto formatTo(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("formatTo")] != -1);
		return call<R>("formatTo", forward<Args>(args)...);
	}

};

#endif
