#ifndef java_util_MissingResourceException_HPP
#define java_util_MissingResourceException_HPP

#include "../../jfwd_decl.hpp"

class ::java::util::MissingResourceException : public jObject<::java::util::MissingResourceException, ::java::lang::RuntimeException> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_util / "MissingResourceException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::java::lang::String, ::java::lang::String)>(), //
		jMethod<::java::lang::String()>("getClassName"), //
		jMethod<::java::lang::String()>("getKey"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getClassName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getClassName")] != -1);
		return call<R>("getClassName", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getKey(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getKey")] != -1);
		return call<R>("getKey", forward<Args>(args)...);
	}

};

#endif
