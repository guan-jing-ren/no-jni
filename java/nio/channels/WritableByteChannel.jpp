#ifndef java_nio_channels_WritableByteChannel_HPP
#define java_nio_channels_WritableByteChannel_HPP

#include "../../../jfwd_decl.hpp"

class ::java::nio::channels::WritableByteChannel : public jObject<::java::nio::channels::WritableByteChannel, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_nio_channels / "WritableByteChannel";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jint(::java::nio::ByteBuffer)>("write"), //
	};

	template<typename R = ::jint, typename... Args>
	auto write(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("write")] != -1);
		return call<R>("write", std::forward<Args>(args)...);
	}

};

#endif
