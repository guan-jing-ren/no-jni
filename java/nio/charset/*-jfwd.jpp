#ifndef java_nio_charset_JPP
#define java_nio_charset_JPP

namespace java::nio::charset { class CharacterCodingException; }
template<> constexpr auto signature<::java::nio::charset::CharacterCodingException> = ::java_nio_charset / "CharacterCodingException";
namespace java::nio::charset { class Charset; }
template<> constexpr auto signature<::java::nio::charset::Charset> = ::java_nio_charset / "Charset";
namespace java::nio::charset { class Charset$1; }
template<> constexpr auto signature<::java::nio::charset::Charset$1> = ::java_nio_charset / "Charset$1";
namespace java::nio::charset { class Charset$2; }
template<> constexpr auto signature<::java::nio::charset::Charset$2> = ::java_nio_charset / "Charset$2";
namespace java::nio::charset { class Charset$3; }
template<> constexpr auto signature<::java::nio::charset::Charset$3> = ::java_nio_charset / "Charset$3";
namespace java::nio::charset { class Charset$ExtendedProviderHolder; }
template<> constexpr auto signature<::java::nio::charset::Charset$ExtendedProviderHolder> = ::java_nio_charset / "Charset$ExtendedProviderHolder";
namespace java::nio::charset { class Charset$ExtendedProviderHolder$1; }
template<> constexpr auto signature<::java::nio::charset::Charset$ExtendedProviderHolder$1> = ::java_nio_charset / "Charset$ExtendedProviderHolder$1";
namespace java::nio::charset { class CharsetDecoder; }
template<> constexpr auto signature<::java::nio::charset::CharsetDecoder> = ::java_nio_charset / "CharsetDecoder";
namespace java::nio::charset { class CharsetEncoder; }
template<> constexpr auto signature<::java::nio::charset::CharsetEncoder> = ::java_nio_charset / "CharsetEncoder";
namespace java::nio::charset { class CoderMalfunctionError; }
template<> constexpr auto signature<::java::nio::charset::CoderMalfunctionError> = ::java_nio_charset / "CoderMalfunctionError";
namespace java::nio::charset { class CoderResult; }
template<> constexpr auto signature<::java::nio::charset::CoderResult> = ::java_nio_charset / "CoderResult";
namespace java::nio::charset { class CoderResult$1; }
template<> constexpr auto signature<::java::nio::charset::CoderResult$1> = ::java_nio_charset / "CoderResult$1";
namespace java::nio::charset { class CoderResult$2; }
template<> constexpr auto signature<::java::nio::charset::CoderResult$2> = ::java_nio_charset / "CoderResult$2";
namespace java::nio::charset { class CoderResult$Cache; }
template<> constexpr auto signature<::java::nio::charset::CoderResult$Cache> = ::java_nio_charset / "CoderResult$Cache";
namespace java::nio::charset { class CodingErrorAction; }
template<> constexpr auto signature<::java::nio::charset::CodingErrorAction> = ::java_nio_charset / "CodingErrorAction";
namespace java::nio::charset { class IllegalCharsetNameException; }
template<> constexpr auto signature<::java::nio::charset::IllegalCharsetNameException> = ::java_nio_charset / "IllegalCharsetNameException";
namespace java::nio::charset { class MalformedInputException; }
template<> constexpr auto signature<::java::nio::charset::MalformedInputException> = ::java_nio_charset / "MalformedInputException";
namespace java::nio::charset { class StandardCharsets; }
template<> constexpr auto signature<::java::nio::charset::StandardCharsets> = ::java_nio_charset / "StandardCharsets";
namespace java::nio::charset { class UnmappableCharacterException; }
template<> constexpr auto signature<::java::nio::charset::UnmappableCharacterException> = ::java_nio_charset / "UnmappableCharacterException";
namespace java::nio::charset { class UnsupportedCharsetException; }
template<> constexpr auto signature<::java::nio::charset::UnsupportedCharsetException> = ::java_nio_charset / "UnsupportedCharsetException";

#endif
