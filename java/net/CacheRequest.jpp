#ifndef java_net_CacheRequest_HPP
#define java_net_CacheRequest_HPP

#include "../../jfwd_decl.hpp"

class ::java::net::CacheRequest : public jObject<::java::net::CacheRequest, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_net / "CacheRequest";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid()>("abort"), //
		jMethod<::java::io::OutputStream()>("getBody"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto abort(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("abort")] != -1);
		return call<R>("abort", std::forward<Args>(args)...);
	}

	template<typename R = ::java::io::OutputStream, typename... Args>
	auto getBody(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getBody")] != -1);
		return call<R>("getBody", std::forward<Args>(args)...);
	}

};

#endif
