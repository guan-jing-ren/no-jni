#ifndef java_text_ParseException_HPP
#define java_text_ParseException_HPP

#include "../../jfwd_decl.hpp"

class ::java::text::ParseException : public jObject<::java::text::ParseException, ::java::lang::Exception> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_text / "ParseException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::jint)>(), //
		jMethod<::jint()>("getErrorOffset"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getErrorOffset(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getErrorOffset")] != -1);
		return call<R>("getErrorOffset", forward<Args>(args)...);
	}

};

#endif
