#ifndef java_io_JPP
#define java_io_JPP

namespace java::io { class Bits; }
template<> constexpr auto signature<::java::io::Bits> = ::java_io / "Bits";
namespace java::io { class BufferedInputStream; }
template<> constexpr auto signature<::java::io::BufferedInputStream> = ::java_io / "BufferedInputStream";
namespace java::io { class BufferedOutputStream; }
template<> constexpr auto signature<::java::io::BufferedOutputStream> = ::java_io / "BufferedOutputStream";
namespace java::io { class BufferedReader; }
template<> constexpr auto signature<::java::io::BufferedReader> = ::java_io / "BufferedReader";
namespace java::io { class BufferedReader$1; }
template<> constexpr auto signature<::java::io::BufferedReader$1> = ::java_io / "BufferedReader$1";
namespace java::io { class BufferedWriter; }
template<> constexpr auto signature<::java::io::BufferedWriter> = ::java_io / "BufferedWriter";
namespace java::io { class ByteArrayInputStream; }
template<> constexpr auto signature<::java::io::ByteArrayInputStream> = ::java_io / "ByteArrayInputStream";
namespace java::io { class ByteArrayOutputStream; }
template<> constexpr auto signature<::java::io::ByteArrayOutputStream> = ::java_io / "ByteArrayOutputStream";
namespace java::io { class CharArrayReader; }
template<> constexpr auto signature<::java::io::CharArrayReader> = ::java_io / "CharArrayReader";
namespace java::io { class CharArrayWriter; }
template<> constexpr auto signature<::java::io::CharArrayWriter> = ::java_io / "CharArrayWriter";
namespace java::io { class CharConversionException; }
template<> constexpr auto signature<::java::io::CharConversionException> = ::java_io / "CharConversionException";
namespace java::io { class Closeable; }
template<> constexpr auto signature<::java::io::Closeable> = ::java_io / "Closeable";
namespace java::io { class Console; }
template<> constexpr auto signature<::java::io::Console> = ::java_io / "Console";
namespace java::io { class Console$1; }
template<> constexpr auto signature<::java::io::Console$1> = ::java_io / "Console$1";
namespace java::io { class Console$2; }
template<> constexpr auto signature<::java::io::Console$2> = ::java_io / "Console$2";
namespace java::io { class Console$3; }
template<> constexpr auto signature<::java::io::Console$3> = ::java_io / "Console$3";
namespace java::io { class Console$LineReader; }
template<> constexpr auto signature<::java::io::Console$LineReader> = ::java_io / "Console$LineReader";
namespace java::io { class DataInput; }
template<> constexpr auto signature<::java::io::DataInput> = ::java_io / "DataInput";
namespace java::io { class DataInputStream; }
template<> constexpr auto signature<::java::io::DataInputStream> = ::java_io / "DataInputStream";
namespace java::io { class DataOutput; }
template<> constexpr auto signature<::java::io::DataOutput> = ::java_io / "DataOutput";
namespace java::io { class DataOutputStream; }
template<> constexpr auto signature<::java::io::DataOutputStream> = ::java_io / "DataOutputStream";
namespace java::io { class DefaultFileSystem; }
template<> constexpr auto signature<::java::io::DefaultFileSystem> = ::java_io / "DefaultFileSystem";
namespace java::io { class DeleteOnExitHook; }
template<> constexpr auto signature<::java::io::DeleteOnExitHook> = ::java_io / "DeleteOnExitHook";
namespace java::io { class DeleteOnExitHook$1; }
template<> constexpr auto signature<::java::io::DeleteOnExitHook$1> = ::java_io / "DeleteOnExitHook$1";
namespace java::io { class EOFException; }
template<> constexpr auto signature<::java::io::EOFException> = ::java_io / "EOFException";
namespace java::io { class ExpiringCache; }
template<> constexpr auto signature<::java::io::ExpiringCache> = ::java_io / "ExpiringCache";
namespace java::io { class ExpiringCache$1; }
template<> constexpr auto signature<::java::io::ExpiringCache$1> = ::java_io / "ExpiringCache$1";
namespace java::io { class ExpiringCache$Entry; }
template<> constexpr auto signature<::java::io::ExpiringCache$Entry> = ::java_io / "ExpiringCache$Entry";
namespace java::io { class Externalizable; }
template<> constexpr auto signature<::java::io::Externalizable> = ::java_io / "Externalizable";
namespace java::io { class File; }
template<> constexpr auto signature<::java::io::File> = ::java_io / "File";
namespace java::io { class File$PathStatus; }
template<> constexpr auto signature<::java::io::File$PathStatus> = ::java_io / "File$PathStatus";
namespace java::io { class File$TempDirectory; }
template<> constexpr auto signature<::java::io::File$TempDirectory> = ::java_io / "File$TempDirectory";
namespace java::io { class FileDescriptor; }
template<> constexpr auto signature<::java::io::FileDescriptor> = ::java_io / "FileDescriptor";
namespace java::io { class FileDescriptor$1; }
template<> constexpr auto signature<::java::io::FileDescriptor$1> = ::java_io / "FileDescriptor$1";
namespace java::io { class FileFilter; }
template<> constexpr auto signature<::java::io::FileFilter> = ::java_io / "FileFilter";
namespace java::io { class FileInputStream; }
template<> constexpr auto signature<::java::io::FileInputStream> = ::java_io / "FileInputStream";
namespace java::io { class FileInputStream$1; }
template<> constexpr auto signature<::java::io::FileInputStream$1> = ::java_io / "FileInputStream$1";
namespace java::io { class FileNotFoundException; }
template<> constexpr auto signature<::java::io::FileNotFoundException> = ::java_io / "FileNotFoundException";
namespace java::io { class FileOutputStream; }
template<> constexpr auto signature<::java::io::FileOutputStream> = ::java_io / "FileOutputStream";
namespace java::io { class FileOutputStream$1; }
template<> constexpr auto signature<::java::io::FileOutputStream$1> = ::java_io / "FileOutputStream$1";
namespace java::io { class FilePermission; }
template<> constexpr auto signature<::java::io::FilePermission> = ::java_io / "FilePermission";
namespace java::io { class FilePermission$1; }
template<> constexpr auto signature<::java::io::FilePermission$1> = ::java_io / "FilePermission$1";
namespace java::io { class FilePermissionCollection; }
template<> constexpr auto signature<::java::io::FilePermissionCollection> = ::java_io / "FilePermissionCollection";
namespace java::io { class FileReader; }
template<> constexpr auto signature<::java::io::FileReader> = ::java_io / "FileReader";
namespace java::io { class FileSystem; }
template<> constexpr auto signature<::java::io::FileSystem> = ::java_io / "FileSystem";
namespace java::io { class FileWriter; }
template<> constexpr auto signature<::java::io::FileWriter> = ::java_io / "FileWriter";
namespace java::io { class FilenameFilter; }
template<> constexpr auto signature<::java::io::FilenameFilter> = ::java_io / "FilenameFilter";
namespace java::io { class FilterInputStream; }
template<> constexpr auto signature<::java::io::FilterInputStream> = ::java_io / "FilterInputStream";
namespace java::io { class FilterOutputStream; }
template<> constexpr auto signature<::java::io::FilterOutputStream> = ::java_io / "FilterOutputStream";
namespace java::io { class FilterReader; }
template<> constexpr auto signature<::java::io::FilterReader> = ::java_io / "FilterReader";
namespace java::io { class FilterWriter; }
template<> constexpr auto signature<::java::io::FilterWriter> = ::java_io / "FilterWriter";
namespace java::io { class Flushable; }
template<> constexpr auto signature<::java::io::Flushable> = ::java_io / "Flushable";
namespace java::io { class IOError; }
template<> constexpr auto signature<::java::io::IOError> = ::java_io / "IOError";
namespace java::io { class IOException; }
template<> constexpr auto signature<::java::io::IOException> = ::java_io / "IOException";
namespace java::io { class InputStream; }
template<> constexpr auto signature<::java::io::InputStream> = ::java_io / "InputStream";
namespace java::io { class InputStreamReader; }
template<> constexpr auto signature<::java::io::InputStreamReader> = ::java_io / "InputStreamReader";
namespace java::io { class InterruptedIOException; }
template<> constexpr auto signature<::java::io::InterruptedIOException> = ::java_io / "InterruptedIOException";
namespace java::io { class InvalidClassException; }
template<> constexpr auto signature<::java::io::InvalidClassException> = ::java_io / "InvalidClassException";
namespace java::io { class InvalidObjectException; }
template<> constexpr auto signature<::java::io::InvalidObjectException> = ::java_io / "InvalidObjectException";
namespace java::io { class LineNumberInputStream; }
template<> constexpr auto signature<::java::io::LineNumberInputStream> = ::java_io / "LineNumberInputStream";
namespace java::io { class LineNumberReader; }
template<> constexpr auto signature<::java::io::LineNumberReader> = ::java_io / "LineNumberReader";
namespace java::io { class NotActiveException; }
template<> constexpr auto signature<::java::io::NotActiveException> = ::java_io / "NotActiveException";
namespace java::io { class NotSerializableException; }
template<> constexpr auto signature<::java::io::NotSerializableException> = ::java_io / "NotSerializableException";
namespace java::io { class ObjectInput; }
template<> constexpr auto signature<::java::io::ObjectInput> = ::java_io / "ObjectInput";
namespace java::io { class ObjectInputStream; }
template<> constexpr auto signature<::java::io::ObjectInputStream> = ::java_io / "ObjectInputStream";
namespace java::io { class ObjectInputStream$1; }
template<> constexpr auto signature<::java::io::ObjectInputStream$1> = ::java_io / "ObjectInputStream$1";
namespace java::io { class ObjectInputStream$2; }
template<> constexpr auto signature<::java::io::ObjectInputStream$2> = ::java_io / "ObjectInputStream$2";
namespace java::io { class ObjectInputStream$BlockDataInputStream; }
template<> constexpr auto signature<::java::io::ObjectInputStream$BlockDataInputStream> = ::java_io / "ObjectInputStream$BlockDataInputStream";
namespace java::io { class ObjectInputStream$Caches; }
template<> constexpr auto signature<::java::io::ObjectInputStream$Caches> = ::java_io / "ObjectInputStream$Caches";
namespace java::io { class ObjectInputStream$FilterValues; }
template<> constexpr auto signature<::java::io::ObjectInputStream$FilterValues> = ::java_io / "ObjectInputStream$FilterValues";
namespace java::io { class ObjectInputStream$GetField; }
template<> constexpr auto signature<::java::io::ObjectInputStream$GetField> = ::java_io / "ObjectInputStream$GetField";
namespace java::io { class ObjectInputStream$GetFieldImpl; }
template<> constexpr auto signature<::java::io::ObjectInputStream$GetFieldImpl> = ::java_io / "ObjectInputStream$GetFieldImpl";
namespace java::io { class ObjectInputStream$HandleTable; }
template<> constexpr auto signature<::java::io::ObjectInputStream$HandleTable> = ::java_io / "ObjectInputStream$HandleTable";
namespace java::io { class ObjectInputStream$HandleTable$HandleList; }
template<> constexpr auto signature<::java::io::ObjectInputStream$HandleTable$HandleList> = ::java_io / "ObjectInputStream$HandleTable$HandleList";
namespace java::io { class ObjectInputStream$Logging; }
template<> constexpr auto signature<::java::io::ObjectInputStream$Logging> = ::java_io / "ObjectInputStream$Logging";
namespace java::io { class ObjectInputStream$PeekInputStream; }
template<> constexpr auto signature<::java::io::ObjectInputStream$PeekInputStream> = ::java_io / "ObjectInputStream$PeekInputStream";
namespace java::io { class ObjectInputStream$ValidationList; }
template<> constexpr auto signature<::java::io::ObjectInputStream$ValidationList> = ::java_io / "ObjectInputStream$ValidationList";
namespace java::io { class ObjectInputStream$ValidationList$1; }
template<> constexpr auto signature<::java::io::ObjectInputStream$ValidationList$1> = ::java_io / "ObjectInputStream$ValidationList$1";
namespace java::io { class ObjectInputStream$ValidationList$Callback; }
template<> constexpr auto signature<::java::io::ObjectInputStream$ValidationList$Callback> = ::java_io / "ObjectInputStream$ValidationList$Callback";
namespace java::io { class ObjectInputValidation; }
template<> constexpr auto signature<::java::io::ObjectInputValidation> = ::java_io / "ObjectInputValidation";
namespace java::io { class ObjectOutput; }
template<> constexpr auto signature<::java::io::ObjectOutput> = ::java_io / "ObjectOutput";
namespace java::io { class ObjectOutputStream; }
template<> constexpr auto signature<::java::io::ObjectOutputStream> = ::java_io / "ObjectOutputStream";
namespace java::io { class ObjectOutputStream$1; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$1> = ::java_io / "ObjectOutputStream$1";
namespace java::io { class ObjectOutputStream$BlockDataOutputStream; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$BlockDataOutputStream> = ::java_io / "ObjectOutputStream$BlockDataOutputStream";
namespace java::io { class ObjectOutputStream$Caches; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$Caches> = ::java_io / "ObjectOutputStream$Caches";
namespace java::io { class ObjectOutputStream$DebugTraceInfoStack; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$DebugTraceInfoStack> = ::java_io / "ObjectOutputStream$DebugTraceInfoStack";
namespace java::io { class ObjectOutputStream$HandleTable; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$HandleTable> = ::java_io / "ObjectOutputStream$HandleTable";
namespace java::io { class ObjectOutputStream$PutField; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$PutField> = ::java_io / "ObjectOutputStream$PutField";
namespace java::io { class ObjectOutputStream$PutFieldImpl; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$PutFieldImpl> = ::java_io / "ObjectOutputStream$PutFieldImpl";
namespace java::io { class ObjectOutputStream$ReplaceTable; }
template<> constexpr auto signature<::java::io::ObjectOutputStream$ReplaceTable> = ::java_io / "ObjectOutputStream$ReplaceTable";
namespace java::io { class ObjectStreamClass; }
template<> constexpr auto signature<::java::io::ObjectStreamClass> = ::java_io / "ObjectStreamClass";
namespace java::io { class ObjectStreamClass$1; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$1> = ::java_io / "ObjectStreamClass$1";
namespace java::io { class ObjectStreamClass$2; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$2> = ::java_io / "ObjectStreamClass$2";
namespace java::io { class ObjectStreamClass$3; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$3> = ::java_io / "ObjectStreamClass$3";
namespace java::io { class ObjectStreamClass$4; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$4> = ::java_io / "ObjectStreamClass$4";
namespace java::io { class ObjectStreamClass$5; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$5> = ::java_io / "ObjectStreamClass$5";
namespace java::io { class ObjectStreamClass$Caches; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$Caches> = ::java_io / "ObjectStreamClass$Caches";
namespace java::io { class ObjectStreamClass$ClassDataSlot; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$ClassDataSlot> = ::java_io / "ObjectStreamClass$ClassDataSlot";
namespace java::io { class ObjectStreamClass$EntryFuture; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$EntryFuture> = ::java_io / "ObjectStreamClass$EntryFuture";
namespace java::io { class ObjectStreamClass$EntryFuture$1; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$EntryFuture$1> = ::java_io / "ObjectStreamClass$EntryFuture$1";
namespace java::io { class ObjectStreamClass$ExceptionInfo; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$ExceptionInfo> = ::java_io / "ObjectStreamClass$ExceptionInfo";
namespace java::io { class ObjectStreamClass$FieldReflector; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$FieldReflector> = ::java_io / "ObjectStreamClass$FieldReflector";
namespace java::io { class ObjectStreamClass$FieldReflectorKey; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$FieldReflectorKey> = ::java_io / "ObjectStreamClass$FieldReflectorKey";
namespace java::io { class ObjectStreamClass$MemberSignature; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$MemberSignature> = ::java_io / "ObjectStreamClass$MemberSignature";
namespace java::io { class ObjectStreamClass$WeakClassKey; }
template<> constexpr auto signature<::java::io::ObjectStreamClass$WeakClassKey> = ::java_io / "ObjectStreamClass$WeakClassKey";
namespace java::io { class ObjectStreamConstants; }
template<> constexpr auto signature<::java::io::ObjectStreamConstants> = ::java_io / "ObjectStreamConstants";
namespace java::io { class ObjectStreamException; }
template<> constexpr auto signature<::java::io::ObjectStreamException> = ::java_io / "ObjectStreamException";
namespace java::io { class ObjectStreamField; }
template<> constexpr auto signature<::java::io::ObjectStreamField> = ::java_io / "ObjectStreamField";
namespace java::io { class OptionalDataException; }
template<> constexpr auto signature<::java::io::OptionalDataException> = ::java_io / "OptionalDataException";
namespace java::io { class OutputStream; }
template<> constexpr auto signature<::java::io::OutputStream> = ::java_io / "OutputStream";
namespace java::io { class OutputStreamWriter; }
template<> constexpr auto signature<::java::io::OutputStreamWriter> = ::java_io / "OutputStreamWriter";
namespace java::io { class PipedInputStream; }
template<> constexpr auto signature<::java::io::PipedInputStream> = ::java_io / "PipedInputStream";
namespace java::io { class PipedOutputStream; }
template<> constexpr auto signature<::java::io::PipedOutputStream> = ::java_io / "PipedOutputStream";
namespace java::io { class PipedReader; }
template<> constexpr auto signature<::java::io::PipedReader> = ::java_io / "PipedReader";
namespace java::io { class PipedWriter; }
template<> constexpr auto signature<::java::io::PipedWriter> = ::java_io / "PipedWriter";
namespace java::io { class PrintStream; }
template<> constexpr auto signature<::java::io::PrintStream> = ::java_io / "PrintStream";
namespace java::io { class PrintWriter; }
template<> constexpr auto signature<::java::io::PrintWriter> = ::java_io / "PrintWriter";
namespace java::io { class PushbackInputStream; }
template<> constexpr auto signature<::java::io::PushbackInputStream> = ::java_io / "PushbackInputStream";
namespace java::io { class PushbackReader; }
template<> constexpr auto signature<::java::io::PushbackReader> = ::java_io / "PushbackReader";
namespace java::io { class RandomAccessFile; }
template<> constexpr auto signature<::java::io::RandomAccessFile> = ::java_io / "RandomAccessFile";
namespace java::io { class RandomAccessFile$1; }
template<> constexpr auto signature<::java::io::RandomAccessFile$1> = ::java_io / "RandomAccessFile$1";
namespace java::io { class Reader; }
template<> constexpr auto signature<::java::io::Reader> = ::java_io / "Reader";
namespace java::io { class SequenceInputStream; }
template<> constexpr auto signature<::java::io::SequenceInputStream> = ::java_io / "SequenceInputStream";
namespace java::io { class SerialCallbackContext; }
template<> constexpr auto signature<::java::io::SerialCallbackContext> = ::java_io / "SerialCallbackContext";
namespace java::io { class Serializable; }
template<> constexpr auto signature<::java::io::Serializable> = ::java_io / "Serializable";
namespace java::io { class SerializablePermission; }
template<> constexpr auto signature<::java::io::SerializablePermission> = ::java_io / "SerializablePermission";
namespace java::io { class StreamCorruptedException; }
template<> constexpr auto signature<::java::io::StreamCorruptedException> = ::java_io / "StreamCorruptedException";
namespace java::io { class StreamTokenizer; }
template<> constexpr auto signature<::java::io::StreamTokenizer> = ::java_io / "StreamTokenizer";
namespace java::io { class StringBufferInputStream; }
template<> constexpr auto signature<::java::io::StringBufferInputStream> = ::java_io / "StringBufferInputStream";
namespace java::io { class StringReader; }
template<> constexpr auto signature<::java::io::StringReader> = ::java_io / "StringReader";
namespace java::io { class StringWriter; }
template<> constexpr auto signature<::java::io::StringWriter> = ::java_io / "StringWriter";
namespace java::io { class SyncFailedException; }
template<> constexpr auto signature<::java::io::SyncFailedException> = ::java_io / "SyncFailedException";
namespace java::io { class UTFDataFormatException; }
template<> constexpr auto signature<::java::io::UTFDataFormatException> = ::java_io / "UTFDataFormatException";
namespace java::io { class UncheckedIOException; }
template<> constexpr auto signature<::java::io::UncheckedIOException> = ::java_io / "UncheckedIOException";
namespace java::io { class UnixFileSystem; }
template<> constexpr auto signature<::java::io::UnixFileSystem> = ::java_io / "UnixFileSystem";
namespace java::io { class UnsupportedEncodingException; }
template<> constexpr auto signature<::java::io::UnsupportedEncodingException> = ::java_io / "UnsupportedEncodingException";
namespace java::io { class WriteAbortedException; }
template<> constexpr auto signature<::java::io::WriteAbortedException> = ::java_io / "WriteAbortedException";
namespace java::io { class Writer; }
template<> constexpr auto signature<::java::io::Writer> = ::java_io / "Writer";

#endif
