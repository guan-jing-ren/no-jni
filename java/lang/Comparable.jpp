#ifndef java_lang_Comparable_HPP
#define java_lang_Comparable_HPP

#include "../../jfwd_decl.hpp"

class ::java::lang::Comparable : public jObject<::java::lang::Comparable, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_lang / "Comparable";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jint(::java::lang::Object)>("compareTo"), //
	};

	template<typename R = ::jint, typename... Args>
	auto compareTo(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("compareTo")] != -1);
		return call<R>("compareTo", std::forward<Args>(args)...);
	}

};

#endif
