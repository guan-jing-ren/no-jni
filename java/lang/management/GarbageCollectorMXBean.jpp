#ifndef java_lang_management_GarbageCollectorMXBean_HPP
#define java_lang_management_GarbageCollectorMXBean_HPP

#include "../../../jfwd_decl.hpp"

class ::java::lang::management::GarbageCollectorMXBean : public jObject<::java::lang::management::GarbageCollectorMXBean, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_lang_management / "GarbageCollectorMXBean";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jlong()>("getCollectionCount"), //
		jMethod<::jlong()>("getCollectionTime"), //
	};

	template<typename R = ::jlong, typename... Args>
	auto getCollectionCount(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getCollectionCount")] != -1);
		return call<R>("getCollectionCount", forward<Args>(args)...);
	}

	template<typename R = ::jlong, typename... Args>
	auto getCollectionTime(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getCollectionTime")] != -1);
		return call<R>("getCollectionTime", forward<Args>(args)...);
	}

};

#endif
