#ifndef java_lang_instrument_ClassFileTransformer_HPP
#define java_lang_instrument_ClassFileTransformer_HPP

#include "../../../jfwd_decl.hpp"

class ::java::lang::instrument::ClassFileTransformer : public jObject<::java::lang::instrument::ClassFileTransformer, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_lang_instrument / "ClassFileTransformer";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jbyte *(::java::lang::ClassLoader, ::java::lang::String, ::java::lang::Class, ::java::security::ProtectionDomain, ::jbyte *)>("transform"), //
	};

	template<typename R = ::jbyte *, typename... Args>
	auto transform(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("transform")] != -1);
		return call<R>("transform", std::forward<Args>(args)...);
	}

};

#endif
