#ifndef java_lang_reflect_WildcardType_HPP
#define java_lang_reflect_WildcardType_HPP

#include "../../../jfwd_decl.hpp"

class ::java::lang::reflect::WildcardType : public jObject<::java::lang::reflect::WildcardType, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_lang_reflect / "WildcardType";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::reflect::Type *()>("getLowerBounds"), //
		jMethod<::java::lang::reflect::Type *()>("getUpperBounds"), //
	};

	template<typename R = ::java::lang::reflect::Type *, typename... Args>
	auto getLowerBounds(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getLowerBounds")] != -1);
		return call<R>("getLowerBounds", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::reflect::Type *, typename... Args>
	auto getUpperBounds(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getUpperBounds")] != -1);
		return call<R>("getUpperBounds", forward<Args>(args)...);
	}

};

#endif
