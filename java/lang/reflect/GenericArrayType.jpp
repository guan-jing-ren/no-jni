#ifndef java_lang_reflect_GenericArrayType_HPP
#define java_lang_reflect_GenericArrayType_HPP

#include "../../../jfwd_decl.hpp"

class ::java::lang::reflect::GenericArrayType : public jObject<::java::lang::reflect::GenericArrayType, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_lang_reflect / "GenericArrayType";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::reflect::Type()>("getGenericComponentType"), //
	};

	template<typename R = ::java::lang::reflect::Type, typename... Args>
	auto getGenericComponentType(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getGenericComponentType")] != -1);
		return call<R>("getGenericComponentType", std::forward<Args>(args)...);
	}

};

#endif
