#ifndef java_security_acl_Permission_HPP
#define java_security_acl_Permission_HPP

#include "../../../jfwd_decl.hpp"

class ::java::security::acl::Permission : public jObject<::java::security::acl::Permission, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_security_acl / "Permission";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jboolean(::java::lang::Object)>("equals"), //
		jMethod<::java::lang::String()>("toString"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto equals(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("equals")] != -1);
		return call<R>("equals", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto toString(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("toString")] != -1);
		return call<R>("toString", forward<Args>(args)...);
	}

};

#endif
