#ifndef java_security_interfaces_RSAPublicKey_HPP
#define java_security_interfaces_RSAPublicKey_HPP

#include "../../../jfwd_decl.hpp"

class ::java::security::interfaces::RSAPublicKey : public jObject<::java::security::interfaces::RSAPublicKey, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_security_interfaces / "RSAPublicKey";

	constexpr static Enume field_signatures{
		jField<::jlong>("serialVersionUID"), //
	};

	template<typename F = ::jlong>
	static auto serialVersionUID() {
		static_assert(field_signatures[jField<F>("serialVersionUID")] != -1);
		return sat<F>("serialVersionUID");
	}

	constexpr static Enume method_signatures{
		jMethod<::java::math::BigInteger()>("getPublicExponent"), //
	};

	template<typename R = ::java::math::BigInteger, typename... Args>
	auto getPublicExponent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getPublicExponent")] != -1);
		return call<R>("getPublicExponent", forward<Args>(args)...);
	}

};

#endif
