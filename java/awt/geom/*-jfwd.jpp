#ifndef java_awt_geom_JPP
#define java_awt_geom_JPP

namespace java::awt::geom { class AffineTransform; }
template<> constexpr auto signature<::java::awt::geom::AffineTransform> = ::java_awt_geom / "AffineTransform";
namespace java::awt::geom { class Arc2D; }
template<> constexpr auto signature<::java::awt::geom::Arc2D> = ::java_awt_geom / "Arc2D";
namespace java::awt::geom { class Arc2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Arc2D$Double> = ::java_awt_geom / "Arc2D$Double";
namespace java::awt::geom { class Arc2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Arc2D$Float> = ::java_awt_geom / "Arc2D$Float";
namespace java::awt::geom { class ArcIterator; }
template<> constexpr auto signature<::java::awt::geom::ArcIterator> = ::java_awt_geom / "ArcIterator";
namespace java::awt::geom { class Area; }
template<> constexpr auto signature<::java::awt::geom::Area> = ::java_awt_geom / "Area";
namespace java::awt::geom { class AreaIterator; }
template<> constexpr auto signature<::java::awt::geom::AreaIterator> = ::java_awt_geom / "AreaIterator";
namespace java::awt::geom { class CubicCurve2D; }
template<> constexpr auto signature<::java::awt::geom::CubicCurve2D> = ::java_awt_geom / "CubicCurve2D";
namespace java::awt::geom { class CubicCurve2D$Double; }
template<> constexpr auto signature<::java::awt::geom::CubicCurve2D$Double> = ::java_awt_geom / "CubicCurve2D$Double";
namespace java::awt::geom { class CubicCurve2D$Float; }
template<> constexpr auto signature<::java::awt::geom::CubicCurve2D$Float> = ::java_awt_geom / "CubicCurve2D$Float";
namespace java::awt::geom { class CubicIterator; }
template<> constexpr auto signature<::java::awt::geom::CubicIterator> = ::java_awt_geom / "CubicIterator";
namespace java::awt::geom { class Dimension2D; }
template<> constexpr auto signature<::java::awt::geom::Dimension2D> = ::java_awt_geom / "Dimension2D";
namespace java::awt::geom { class Ellipse2D; }
template<> constexpr auto signature<::java::awt::geom::Ellipse2D> = ::java_awt_geom / "Ellipse2D";
namespace java::awt::geom { class Ellipse2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Ellipse2D$Double> = ::java_awt_geom / "Ellipse2D$Double";
namespace java::awt::geom { class Ellipse2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Ellipse2D$Float> = ::java_awt_geom / "Ellipse2D$Float";
namespace java::awt::geom { class EllipseIterator; }
template<> constexpr auto signature<::java::awt::geom::EllipseIterator> = ::java_awt_geom / "EllipseIterator";
namespace java::awt::geom { class FlatteningPathIterator; }
template<> constexpr auto signature<::java::awt::geom::FlatteningPathIterator> = ::java_awt_geom / "FlatteningPathIterator";
namespace java::awt::geom { class GeneralPath; }
template<> constexpr auto signature<::java::awt::geom::GeneralPath> = ::java_awt_geom / "GeneralPath";
namespace java::awt::geom { class IllegalPathStateException; }
template<> constexpr auto signature<::java::awt::geom::IllegalPathStateException> = ::java_awt_geom / "IllegalPathStateException";
namespace java::awt::geom { class Line2D; }
template<> constexpr auto signature<::java::awt::geom::Line2D> = ::java_awt_geom / "Line2D";
namespace java::awt::geom { class Line2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Line2D$Double> = ::java_awt_geom / "Line2D$Double";
namespace java::awt::geom { class Line2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Line2D$Float> = ::java_awt_geom / "Line2D$Float";
namespace java::awt::geom { class LineIterator; }
template<> constexpr auto signature<::java::awt::geom::LineIterator> = ::java_awt_geom / "LineIterator";
namespace java::awt::geom { class NoninvertibleTransformException; }
template<> constexpr auto signature<::java::awt::geom::NoninvertibleTransformException> = ::java_awt_geom / "NoninvertibleTransformException";
namespace java::awt::geom { class Path2D; }
template<> constexpr auto signature<::java::awt::geom::Path2D> = ::java_awt_geom / "Path2D";
namespace java::awt::geom { class Path2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Double> = ::java_awt_geom / "Path2D$Double";
namespace java::awt::geom { class Path2D$Double$CopyIterator; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Double$CopyIterator> = ::java_awt_geom / "Path2D$Double$CopyIterator";
namespace java::awt::geom { class Path2D$Double$TxIterator; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Double$TxIterator> = ::java_awt_geom / "Path2D$Double$TxIterator";
namespace java::awt::geom { class Path2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Float> = ::java_awt_geom / "Path2D$Float";
namespace java::awt::geom { class Path2D$Float$CopyIterator; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Float$CopyIterator> = ::java_awt_geom / "Path2D$Float$CopyIterator";
namespace java::awt::geom { class Path2D$Float$TxIterator; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Float$TxIterator> = ::java_awt_geom / "Path2D$Float$TxIterator";
namespace java::awt::geom { class Path2D$Iterator; }
template<> constexpr auto signature<::java::awt::geom::Path2D$Iterator> = ::java_awt_geom / "Path2D$Iterator";
namespace java::awt::geom { class PathIterator; }
template<> constexpr auto signature<::java::awt::geom::PathIterator> = ::java_awt_geom / "PathIterator";
namespace java::awt::geom { class Point2D; }
template<> constexpr auto signature<::java::awt::geom::Point2D> = ::java_awt_geom / "Point2D";
namespace java::awt::geom { class Point2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Point2D$Double> = ::java_awt_geom / "Point2D$Double";
namespace java::awt::geom { class Point2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Point2D$Float> = ::java_awt_geom / "Point2D$Float";
namespace java::awt::geom { class QuadCurve2D; }
template<> constexpr auto signature<::java::awt::geom::QuadCurve2D> = ::java_awt_geom / "QuadCurve2D";
namespace java::awt::geom { class QuadCurve2D$Double; }
template<> constexpr auto signature<::java::awt::geom::QuadCurve2D$Double> = ::java_awt_geom / "QuadCurve2D$Double";
namespace java::awt::geom { class QuadCurve2D$Float; }
template<> constexpr auto signature<::java::awt::geom::QuadCurve2D$Float> = ::java_awt_geom / "QuadCurve2D$Float";
namespace java::awt::geom { class QuadIterator; }
template<> constexpr auto signature<::java::awt::geom::QuadIterator> = ::java_awt_geom / "QuadIterator";
namespace java::awt::geom { class RectIterator; }
template<> constexpr auto signature<::java::awt::geom::RectIterator> = ::java_awt_geom / "RectIterator";
namespace java::awt::geom { class Rectangle2D; }
template<> constexpr auto signature<::java::awt::geom::Rectangle2D> = ::java_awt_geom / "Rectangle2D";
namespace java::awt::geom { class Rectangle2D$Double; }
template<> constexpr auto signature<::java::awt::geom::Rectangle2D$Double> = ::java_awt_geom / "Rectangle2D$Double";
namespace java::awt::geom { class Rectangle2D$Float; }
template<> constexpr auto signature<::java::awt::geom::Rectangle2D$Float> = ::java_awt_geom / "Rectangle2D$Float";
namespace java::awt::geom { class RectangularShape; }
template<> constexpr auto signature<::java::awt::geom::RectangularShape> = ::java_awt_geom / "RectangularShape";
namespace java::awt::geom { class RoundRectIterator; }
template<> constexpr auto signature<::java::awt::geom::RoundRectIterator> = ::java_awt_geom / "RoundRectIterator";
namespace java::awt::geom { class RoundRectangle2D; }
template<> constexpr auto signature<::java::awt::geom::RoundRectangle2D> = ::java_awt_geom / "RoundRectangle2D";
namespace java::awt::geom { class RoundRectangle2D$Double; }
template<> constexpr auto signature<::java::awt::geom::RoundRectangle2D$Double> = ::java_awt_geom / "RoundRectangle2D$Double";
namespace java::awt::geom { class RoundRectangle2D$Float; }
template<> constexpr auto signature<::java::awt::geom::RoundRectangle2D$Float> = ::java_awt_geom / "RoundRectangle2D$Float";

#endif
