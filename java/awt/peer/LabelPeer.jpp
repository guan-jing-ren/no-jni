#ifndef java_awt_peer_LabelPeer_HPP
#define java_awt_peer_LabelPeer_HPP

#include "../../../jfwd_decl.hpp"

class ::java::awt::peer::LabelPeer : public jObject<::java::awt::peer::LabelPeer, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_awt_peer / "LabelPeer";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::jint)>("setAlignment"), //
		jMethod<::jvoid(::java::lang::String)>("setText"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto setAlignment(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setAlignment")] != -1);
		return call<R>("setAlignment", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setText(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setText")] != -1);
		return call<R>("setText", std::forward<Args>(args)...);
	}

};

#endif
