#ifndef java_awt_print_Book_HPP
#define java_awt_print_Book_HPP

#include "../../../jfwd_decl.hpp"

class ::java::awt::print::Book : public jObject<::java::awt::print::Book, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_awt_print / "Book";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid(::java::awt::print::Printable, ::java::awt::print::PageFormat)>("append"), //
		jMethod<::jvoid(::java::awt::print::Printable, ::java::awt::print::PageFormat, ::jint)>("append"), //
		jMethod<::jint()>("getNumberOfPages"), //
		jMethod<::java::awt::print::PageFormat(::jint)>("getPageFormat"), //
		jMethod<::java::awt::print::Printable(::jint)>("getPrintable"), //
		jMethod<::jvoid(::jint, ::java::awt::print::Printable, ::java::awt::print::PageFormat)>("setPage"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto append(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("append")] != -1);
		return call<R>("append", forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getNumberOfPages(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getNumberOfPages")] != -1);
		return call<R>("getNumberOfPages", forward<Args>(args)...);
	}

	template<typename R = ::java::awt::print::PageFormat, typename... Args>
	auto getPageFormat(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getPageFormat")] != -1);
		return call<R>("getPageFormat", forward<Args>(args)...);
	}

	template<typename R = ::java::awt::print::Printable, typename... Args>
	auto getPrintable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getPrintable")] != -1);
		return call<R>("getPrintable", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("setPage")] != -1);
		return call<R>("setPage", forward<Args>(args)...);
	}

};

#endif
