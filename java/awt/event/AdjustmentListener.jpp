#ifndef java_awt_event_AdjustmentListener_HPP
#define java_awt_event_AdjustmentListener_HPP

#include "../../../jfwd_decl.hpp"

class ::java::awt::event::AdjustmentListener : public jObject<::java::awt::event::AdjustmentListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_awt_event / "AdjustmentListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::event::AdjustmentEvent)>("adjustmentValueChanged"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto adjustmentValueChanged(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("adjustmentValueChanged")] != -1);
		return call<R>("adjustmentValueChanged", std::forward<Args>(args)...);
	}

};

#endif
