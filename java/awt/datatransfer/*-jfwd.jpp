#ifndef java_awt_datatransfer_JPP
#define java_awt_datatransfer_JPP

namespace java::awt::datatransfer { class Clipboard; }
template<> constexpr auto signature<::java::awt::datatransfer::Clipboard> = ::java_awt_datatransfer / "Clipboard";
namespace java::awt::datatransfer { class Clipboard$1; }
template<> constexpr auto signature<::java::awt::datatransfer::Clipboard$1> = ::java_awt_datatransfer / "Clipboard$1";
namespace java::awt::datatransfer { class Clipboard$2; }
template<> constexpr auto signature<::java::awt::datatransfer::Clipboard$2> = ::java_awt_datatransfer / "Clipboard$2";
namespace java::awt::datatransfer { class ClipboardOwner; }
template<> constexpr auto signature<::java::awt::datatransfer::ClipboardOwner> = ::java_awt_datatransfer / "ClipboardOwner";
namespace java::awt::datatransfer { class DataFlavor; }
template<> constexpr auto signature<::java::awt::datatransfer::DataFlavor> = ::java_awt_datatransfer / "DataFlavor";
namespace java::awt::datatransfer { class DataFlavor$TextFlavorComparator; }
template<> constexpr auto signature<::java::awt::datatransfer::DataFlavor$TextFlavorComparator> = ::java_awt_datatransfer / "DataFlavor$TextFlavorComparator";
namespace java::awt::datatransfer { class FlavorEvent; }
template<> constexpr auto signature<::java::awt::datatransfer::FlavorEvent> = ::java_awt_datatransfer / "FlavorEvent";
namespace java::awt::datatransfer { class FlavorListener; }
template<> constexpr auto signature<::java::awt::datatransfer::FlavorListener> = ::java_awt_datatransfer / "FlavorListener";
namespace java::awt::datatransfer { class FlavorMap; }
template<> constexpr auto signature<::java::awt::datatransfer::FlavorMap> = ::java_awt_datatransfer / "FlavorMap";
namespace java::awt::datatransfer { class FlavorTable; }
template<> constexpr auto signature<::java::awt::datatransfer::FlavorTable> = ::java_awt_datatransfer / "FlavorTable";
namespace java::awt::datatransfer { class MimeType; }
template<> constexpr auto signature<::java::awt::datatransfer::MimeType> = ::java_awt_datatransfer / "MimeType";
namespace java::awt::datatransfer { class MimeTypeParameterList; }
template<> constexpr auto signature<::java::awt::datatransfer::MimeTypeParameterList> = ::java_awt_datatransfer / "MimeTypeParameterList";
namespace java::awt::datatransfer { class MimeTypeParseException; }
template<> constexpr auto signature<::java::awt::datatransfer::MimeTypeParseException> = ::java_awt_datatransfer / "MimeTypeParseException";
namespace java::awt::datatransfer { class StringSelection; }
template<> constexpr auto signature<::java::awt::datatransfer::StringSelection> = ::java_awt_datatransfer / "StringSelection";
namespace java::awt::datatransfer { class SystemFlavorMap; }
template<> constexpr auto signature<::java::awt::datatransfer::SystemFlavorMap> = ::java_awt_datatransfer / "SystemFlavorMap";
namespace java::awt::datatransfer { class SystemFlavorMap$1; }
template<> constexpr auto signature<::java::awt::datatransfer::SystemFlavorMap$1> = ::java_awt_datatransfer / "SystemFlavorMap$1";
namespace java::awt::datatransfer { class SystemFlavorMap$2; }
template<> constexpr auto signature<::java::awt::datatransfer::SystemFlavorMap$2> = ::java_awt_datatransfer / "SystemFlavorMap$2";
namespace java::awt::datatransfer { class SystemFlavorMap$SoftCache; }
template<> constexpr auto signature<::java::awt::datatransfer::SystemFlavorMap$SoftCache> = ::java_awt_datatransfer / "SystemFlavorMap$SoftCache";
namespace java::awt::datatransfer { class Transferable; }
template<> constexpr auto signature<::java::awt::datatransfer::Transferable> = ::java_awt_datatransfer / "Transferable";
namespace java::awt::datatransfer { class UnsupportedFlavorException; }
template<> constexpr auto signature<::java::awt::datatransfer::UnsupportedFlavorException> = ::java_awt_datatransfer / "UnsupportedFlavorException";

#endif
