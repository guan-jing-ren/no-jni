#ifndef java_awt_font_JPP
#define java_awt_font_JPP

namespace java::awt::font { class CharArrayIterator; }
template<> constexpr auto signature<::java::awt::font::CharArrayIterator> = ::java_awt_font / "CharArrayIterator";
namespace java::awt::font { class FontRenderContext; }
template<> constexpr auto signature<::java::awt::font::FontRenderContext> = ::java_awt_font / "FontRenderContext";
namespace java::awt::font { class GlyphJustificationInfo; }
template<> constexpr auto signature<::java::awt::font::GlyphJustificationInfo> = ::java_awt_font / "GlyphJustificationInfo";
namespace java::awt::font { class GlyphMetrics; }
template<> constexpr auto signature<::java::awt::font::GlyphMetrics> = ::java_awt_font / "GlyphMetrics";
namespace java::awt::font { class GlyphVector; }
template<> constexpr auto signature<::java::awt::font::GlyphVector> = ::java_awt_font / "GlyphVector";
namespace java::awt::font { class GraphicAttribute; }
template<> constexpr auto signature<::java::awt::font::GraphicAttribute> = ::java_awt_font / "GraphicAttribute";
namespace java::awt::font { class ImageGraphicAttribute; }
template<> constexpr auto signature<::java::awt::font::ImageGraphicAttribute> = ::java_awt_font / "ImageGraphicAttribute";
namespace java::awt::font { class LayoutPath; }
template<> constexpr auto signature<::java::awt::font::LayoutPath> = ::java_awt_font / "LayoutPath";
namespace java::awt::font { class LineBreakMeasurer; }
template<> constexpr auto signature<::java::awt::font::LineBreakMeasurer> = ::java_awt_font / "LineBreakMeasurer";
namespace java::awt::font { class LineMetrics; }
template<> constexpr auto signature<::java::awt::font::LineMetrics> = ::java_awt_font / "LineMetrics";
namespace java::awt::font { class MultipleMaster; }
template<> constexpr auto signature<::java::awt::font::MultipleMaster> = ::java_awt_font / "MultipleMaster";
namespace java::awt::font { class NumericShaper; }
template<> constexpr auto signature<::java::awt::font::NumericShaper> = ::java_awt_font / "NumericShaper";
namespace java::awt::font { class NumericShaper$1; }
template<> constexpr auto signature<::java::awt::font::NumericShaper$1> = ::java_awt_font / "NumericShaper$1";
namespace java::awt::font { class NumericShaper$Range; }
template<> constexpr auto signature<::java::awt::font::NumericShaper$Range> = ::java_awt_font / "NumericShaper$Range";
namespace java::awt::font { class NumericShaper$Range$1; }
template<> constexpr auto signature<::java::awt::font::NumericShaper$Range$1> = ::java_awt_font / "NumericShaper$Range$1";
namespace java::awt::font { class OpenType; }
template<> constexpr auto signature<::java::awt::font::OpenType> = ::java_awt_font / "OpenType";
namespace java::awt::font { class ShapeGraphicAttribute; }
template<> constexpr auto signature<::java::awt::font::ShapeGraphicAttribute> = ::java_awt_font / "ShapeGraphicAttribute";
namespace java::awt::font { class StyledParagraph; }
template<> constexpr auto signature<::java::awt::font::StyledParagraph> = ::java_awt_font / "StyledParagraph";
namespace java::awt::font { class TextAttribute; }
template<> constexpr auto signature<::java::awt::font::TextAttribute> = ::java_awt_font / "TextAttribute";
namespace java::awt::font { class TextHitInfo; }
template<> constexpr auto signature<::java::awt::font::TextHitInfo> = ::java_awt_font / "TextHitInfo";
namespace java::awt::font { class TextJustifier; }
template<> constexpr auto signature<::java::awt::font::TextJustifier> = ::java_awt_font / "TextJustifier";
namespace java::awt::font { class TextLayout; }
template<> constexpr auto signature<::java::awt::font::TextLayout> = ::java_awt_font / "TextLayout";
namespace java::awt::font { class TextLayout$CaretPolicy; }
template<> constexpr auto signature<::java::awt::font::TextLayout$CaretPolicy> = ::java_awt_font / "TextLayout$CaretPolicy";
namespace java::awt::font { class TextLine; }
template<> constexpr auto signature<::java::awt::font::TextLine> = ::java_awt_font / "TextLine";
namespace java::awt::font { class TextLine$1; }
template<> constexpr auto signature<::java::awt::font::TextLine$1> = ::java_awt_font / "TextLine$1";
namespace java::awt::font { class TextLine$2; }
template<> constexpr auto signature<::java::awt::font::TextLine$2> = ::java_awt_font / "TextLine$2";
namespace java::awt::font { class TextLine$3; }
template<> constexpr auto signature<::java::awt::font::TextLine$3> = ::java_awt_font / "TextLine$3";
namespace java::awt::font { class TextLine$4; }
template<> constexpr auto signature<::java::awt::font::TextLine$4> = ::java_awt_font / "TextLine$4";
namespace java::awt::font { class TextLine$Function; }
template<> constexpr auto signature<::java::awt::font::TextLine$Function> = ::java_awt_font / "TextLine$Function";
namespace java::awt::font { class TextLine$TextLineMetrics; }
template<> constexpr auto signature<::java::awt::font::TextLine$TextLineMetrics> = ::java_awt_font / "TextLine$TextLineMetrics";
namespace java::awt::font { class TextMeasurer; }
template<> constexpr auto signature<::java::awt::font::TextMeasurer> = ::java_awt_font / "TextMeasurer";
namespace java::awt::font { class TransformAttribute; }
template<> constexpr auto signature<::java::awt::font::TransformAttribute> = ::java_awt_font / "TransformAttribute";

#endif
