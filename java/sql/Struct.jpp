#ifndef java_sql_Struct_HPP
#define java_sql_Struct_HPP

#include "../../jfwd_decl.hpp"

class ::java::sql::Struct : public jObject<::java::sql::Struct, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::java_sql / "Struct";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Object *()>("getAttributes"), //
		jMethod<::java::lang::Object *(::java::util::Map)>("getAttributes"), //
		jMethod<::java::lang::String()>("getSQLTypeName"), //
	};

	template<typename R = ::java::lang::Object *, typename... Args>
	auto getAttributes(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getAttributes")] != -1);
		return call<R>("getAttributes", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getSQLTypeName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getSQLTypeName")] != -1);
		return call<R>("getSQLTypeName", std::forward<Args>(args)...);
	}

};

#endif
