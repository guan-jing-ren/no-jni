#ifndef java_time_temporal_JPP
#define java_time_temporal_JPP

namespace java::time::temporal { class ChronoField; }
template<> constexpr auto signature<::java::time::temporal::ChronoField> = ::java_time_temporal / "ChronoField";
namespace java::time::temporal { class ChronoUnit; }
template<> constexpr auto signature<::java::time::temporal::ChronoUnit> = ::java_time_temporal / "ChronoUnit";
namespace java::time::temporal { class IsoFields; }
template<> constexpr auto signature<::java::time::temporal::IsoFields> = ::java_time_temporal / "IsoFields";
namespace java::time::temporal { class IsoFields$1; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$1> = ::java_time_temporal / "IsoFields$1";
namespace java::time::temporal { class IsoFields$Field; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Field> = ::java_time_temporal / "IsoFields$Field";
namespace java::time::temporal { class IsoFields$Field$1; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Field$1> = ::java_time_temporal / "IsoFields$Field$1";
namespace java::time::temporal { class IsoFields$Field$2; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Field$2> = ::java_time_temporal / "IsoFields$Field$2";
namespace java::time::temporal { class IsoFields$Field$3; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Field$3> = ::java_time_temporal / "IsoFields$Field$3";
namespace java::time::temporal { class IsoFields$Field$4; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Field$4> = ::java_time_temporal / "IsoFields$Field$4";
namespace java::time::temporal { class IsoFields$Unit; }
template<> constexpr auto signature<::java::time::temporal::IsoFields$Unit> = ::java_time_temporal / "IsoFields$Unit";
namespace java::time::temporal { class JulianFields; }
template<> constexpr auto signature<::java::time::temporal::JulianFields> = ::java_time_temporal / "JulianFields";
namespace java::time::temporal { class JulianFields$Field; }
template<> constexpr auto signature<::java::time::temporal::JulianFields$Field> = ::java_time_temporal / "JulianFields$Field";
namespace java::time::temporal { class Temporal; }
template<> constexpr auto signature<::java::time::temporal::Temporal> = ::java_time_temporal / "Temporal";
namespace java::time::temporal { class TemporalAccessor; }
template<> constexpr auto signature<::java::time::temporal::TemporalAccessor> = ::java_time_temporal / "TemporalAccessor";
namespace java::time::temporal { class TemporalAdjuster; }
template<> constexpr auto signature<::java::time::temporal::TemporalAdjuster> = ::java_time_temporal / "TemporalAdjuster";
namespace java::time::temporal { class TemporalAdjusters; }
template<> constexpr auto signature<::java::time::temporal::TemporalAdjusters> = ::java_time_temporal / "TemporalAdjusters";
namespace java::time::temporal { class TemporalAmount; }
template<> constexpr auto signature<::java::time::temporal::TemporalAmount> = ::java_time_temporal / "TemporalAmount";
namespace java::time::temporal { class TemporalField; }
template<> constexpr auto signature<::java::time::temporal::TemporalField> = ::java_time_temporal / "TemporalField";
namespace java::time::temporal { class TemporalQueries; }
template<> constexpr auto signature<::java::time::temporal::TemporalQueries> = ::java_time_temporal / "TemporalQueries";
namespace java::time::temporal { class TemporalQuery; }
template<> constexpr auto signature<::java::time::temporal::TemporalQuery> = ::java_time_temporal / "TemporalQuery";
namespace java::time::temporal { class TemporalUnit; }
template<> constexpr auto signature<::java::time::temporal::TemporalUnit> = ::java_time_temporal / "TemporalUnit";
namespace java::time::temporal { class UnsupportedTemporalTypeException; }
template<> constexpr auto signature<::java::time::temporal::UnsupportedTemporalTypeException> = ::java_time_temporal / "UnsupportedTemporalTypeException";
namespace java::time::temporal { class ValueRange; }
template<> constexpr auto signature<::java::time::temporal::ValueRange> = ::java_time_temporal / "ValueRange";
namespace java::time::temporal { class WeekFields; }
template<> constexpr auto signature<::java::time::temporal::WeekFields> = ::java_time_temporal / "WeekFields";
namespace java::time::temporal { class WeekFields$ComputedDayOfField; }
template<> constexpr auto signature<::java::time::temporal::WeekFields$ComputedDayOfField> = ::java_time_temporal / "WeekFields$ComputedDayOfField";

#endif
