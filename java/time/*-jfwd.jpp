#ifndef java_time_JPP
#define java_time_JPP

namespace java::time { class Clock; }
template<> constexpr auto signature<::java::time::Clock> = ::java_time / "Clock";
namespace java::time { class Clock$FixedClock; }
template<> constexpr auto signature<::java::time::Clock$FixedClock> = ::java_time / "Clock$FixedClock";
namespace java::time { class Clock$OffsetClock; }
template<> constexpr auto signature<::java::time::Clock$OffsetClock> = ::java_time / "Clock$OffsetClock";
namespace java::time { class Clock$SystemClock; }
template<> constexpr auto signature<::java::time::Clock$SystemClock> = ::java_time / "Clock$SystemClock";
namespace java::time { class Clock$TickClock; }
template<> constexpr auto signature<::java::time::Clock$TickClock> = ::java_time / "Clock$TickClock";
namespace java::time { class DateTimeException; }
template<> constexpr auto signature<::java::time::DateTimeException> = ::java_time / "DateTimeException";
namespace java::time { class DayOfWeek; }
template<> constexpr auto signature<::java::time::DayOfWeek> = ::java_time / "DayOfWeek";
namespace java::time { class Duration; }
template<> constexpr auto signature<::java::time::Duration> = ::java_time / "Duration";
namespace java::time { class Duration$1; }
template<> constexpr auto signature<::java::time::Duration$1> = ::java_time / "Duration$1";
namespace java::time { class Duration$DurationUnits; }
template<> constexpr auto signature<::java::time::Duration$DurationUnits> = ::java_time / "Duration$DurationUnits";
namespace java::time { class Instant; }
template<> constexpr auto signature<::java::time::Instant> = ::java_time / "Instant";
namespace java::time { class Instant$1; }
template<> constexpr auto signature<::java::time::Instant$1> = ::java_time / "Instant$1";
namespace java::time { class LocalDate; }
template<> constexpr auto signature<::java::time::LocalDate> = ::java_time / "LocalDate";
namespace java::time { class LocalDate$1; }
template<> constexpr auto signature<::java::time::LocalDate$1> = ::java_time / "LocalDate$1";
namespace java::time { class LocalDateTime; }
template<> constexpr auto signature<::java::time::LocalDateTime> = ::java_time / "LocalDateTime";
namespace java::time { class LocalDateTime$1; }
template<> constexpr auto signature<::java::time::LocalDateTime$1> = ::java_time / "LocalDateTime$1";
namespace java::time { class LocalTime; }
template<> constexpr auto signature<::java::time::LocalTime> = ::java_time / "LocalTime";
namespace java::time { class LocalTime$1; }
template<> constexpr auto signature<::java::time::LocalTime$1> = ::java_time / "LocalTime$1";
namespace java::time { class Month; }
template<> constexpr auto signature<::java::time::Month> = ::java_time / "Month";
namespace java::time { class Month$1; }
template<> constexpr auto signature<::java::time::Month$1> = ::java_time / "Month$1";
namespace java::time { class MonthDay; }
template<> constexpr auto signature<::java::time::MonthDay> = ::java_time / "MonthDay";
namespace java::time { class MonthDay$1; }
template<> constexpr auto signature<::java::time::MonthDay$1> = ::java_time / "MonthDay$1";
namespace java::time { class OffsetDateTime; }
template<> constexpr auto signature<::java::time::OffsetDateTime> = ::java_time / "OffsetDateTime";
namespace java::time { class OffsetDateTime$1; }
template<> constexpr auto signature<::java::time::OffsetDateTime$1> = ::java_time / "OffsetDateTime$1";
namespace java::time { class OffsetTime; }
template<> constexpr auto signature<::java::time::OffsetTime> = ::java_time / "OffsetTime";
namespace java::time { class OffsetTime$1; }
template<> constexpr auto signature<::java::time::OffsetTime$1> = ::java_time / "OffsetTime$1";
namespace java::time { class Period; }
template<> constexpr auto signature<::java::time::Period> = ::java_time / "Period";
namespace java::time { class Ser; }
template<> constexpr auto signature<::java::time::Ser> = ::java_time / "Ser";
namespace java::time { class Year; }
template<> constexpr auto signature<::java::time::Year> = ::java_time / "Year";
namespace java::time { class Year$1; }
template<> constexpr auto signature<::java::time::Year$1> = ::java_time / "Year$1";
namespace java::time { class YearMonth; }
template<> constexpr auto signature<::java::time::YearMonth> = ::java_time / "YearMonth";
namespace java::time { class YearMonth$1; }
template<> constexpr auto signature<::java::time::YearMonth$1> = ::java_time / "YearMonth$1";
namespace java::time { class ZoneId; }
template<> constexpr auto signature<::java::time::ZoneId> = ::java_time / "ZoneId";
namespace java::time { class ZoneId$1; }
template<> constexpr auto signature<::java::time::ZoneId$1> = ::java_time / "ZoneId$1";
namespace java::time { class ZoneOffset; }
template<> constexpr auto signature<::java::time::ZoneOffset> = ::java_time / "ZoneOffset";
namespace java::time { class ZoneRegion; }
template<> constexpr auto signature<::java::time::ZoneRegion> = ::java_time / "ZoneRegion";
namespace java::time { class ZonedDateTime; }
template<> constexpr auto signature<::java::time::ZonedDateTime> = ::java_time / "ZonedDateTime";
namespace java::time { class ZonedDateTime$1; }
template<> constexpr auto signature<::java::time::ZonedDateTime$1> = ::java_time / "ZonedDateTime$1";

#endif
