#ifndef sun_util_locale_provider_HostLocaleProviderAdapter_HPP
#define sun_util_locale_provider_HostLocaleProviderAdapter_HPP

#include "../../../../jfwd_decl.hpp"

class ::sun::util::locale::provider::HostLocaleProviderAdapter : public jObject<::sun::util::locale::provider::HostLocaleProviderAdapter, ::sun::util::locale::provider::AuxLocaleProviderAdapter> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_util_locale_provider / "HostLocaleProviderAdapter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::sun::util::locale::provider::LocaleProviderAdapter$Type()>("getAdapterType"), //
	};

	template<typename R = ::sun::util::locale::provider::LocaleProviderAdapter$Type, typename... Args>
	auto getAdapterType(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getAdapterType")] != -1);
		return call<R>("getAdapterType", std::forward<Args>(args)...);
	}

};

#endif
