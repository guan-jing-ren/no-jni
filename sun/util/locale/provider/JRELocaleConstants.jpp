#ifndef sun_util_locale_provider_JRELocaleConstants_HPP
#define sun_util_locale_provider_JRELocaleConstants_HPP

#include "../../../../jfwd_decl.hpp"

class ::sun::util::locale::provider::JRELocaleConstants : public jObject<::sun::util::locale::provider::JRELocaleConstants, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_util_locale_provider / "JRELocaleConstants";

	constexpr static Enume field_signatures{
		jField<::java::util::Locale>("JA_JP_JP"), //
		jField<::java::util::Locale>("NO_NO_NY"), //
		jField<::java::util::Locale>("TH_TH"), //
		jField<::java::util::Locale>("TH_TH_TH"), //
	};

	template<typename F = ::java::util::Locale>
	static auto JA_JP_JP() {
		static_assert(field_signatures[jField<F>("JA_JP_JP")] != -1);
		return sat<F>("JA_JP_JP");
	}

	template<typename F = ::java::util::Locale>
	static auto NO_NO_NY() {
		static_assert(field_signatures[jField<F>("NO_NO_NY")] != -1);
		return sat<F>("NO_NO_NY");
	}

	template<typename F = ::java::util::Locale>
	static auto TH_TH() {
		static_assert(field_signatures[jField<F>("TH_TH")] != -1);
		return sat<F>("TH_TH");
	}

	template<typename F = ::java::util::Locale>
	static auto TH_TH_TH() {
		static_assert(field_signatures[jField<F>("TH_TH_TH")] != -1);
		return sat<F>("TH_TH_TH");
	}

	constexpr static Enume method_signatures{
		cexprstr{"\0"}, //
	};

};

#endif
