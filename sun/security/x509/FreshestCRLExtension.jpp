#ifndef sun_security_x509_FreshestCRLExtension_HPP
#define sun_security_x509_FreshestCRLExtension_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::x509::FreshestCRLExtension : public jObject<::sun::security::x509::FreshestCRLExtension, ::sun::security::x509::CRLDistributionPointsExtension> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_x509 / "FreshestCRLExtension";

	constexpr static Enume field_signatures{
		jField<::java::lang::String>("NAME"), //
	};

	template<typename F = ::java::lang::String>
	static auto NAME() {
		static_assert(field_signatures[jField<F>("NAME")] != -1);
		return sat<F>("NAME");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::Boolean, ::java::lang::Object)>(), //
		jConstructor<::jvoid(::java::util::List)>(), //
		jMethod<::jvoid(::java::io::OutputStream)>("encode"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto encode(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("encode")] != -1);
		return call<R>("encode", std::forward<Args>(args)...);
	}

};

#endif
