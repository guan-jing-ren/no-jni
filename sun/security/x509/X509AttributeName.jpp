#ifndef sun_security_x509_X509AttributeName_HPP
#define sun_security_x509_X509AttributeName_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::x509::X509AttributeName : public jObject<::sun::security::x509::X509AttributeName, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_x509 / "X509AttributeName";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String)>(), //
		jMethod<::java::lang::String()>("getPrefix"), //
		jMethod<::java::lang::String()>("getSuffix"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getPrefix(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPrefix")] != -1);
		return call<R>("getPrefix", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getSuffix(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getSuffix")] != -1);
		return call<R>("getSuffix", std::forward<Args>(args)...);
	}

};

#endif
