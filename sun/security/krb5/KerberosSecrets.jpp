#ifndef sun_security_krb5_KerberosSecrets_HPP
#define sun_security_krb5_KerberosSecrets_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::krb5::KerberosSecrets : public jObject<::sun::security::krb5::KerberosSecrets, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_krb5 / "KerberosSecrets";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::sun::security::krb5::JavaxSecurityAuthKerberosAccess()>("getJavaxSecurityAuthKerberosAccess"), //
		jMethod<::jvoid(::sun::security::krb5::JavaxSecurityAuthKerberosAccess)>("setJavaxSecurityAuthKerberosAccess"), //
	};

	template<typename R = ::sun::security::krb5::JavaxSecurityAuthKerberosAccess, typename... Args>
	static auto getJavaxSecurityAuthKerberosAccess(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getJavaxSecurityAuthKerberosAccess")] != -1);
		return scall<R>("getJavaxSecurityAuthKerberosAccess", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto setJavaxSecurityAuthKerberosAccess(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setJavaxSecurityAuthKerberosAccess")] != -1);
		return scall<R>("setJavaxSecurityAuthKerberosAccess", std::forward<Args>(args)...);
	}

};

#endif
