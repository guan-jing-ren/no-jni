#ifndef sun_security_jgss_GSSManagerImpl_HPP
#define sun_security_jgss_GSSManagerImpl_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::jgss::GSSManagerImpl : public jObject<::sun::security::jgss::GSSManagerImpl, ::org::ietf::jgss::GSSManager> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_jgss / "GSSManagerImpl";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jConstructor<::jvoid(::sun::security::jgss::GSSCaller)>(), //
		jConstructor<::jvoid(::sun::security::jgss::GSSCaller, ::jboolean)>(), //
		jMethod<::jvoid(::java::security::Provider, ::org::ietf::jgss::Oid)>("addProviderAtEnd"), //
		jMethod<::jvoid(::java::security::Provider, ::org::ietf::jgss::Oid)>("addProviderAtFront"), //
		jMethod<::org::ietf::jgss::GSSContext(::org::ietf::jgss::GSSCredential)>("createContext"), //
		jMethod<::org::ietf::jgss::GSSContext(::org::ietf::jgss::GSSName, ::org::ietf::jgss::Oid, ::org::ietf::jgss::GSSCredential, ::jint)>("createContext"), //
		jMethod<::org::ietf::jgss::GSSContext(::jbyte *)>("createContext"), //
		jMethod<::org::ietf::jgss::GSSCredential(::jint)>("createCredential"), //
		jMethod<::org::ietf::jgss::GSSCredential(::org::ietf::jgss::GSSName, ::jint, ::org::ietf::jgss::Oid, ::jint)>("createCredential"), //
		jMethod<::org::ietf::jgss::GSSCredential(::org::ietf::jgss::GSSName, ::jint, ::org::ietf::jgss::Oid *, ::jint)>("createCredential"), //
		jMethod<::org::ietf::jgss::GSSName(::java::lang::String, ::org::ietf::jgss::Oid)>("createName"), //
		jMethod<::org::ietf::jgss::GSSName(::java::lang::String, ::org::ietf::jgss::Oid, ::org::ietf::jgss::Oid)>("createName"), //
		jMethod<::org::ietf::jgss::GSSName(::jbyte *, ::org::ietf::jgss::Oid)>("createName"), //
		jMethod<::org::ietf::jgss::GSSName(::jbyte *, ::org::ietf::jgss::Oid, ::org::ietf::jgss::Oid)>("createName"), //
		jMethod<::sun::security::jgss::spi::GSSCredentialSpi(::sun::security::jgss::spi::GSSNameSpi, ::jint, ::jint, ::org::ietf::jgss::Oid, ::jint)>("getCredentialElement"), //
		jMethod<::org::ietf::jgss::Oid *()>("getMechs"), //
		jMethod<::org::ietf::jgss::Oid *(::org::ietf::jgss::Oid)>("getMechsForName"), //
		jMethod<::sun::security::jgss::spi::GSSNameSpi(::java::lang::String, ::org::ietf::jgss::Oid, ::org::ietf::jgss::Oid)>("getNameElement"), //
		jMethod<::sun::security::jgss::spi::GSSNameSpi(::jbyte *, ::org::ietf::jgss::Oid, ::org::ietf::jgss::Oid)>("getNameElement"), //
		jMethod<::org::ietf::jgss::Oid *(::org::ietf::jgss::Oid)>("getNamesForMech"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto addProviderAtEnd(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("addProviderAtEnd")] != -1);
		return call<R>("addProviderAtEnd", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto addProviderAtFront(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("addProviderAtFront")] != -1);
		return call<R>("addProviderAtFront", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::GSSContext, typename... Args>
	auto createContext(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createContext")] != -1);
		return call<R>("createContext", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::GSSCredential, typename... Args>
	auto createCredential(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createCredential")] != -1);
		return call<R>("createCredential", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::GSSName, typename... Args>
	auto createName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createName")] != -1);
		return call<R>("createName", std::forward<Args>(args)...);
	}

	template<typename R = ::sun::security::jgss::spi::GSSCredentialSpi, typename... Args>
	auto getCredentialElement(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCredentialElement")] != -1);
		return call<R>("getCredentialElement", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::Oid *, typename... Args>
	auto getMechs(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMechs")] != -1);
		return call<R>("getMechs", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::Oid *, typename... Args>
	auto getMechsForName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getMechsForName")] != -1);
		return call<R>("getMechsForName", std::forward<Args>(args)...);
	}

	template<typename R = ::sun::security::jgss::spi::GSSNameSpi, typename... Args>
	auto getNameElement(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getNameElement")] != -1);
		return call<R>("getNameElement", std::forward<Args>(args)...);
	}

	template<typename R = ::org::ietf::jgss::Oid *, typename... Args>
	auto getNamesForMech(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getNamesForMech")] != -1);
		return call<R>("getNamesForMech", std::forward<Args>(args)...);
	}

};

#endif
