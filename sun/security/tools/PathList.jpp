#ifndef sun_security_tools_PathList_HPP
#define sun_security_tools_PathList_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::tools::PathList : public jObject<::sun::security::tools::PathList, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_tools / "PathList";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::lang::String(::java::lang::String, ::java::lang::String)>("appendPath"), //
		jMethod<::java::net::URL *(::java::lang::String)>("pathToURLs"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	static auto appendPath(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("appendPath")] != -1);
		return scall<R>("appendPath", std::forward<Args>(args)...);
	}

	template<typename R = ::java::net::URL *, typename... Args>
	static auto pathToURLs(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("pathToURLs")] != -1);
		return scall<R>("pathToURLs", std::forward<Args>(args)...);
	}

};

#endif
