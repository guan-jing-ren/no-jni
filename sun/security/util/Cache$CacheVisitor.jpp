#ifndef sun_security_util_Cache$CacheVisitor_HPP
#define sun_security_util_Cache$CacheVisitor_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::util::Cache$CacheVisitor : public jObject<::sun::security::util::Cache$CacheVisitor, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_util / "Cache$CacheVisitor";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::util::Map)>("visit"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto visit(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("visit")] != -1);
		return call<R>("visit", std::forward<Args>(args)...);
	}

};

#endif
