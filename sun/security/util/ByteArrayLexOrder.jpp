#ifndef sun_security_util_ByteArrayLexOrder_HPP
#define sun_security_util_ByteArrayLexOrder_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::security::util::ByteArrayLexOrder : public jObject<::sun::security::util::ByteArrayLexOrder, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_security_util / "ByteArrayLexOrder";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jint(::java::lang::Object, ::java::lang::Object)>("compare"), //
		jMethod<::jint(::jbyte *, ::jbyte *)>("compare"), //
	};

	template<typename R = ::jint, typename... Args>
	auto compare(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("compare")] != -1);
		return call<R>("compare", std::forward<Args>(args)...);
	}

};

#endif
