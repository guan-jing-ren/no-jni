#ifndef sun_misc_LRUCache_HPP
#define sun_misc_LRUCache_HPP

#include "../../jfwd_decl.hpp"

class ::sun::misc::LRUCache : public jObject<::sun::misc::LRUCache, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_misc / "LRUCache";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint)>(), //
		jMethod<::java::lang::Object(::java::lang::Object)>("forName"), //
		jMethod<::jvoid(::java::lang::Object *, ::jint)>("moveToFront"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto forName(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("forName")] != -1);
		return call<R>("forName", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto moveToFront(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("moveToFront")] != -1);
		return scall<R>("moveToFront", std::forward<Args>(args)...);
	}

};

#endif
