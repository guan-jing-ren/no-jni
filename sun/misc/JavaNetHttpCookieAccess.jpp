#ifndef sun_misc_JavaNetHttpCookieAccess_HPP
#define sun_misc_JavaNetHttpCookieAccess_HPP

#include "../../jfwd_decl.hpp"

class ::sun::misc::JavaNetHttpCookieAccess : public jObject<::sun::misc::JavaNetHttpCookieAccess, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_misc / "JavaNetHttpCookieAccess";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::String(::java::net::HttpCookie)>("header"), //
		jMethod<::java::util::List(::java::lang::String)>("parse"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto header(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("header")] != -1);
		return call<R>("header", std::forward<Args>(args)...);
	}

	template<typename R = ::java::util::List, typename... Args>
	auto parse(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("parse")] != -1);
		return call<R>("parse", std::forward<Args>(args)...);
	}

};

#endif
