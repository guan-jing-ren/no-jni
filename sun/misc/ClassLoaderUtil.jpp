#ifndef sun_misc_ClassLoaderUtil_HPP
#define sun_misc_ClassLoaderUtil_HPP

#include "../../jfwd_decl.hpp"

class ::sun::misc::ClassLoaderUtil : public jObject<::sun::misc::ClassLoaderUtil, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_misc / "ClassLoaderUtil";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid(::java::net::URLClassLoader)>("releaseLoader"), //
		jMethod<::java::util::List(::java::net::URLClassLoader, ::java::util::List)>("releaseLoader"), //
	};

	template<typename R = ::jvoid, typename... Args>
	static auto releaseLoader(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("releaseLoader")] != -1);
		return scall<R>("releaseLoader", std::forward<Args>(args)...);
	}

};

#endif
