#ifndef sun_misc_JavaSecurityProtectionDomainAccess$ProtectionDomainCache_HPP
#define sun_misc_JavaSecurityProtectionDomainAccess$ProtectionDomainCache_HPP

#include "../../jfwd_decl.hpp"

class ::sun::misc::JavaSecurityProtectionDomainAccess$ProtectionDomainCache : public jObject<::sun::misc::JavaSecurityProtectionDomainAccess$ProtectionDomainCache, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_misc / "JavaSecurityProtectionDomainAccess$ProtectionDomainCache";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::security::PermissionCollection(::java::security::ProtectionDomain)>("get"), //
		jMethod<::jvoid(::java::security::ProtectionDomain, ::java::security::PermissionCollection)>("put"), //
	};

	template<typename R = ::java::security::PermissionCollection, typename... Args>
	auto get(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("get")] != -1);
		return call<R>("get", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto put(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("put")] != -1);
		return call<R>("put", std::forward<Args>(args)...);
	}

};

#endif
