#ifndef sun_nio_ch_PollArrayWrapper_HPP
#define sun_nio_ch_PollArrayWrapper_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::nio::ch::PollArrayWrapper : public jObject<::sun::nio::ch::PollArrayWrapper, ::sun::nio::ch::AbstractPollArrayWrapper> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_nio_ch / "PollArrayWrapper";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid()>("interrupt"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto interrupt(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("interrupt")] != -1);
		return call<R>("interrupt", std::forward<Args>(args)...);
	}

};

#endif
