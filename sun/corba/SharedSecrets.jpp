#ifndef sun_corba_SharedSecrets_HPP
#define sun_corba_SharedSecrets_HPP

#include "../../jfwd_decl.hpp"

class ::sun::corba::SharedSecrets : public jObject<::sun::corba::SharedSecrets, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_corba / "SharedSecrets";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::sun::corba::JavaCorbaAccess()>("getJavaCorbaAccess"), //
		jMethod<::jvoid(::sun::corba::JavaCorbaAccess)>("setJavaCorbaAccess"), //
	};

	template<typename R = ::sun::corba::JavaCorbaAccess, typename... Args>
	static auto getJavaCorbaAccess(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getJavaCorbaAccess")] != -1);
		return scall<R>("getJavaCorbaAccess", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto setJavaCorbaAccess(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setJavaCorbaAccess")] != -1);
		return scall<R>("setJavaCorbaAccess", std::forward<Args>(args)...);
	}

};

#endif
