#ifndef sun_text_SupplementaryCharacterData_HPP
#define sun_text_SupplementaryCharacterData_HPP

#include "../../jfwd_decl.hpp"

class ::sun::text::SupplementaryCharacterData : public jObject<::sun::text::SupplementaryCharacterData, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_text / "SupplementaryCharacterData";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint *)>(), //
		jMethod<::jint *()>("getArray"), //
		jMethod<::jint(::jint)>("getValue"), //
	};

	template<typename R = ::jint *, typename... Args>
	auto getArray(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getArray")] != -1);
		return call<R>("getArray", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getValue")] != -1);
		return call<R>("getValue", std::forward<Args>(args)...);
	}

};

#endif
