#ifndef sun_text_normalizer_ICUBinary$Authenticate_HPP
#define sun_text_normalizer_ICUBinary$Authenticate_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::text::normalizer::ICUBinary$Authenticate : public jObject<::sun::text::normalizer::ICUBinary$Authenticate, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_text_normalizer / "ICUBinary$Authenticate";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jboolean(::jbyte *)>("isDataVersionAcceptable"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto isDataVersionAcceptable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isDataVersionAcceptable")] != -1);
		return call<R>("isDataVersionAcceptable", std::forward<Args>(args)...);
	}

};

#endif
