#ifndef sun_text_normalizer_ICUData_HPP
#define sun_text_normalizer_ICUData_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::text::normalizer::ICUData : public jObject<::sun::text::normalizer::ICUData, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_text_normalizer / "ICUData";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::io::InputStream(::java::lang::String)>("getRequiredStream"), //
		jMethod<::java::io::InputStream(::java::lang::String)>("getStream"), //
	};

	template<typename R = ::java::io::InputStream, typename... Args>
	static auto getRequiredStream(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getRequiredStream")] != -1);
		return scall<R>("getRequiredStream", std::forward<Args>(args)...);
	}

	template<typename R = ::java::io::InputStream, typename... Args>
	static auto getStream(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getStream")] != -1);
		return scall<R>("getStream", std::forward<Args>(args)...);
	}

};

#endif
