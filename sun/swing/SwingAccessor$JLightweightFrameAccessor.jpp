#ifndef sun_swing_SwingAccessor$JLightweightFrameAccessor_HPP
#define sun_swing_SwingAccessor$JLightweightFrameAccessor_HPP

#include "../../jfwd_decl.hpp"

class ::sun::swing::SwingAccessor$JLightweightFrameAccessor : public jObject<::sun::swing::SwingAccessor$JLightweightFrameAccessor, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_swing / "SwingAccessor$JLightweightFrameAccessor";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::sun::swing::JLightweightFrame)>("updateCursor"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto updateCursor(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("updateCursor")] != -1);
		return call<R>("updateCursor", std::forward<Args>(args)...);
	}

};

#endif
