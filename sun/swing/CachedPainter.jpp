#ifndef sun_swing_CachedPainter_HPP
#define sun_swing_CachedPainter_HPP

#include "../../jfwd_decl.hpp"

class ::sun::swing::CachedPainter : public jObject<::sun::swing::CachedPainter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_swing / "CachedPainter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint)>(), //
		jMethod<::jvoid(::java::awt::Component, ::java::awt::Graphics, ::jint, ::jint, ::jint, ::jint, ::java::lang::Object *)>("paint"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto paint(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("paint")] != -1);
		return call<R>("paint", std::forward<Args>(args)...);
	}

};

#endif
