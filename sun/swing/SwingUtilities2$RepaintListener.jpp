#ifndef sun_swing_SwingUtilities2$RepaintListener_HPP
#define sun_swing_SwingUtilities2$RepaintListener_HPP

#include "../../jfwd_decl.hpp"

class ::sun::swing::SwingUtilities2$RepaintListener : public jObject<::sun::swing::SwingUtilities2$RepaintListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_swing / "SwingUtilities2$RepaintListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::javax::swing::JComponent, ::jint, ::jint, ::jint, ::jint)>("repaintPerformed"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto repaintPerformed(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("repaintPerformed")] != -1);
		return call<R>("repaintPerformed", std::forward<Args>(args)...);
	}

};

#endif
