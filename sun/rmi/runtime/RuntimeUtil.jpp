#ifndef sun_rmi_runtime_RuntimeUtil_HPP
#define sun_rmi_runtime_RuntimeUtil_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::rmi::runtime::RuntimeUtil : public jObject<::sun::rmi::runtime::RuntimeUtil, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_rmi_runtime / "RuntimeUtil";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::util::concurrent::ScheduledThreadPoolExecutor()>("getScheduler"), //
	};

	template<typename R = ::java::util::concurrent::ScheduledThreadPoolExecutor, typename... Args>
	auto getScheduler(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getScheduler")] != -1);
		return call<R>("getScheduler", std::forward<Args>(args)...);
	}

};

#endif
