#ifndef sun_rmi_server_Dispatcher_HPP
#define sun_rmi_server_Dispatcher_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::rmi::server::Dispatcher : public jObject<::sun::rmi::server::Dispatcher, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_rmi_server / "Dispatcher";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::rmi::Remote, ::java::rmi::server::RemoteCall)>("dispatch"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto dispatch(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("dispatch")] != -1);
		return call<R>("dispatch", std::forward<Args>(args)...);
	}

};

#endif
