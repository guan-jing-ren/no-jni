#ifndef sun_java2d_pipe_hw_AccelTypedVolatileImage_HPP
#define sun_java2d_pipe_hw_AccelTypedVolatileImage_HPP

#include "../../../../jfwd_decl.hpp"

class ::sun::java2d::pipe::hw::AccelTypedVolatileImage : public jObject<::sun::java2d::pipe::hw::AccelTypedVolatileImage, ::sun::awt::image::SunVolatileImage> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_java2d_pipe_hw / "AccelTypedVolatileImage";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::awt::GraphicsConfiguration, ::jint, ::jint, ::jint, ::jint)>(), //
		jMethod<::java::awt::Graphics2D()>("createGraphics"), //
	};

	template<typename R = ::java::awt::Graphics2D, typename... Args>
	auto createGraphics(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createGraphics")] != -1);
		return call<R>("createGraphics", std::forward<Args>(args)...);
	}

};

#endif
