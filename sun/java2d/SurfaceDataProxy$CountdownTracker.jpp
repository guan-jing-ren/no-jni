#ifndef sun_java2d_SurfaceDataProxy$CountdownTracker_HPP
#define sun_java2d_SurfaceDataProxy$CountdownTracker_HPP

#include "../../jfwd_decl.hpp"

class ::sun::java2d::SurfaceDataProxy$CountdownTracker : public jObject<::sun::java2d::SurfaceDataProxy$CountdownTracker, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_java2d / "SurfaceDataProxy$CountdownTracker";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint)>(), //
		jMethod<::jboolean()>("isCurrent"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto isCurrent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isCurrent")] != -1);
		return call<R>("isCurrent", std::forward<Args>(args)...);
	}

};

#endif
