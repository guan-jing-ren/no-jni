#ifndef sun_java2d_loops_GraphicsPrimitive$TraceReporter_HPP
#define sun_java2d_loops_GraphicsPrimitive$TraceReporter_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::java2d::loops::GraphicsPrimitive$TraceReporter : public jObject<::sun::java2d::loops::GraphicsPrimitive$TraceReporter, ::java::lang::Thread> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_java2d_loops / "GraphicsPrimitive$TraceReporter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid()>("run"), //
		jMethod<::jvoid()>("setShutdownHook"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto run(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("run")] != -1);
		return call<R>("run", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto setShutdownHook(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setShutdownHook")] != -1);
		return scall<R>("setShutdownHook", std::forward<Args>(args)...);
	}

};

#endif
