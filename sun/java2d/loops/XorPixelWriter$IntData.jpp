#ifndef sun_java2d_loops_XorPixelWriter$IntData_HPP
#define sun_java2d_loops_XorPixelWriter$IntData_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::java2d::loops::XorPixelWriter$IntData : public jObject<::sun::java2d::loops::XorPixelWriter$IntData, ::sun::java2d::loops::XorPixelWriter> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_java2d_loops / "XorPixelWriter$IntData";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::image::WritableRaster)>("setRaster"), //
		jMethod<::jvoid(::jint, ::jint)>("writePixel"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto setRaster(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setRaster")] != -1);
		return call<R>("setRaster", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto writePixel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("writePixel")] != -1);
		return call<R>("writePixel", std::forward<Args>(args)...);
	}

};

#endif
