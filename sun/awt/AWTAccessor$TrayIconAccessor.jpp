#ifndef sun_awt_AWTAccessor$TrayIconAccessor_HPP
#define sun_awt_AWTAccessor$TrayIconAccessor_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::AWTAccessor$TrayIconAccessor : public jObject<::sun::awt::AWTAccessor$TrayIconAccessor, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "AWTAccessor$TrayIconAccessor";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::TrayIcon)>("addNotify"), //
		jMethod<::jvoid(::java::awt::TrayIcon)>("removeNotify"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto addNotify(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("addNotify")] != -1);
		return call<R>("addNotify", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto removeNotify(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("removeNotify")] != -1);
		return call<R>("removeNotify", std::forward<Args>(args)...);
	}

};

#endif
