#ifndef sun_awt_image_WritableRasterNative_HPP
#define sun_awt_image_WritableRasterNative_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::image::WritableRasterNative : public jObject<::sun::awt::image::WritableRasterNative, ::java::awt::image::WritableRaster> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_image / "WritableRasterNative";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::sun::awt::image::WritableRasterNative(::java::awt::image::ColorModel, ::sun::java2d::SurfaceData, ::jint, ::jint)>("createNativeRaster"), //
		jMethod<::sun::awt::image::WritableRasterNative(::java::awt::image::SampleModel, ::java::awt::image::DataBuffer)>("createNativeRaster"), //
	};

	template<typename R = ::sun::awt::image::WritableRasterNative, typename... Args>
	static auto createNativeRaster(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createNativeRaster")] != -1);
		return scall<R>("createNativeRaster", std::forward<Args>(args)...);
	}

};

#endif
