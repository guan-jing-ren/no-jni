#ifndef sun_awt_image_ImageCache$PixelsKey_HPP
#define sun_awt_image_ImageCache$PixelsKey_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::image::ImageCache$PixelsKey : public jObject<::sun::awt::image::ImageCache$PixelsKey, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_image / "ImageCache$PixelsKey";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jint()>("getPixelCount"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getPixelCount(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPixelCount")] != -1);
		return call<R>("getPixelCount", std::forward<Args>(args)...);
	}

};

#endif
