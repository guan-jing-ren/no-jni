#ifndef sun_awt_TimedWindowEvent_HPP
#define sun_awt_TimedWindowEvent_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::TimedWindowEvent : public jObject<::sun::awt::TimedWindowEvent, ::java::awt::event::WindowEvent> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "TimedWindowEvent";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::awt::Window, ::jint, ::java::awt::Window, ::jint, ::jint, ::jlong)>(), //
		jConstructor<::jvoid(::java::awt::Window, ::jint, ::java::awt::Window, ::jlong)>(), //
		jMethod<::jlong()>("getWhen"), //
	};

	template<typename R = ::jlong, typename... Args>
	auto getWhen(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getWhen")] != -1);
		return call<R>("getWhen", std::forward<Args>(args)...);
	}

};

#endif
