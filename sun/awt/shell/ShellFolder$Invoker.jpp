#ifndef sun_awt_shell_ShellFolder$Invoker_HPP
#define sun_awt_shell_ShellFolder$Invoker_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::shell::ShellFolder$Invoker : public jObject<::sun::awt::shell::ShellFolder$Invoker, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_shell / "ShellFolder$Invoker";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Object(::java::util::concurrent::Callable)>("invoke"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto invoke(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("invoke")] != -1);
		return call<R>("invoke", std::forward<Args>(args)...);
	}

};

#endif
