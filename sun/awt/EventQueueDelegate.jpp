#ifndef sun_awt_EventQueueDelegate_HPP
#define sun_awt_EventQueueDelegate_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::EventQueueDelegate : public jObject<::sun::awt::EventQueueDelegate, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "EventQueueDelegate";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::sun::awt::EventQueueDelegate$Delegate()>("getDelegate"), //
		jMethod<::jvoid(::sun::awt::EventQueueDelegate$Delegate)>("setDelegate"), //
	};

	template<typename R = ::sun::awt::EventQueueDelegate$Delegate, typename... Args>
	static auto getDelegate(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDelegate")] != -1);
		return scall<R>("getDelegate", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto setDelegate(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setDelegate")] != -1);
		return scall<R>("setDelegate", std::forward<Args>(args)...);
	}

};

#endif
