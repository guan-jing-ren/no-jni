#ifndef sun_awt_X11_InfoWindow_HPP
#define sun_awt_X11_InfoWindow_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::X11::InfoWindow : public jObject<::sun::awt::X11::InfoWindow, ::java::awt::Window> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_X11 / "InfoWindow";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::awt::Component(::java::awt::Component)>("add"), //
		jMethod<::jvoid()>("hide"), //
	};

	template<typename R = ::java::awt::Component, typename... Args>
	auto add(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("add")] != -1);
		return call<R>("add", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto hide(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("hide")] != -1);
		return call<R>("hide", std::forward<Args>(args)...);
	}

};

#endif
