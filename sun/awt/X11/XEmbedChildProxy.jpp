#ifndef sun_awt_X11_XEmbedChildProxy_HPP
#define sun_awt_X11_XEmbedChildProxy_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::X11::XEmbedChildProxy : public jObject<::sun::awt::X11::XEmbedChildProxy, ::java::awt::Component> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_X11 / "XEmbedChildProxy";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::sun::awt::X11::XEmbeddingContainer, ::jlong)>(), //
		jMethod<::jvoid()>("addNotify"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto addNotify(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("addNotify")] != -1);
		return call<R>("addNotify", std::forward<Args>(args)...);
	}

};

#endif
