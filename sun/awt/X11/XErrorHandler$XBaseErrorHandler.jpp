#ifndef sun_awt_X11_XErrorHandler$XBaseErrorHandler_HPP
#define sun_awt_X11_XErrorHandler$XBaseErrorHandler_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::X11::XErrorHandler$XBaseErrorHandler : public jObject<::sun::awt::X11::XErrorHandler$XBaseErrorHandler, ::sun::awt::X11::XErrorHandler> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_X11 / "XErrorHandler$XBaseErrorHandler";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jint(::jlong, ::sun::awt::X11::XErrorEvent)>("handleError"), //
	};

	template<typename R = ::jint, typename... Args>
	auto handleError(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("handleError")] != -1);
		return call<R>("handleError", std::forward<Args>(args)...);
	}

};

#endif
