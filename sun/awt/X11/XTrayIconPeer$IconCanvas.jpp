#ifndef sun_awt_X11_XTrayIconPeer$IconCanvas_HPP
#define sun_awt_X11_XTrayIconPeer$IconCanvas_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::X11::XTrayIconPeer$IconCanvas : public jObject<::sun::awt::X11::XTrayIconPeer$IconCanvas, ::java::awt::Canvas> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_X11 / "XTrayIconPeer$IconCanvas";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::Graphics)>("paint"), //
		jMethod<::jvoid(::java::awt::Image)>("updateImage"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto paint(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("paint")] != -1);
		return call<R>("paint", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto updateImage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("updateImage")] != -1);
		return call<R>("updateImage", std::forward<Args>(args)...);
	}

};

#endif
