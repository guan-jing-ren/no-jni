#ifndef sun_awt_ComponentFactory_HPP
#define sun_awt_ComponentFactory_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::ComponentFactory : public jObject<::sun::awt::ComponentFactory, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "ComponentFactory";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::awt::peer::ButtonPeer(::java::awt::Button)>("createButton"), //
		jMethod<::java::awt::peer::CanvasPeer(::java::awt::Canvas)>("createCanvas"), //
		jMethod<::java::awt::peer::CheckboxPeer(::java::awt::Checkbox)>("createCheckbox"), //
		jMethod<::java::awt::peer::CheckboxMenuItemPeer(::java::awt::CheckboxMenuItem)>("createCheckboxMenuItem"), //
		jMethod<::java::awt::peer::ChoicePeer(::java::awt::Choice)>("createChoice"), //
		jMethod<::java::awt::peer::DialogPeer(::java::awt::Dialog)>("createDialog"), //
		jMethod<::java::awt::dnd::peer::DragSourceContextPeer(::java::awt::dnd::DragGestureEvent)>("createDragSourceContextPeer"), //
		jMethod<::java::awt::peer::FileDialogPeer(::java::awt::FileDialog)>("createFileDialog"), //
		jMethod<::java::awt::peer::FramePeer(::java::awt::Frame)>("createFrame"), //
		jMethod<::java::awt::peer::LabelPeer(::java::awt::Label)>("createLabel"), //
		jMethod<::java::awt::peer::ListPeer(::java::awt::List)>("createList"), //
		jMethod<::java::awt::peer::MenuPeer(::java::awt::Menu)>("createMenu"), //
		jMethod<::java::awt::peer::MenuBarPeer(::java::awt::MenuBar)>("createMenuBar"), //
		jMethod<::java::awt::peer::MenuItemPeer(::java::awt::MenuItem)>("createMenuItem"), //
		jMethod<::java::awt::peer::PanelPeer(::java::awt::Panel)>("createPanel"), //
		jMethod<::java::awt::peer::PopupMenuPeer(::java::awt::PopupMenu)>("createPopupMenu"), //
		jMethod<::java::awt::peer::RobotPeer(::java::awt::Robot, ::java::awt::GraphicsDevice)>("createRobot"), //
		jMethod<::java::awt::peer::ScrollPanePeer(::java::awt::ScrollPane)>("createScrollPane"), //
		jMethod<::java::awt::peer::ScrollbarPeer(::java::awt::Scrollbar)>("createScrollbar"), //
		jMethod<::java::awt::peer::TextAreaPeer(::java::awt::TextArea)>("createTextArea"), //
		jMethod<::java::awt::peer::TextFieldPeer(::java::awt::TextField)>("createTextField"), //
		jMethod<::java::awt::peer::WindowPeer(::java::awt::Window)>("createWindow"), //
		jMethod<::sun::awt::datatransfer::DataTransferer()>("getDataTransferer"), //
		jMethod<::java::awt::peer::FontPeer(::java::lang::String, ::jint)>("getFontPeer"), //
	};

	template<typename R = ::java::awt::peer::ButtonPeer, typename... Args>
	auto createButton(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createButton")] != -1);
		return call<R>("createButton", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::CanvasPeer, typename... Args>
	auto createCanvas(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createCanvas")] != -1);
		return call<R>("createCanvas", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::CheckboxPeer, typename... Args>
	auto createCheckbox(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createCheckbox")] != -1);
		return call<R>("createCheckbox", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::CheckboxMenuItemPeer, typename... Args>
	auto createCheckboxMenuItem(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createCheckboxMenuItem")] != -1);
		return call<R>("createCheckboxMenuItem", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::ChoicePeer, typename... Args>
	auto createChoice(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createChoice")] != -1);
		return call<R>("createChoice", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::DialogPeer, typename... Args>
	auto createDialog(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createDialog")] != -1);
		return call<R>("createDialog", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::dnd::peer::DragSourceContextPeer, typename... Args>
	auto createDragSourceContextPeer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createDragSourceContextPeer")] != -1);
		return call<R>("createDragSourceContextPeer", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::FileDialogPeer, typename... Args>
	auto createFileDialog(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createFileDialog")] != -1);
		return call<R>("createFileDialog", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::FramePeer, typename... Args>
	auto createFrame(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createFrame")] != -1);
		return call<R>("createFrame", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::LabelPeer, typename... Args>
	auto createLabel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createLabel")] != -1);
		return call<R>("createLabel", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::ListPeer, typename... Args>
	auto createList(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createList")] != -1);
		return call<R>("createList", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::MenuPeer, typename... Args>
	auto createMenu(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createMenu")] != -1);
		return call<R>("createMenu", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::MenuBarPeer, typename... Args>
	auto createMenuBar(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createMenuBar")] != -1);
		return call<R>("createMenuBar", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::MenuItemPeer, typename... Args>
	auto createMenuItem(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createMenuItem")] != -1);
		return call<R>("createMenuItem", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::PanelPeer, typename... Args>
	auto createPanel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createPanel")] != -1);
		return call<R>("createPanel", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::PopupMenuPeer, typename... Args>
	auto createPopupMenu(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createPopupMenu")] != -1);
		return call<R>("createPopupMenu", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::RobotPeer, typename... Args>
	auto createRobot(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createRobot")] != -1);
		return call<R>("createRobot", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::ScrollPanePeer, typename... Args>
	auto createScrollPane(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createScrollPane")] != -1);
		return call<R>("createScrollPane", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::ScrollbarPeer, typename... Args>
	auto createScrollbar(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createScrollbar")] != -1);
		return call<R>("createScrollbar", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::TextAreaPeer, typename... Args>
	auto createTextArea(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createTextArea")] != -1);
		return call<R>("createTextArea", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::TextFieldPeer, typename... Args>
	auto createTextField(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createTextField")] != -1);
		return call<R>("createTextField", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::WindowPeer, typename... Args>
	auto createWindow(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createWindow")] != -1);
		return call<R>("createWindow", std::forward<Args>(args)...);
	}

	template<typename R = ::sun::awt::datatransfer::DataTransferer, typename... Args>
	auto getDataTransferer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDataTransferer")] != -1);
		return call<R>("getDataTransferer", std::forward<Args>(args)...);
	}

	template<typename R = ::java::awt::peer::FontPeer, typename... Args>
	auto getFontPeer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFontPeer")] != -1);
		return call<R>("getFontPeer", std::forward<Args>(args)...);
	}

};

#endif
