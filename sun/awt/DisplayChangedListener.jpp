#ifndef sun_awt_DisplayChangedListener_HPP
#define sun_awt_DisplayChangedListener_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::DisplayChangedListener : public jObject<::sun::awt::DisplayChangedListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "DisplayChangedListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid()>("displayChanged"), //
		jMethod<::jvoid()>("paletteChanged"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto displayChanged(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("displayChanged")] != -1);
		return call<R>("displayChanged", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto paletteChanged(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("paletteChanged")] != -1);
		return call<R>("paletteChanged", std::forward<Args>(args)...);
	}

};

#endif
