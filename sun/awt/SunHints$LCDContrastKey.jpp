#ifndef sun_awt_SunHints$LCDContrastKey_HPP
#define sun_awt_SunHints$LCDContrastKey_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::SunHints$LCDContrastKey : public jObject<::sun::awt::SunHints$LCDContrastKey, ::sun::awt::SunHints$Key> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "SunHints$LCDContrastKey";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint, ::java::lang::String)>(), //
		jMethod<::jboolean(::java::lang::Object)>("isCompatibleValue"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto isCompatibleValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isCompatibleValue")] != -1);
		return call<R>("isCompatibleValue", std::forward<Args>(args)...);
	}

};

#endif
