#ifndef sun_awt_AWTAccessor$DefaultKeyboardFocusManagerAccessor_HPP
#define sun_awt_AWTAccessor$DefaultKeyboardFocusManagerAccessor_HPP

#include "../../jfwd_decl.hpp"

class ::sun::awt::AWTAccessor$DefaultKeyboardFocusManagerAccessor : public jObject<::sun::awt::AWTAccessor$DefaultKeyboardFocusManagerAccessor, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt / "AWTAccessor$DefaultKeyboardFocusManagerAccessor";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::awt::DefaultKeyboardFocusManager, ::java::awt::event::KeyEvent)>("consumeNextKeyTyped"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto consumeNextKeyTyped(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("consumeNextKeyTyped")] != -1);
		return call<R>("consumeNextKeyTyped", std::forward<Args>(args)...);
	}

};

#endif
