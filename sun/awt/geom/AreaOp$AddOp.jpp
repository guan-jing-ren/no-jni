#ifndef sun_awt_geom_AreaOp$AddOp_HPP
#define sun_awt_geom_AreaOp$AddOp_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::awt::geom::AreaOp$AddOp : public jObject<::sun::awt::geom::AreaOp$AddOp, ::sun::awt::geom::AreaOp$CAGOp> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_awt_geom / "AreaOp$AddOp";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jboolean(::jboolean, ::jboolean)>("newClassification"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto newClassification(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("newClassification")] != -1);
		return call<R>("newClassification", std::forward<Args>(args)...);
	}

};

#endif
