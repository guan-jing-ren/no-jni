#ifndef sun_management_counter_LongArrayCounter_HPP
#define sun_management_counter_LongArrayCounter_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::management::counter::LongArrayCounter : public jObject<::sun::management::counter::LongArrayCounter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_management_counter / "LongArrayCounter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jlong *()>("longArrayValue"), //
		jMethod<::jlong(::jint)>("longAt"), //
	};

	template<typename R = ::jlong *, typename... Args>
	auto longArrayValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("longArrayValue")] != -1);
		return call<R>("longArrayValue", std::forward<Args>(args)...);
	}

	template<typename R = ::jlong, typename... Args>
	auto longAt(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("longAt")] != -1);
		return call<R>("longAt", std::forward<Args>(args)...);
	}

};

#endif
