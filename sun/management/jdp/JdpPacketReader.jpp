#ifndef sun_management_jdp_JdpPacketReader_HPP
#define sun_management_jdp_JdpPacketReader_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::management::jdp::JdpPacketReader : public jObject<::sun::management::jdp::JdpPacketReader, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_management_jdp / "JdpPacketReader";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jbyte *)>(), //
		jMethod<::java::util::Map()>("getDiscoveryDataAsMap"), //
		jMethod<::java::lang::String()>("getEntry"), //
	};

	template<typename R = ::java::util::Map, typename... Args>
	auto getDiscoveryDataAsMap(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDiscoveryDataAsMap")] != -1);
		return call<R>("getDiscoveryDataAsMap", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getEntry(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getEntry")] != -1);
		return call<R>("getEntry", std::forward<Args>(args)...);
	}

};

#endif
