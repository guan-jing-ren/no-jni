#ifndef sun_management_FileSystemImpl_HPP
#define sun_management_FileSystemImpl_HPP

#include "../../jfwd_decl.hpp"

class ::sun::management::FileSystemImpl : public jObject<::sun::management::FileSystemImpl, ::sun::management::FileSystem> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_management / "FileSystemImpl";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jboolean(::java::io::File)>("isAccessUserOnly"), //
		jMethod<::jboolean(::java::io::File)>("supportsFileSecurity"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto isAccessUserOnly(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isAccessUserOnly")] != -1);
		return call<R>("isAccessUserOnly", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto supportsFileSecurity(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("supportsFileSecurity")] != -1);
		return call<R>("supportsFileSecurity", std::forward<Args>(args)...);
	}

};

#endif
