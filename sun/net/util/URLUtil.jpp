#ifndef sun_net_util_URLUtil_HPP
#define sun_net_util_URLUtil_HPP

#include "../../../jfwd_decl.hpp"

class ::sun::net::util::URLUtil : public jObject<::sun::net::util::URLUtil, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_net_util / "URLUtil";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::security::Permission(::java::net::URL)>("getConnectPermission"), //
		jMethod<::java::lang::String(::java::net::URL)>("urlNoFragString"), //
	};

	template<typename R = ::java::security::Permission, typename... Args>
	static auto getConnectPermission(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getConnectPermission")] != -1);
		return scall<R>("getConnectPermission", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	static auto urlNoFragString(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("urlNoFragString")] != -1);
		return scall<R>("urlNoFragString", std::forward<Args>(args)...);
	}

};

#endif
