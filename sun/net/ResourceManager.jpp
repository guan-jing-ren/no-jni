#ifndef sun_net_ResourceManager_HPP
#define sun_net_ResourceManager_HPP

#include "../../jfwd_decl.hpp"

class ::sun::net::ResourceManager : public jObject<::sun::net::ResourceManager, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_net / "ResourceManager";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid()>("afterUdpClose"), //
		jMethod<::jvoid()>("beforeUdpCreate"), //
	};

	template<typename R = ::jvoid, typename... Args>
	static auto afterUdpClose(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("afterUdpClose")] != -1);
		return scall<R>("afterUdpClose", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto beforeUdpCreate(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("beforeUdpCreate")] != -1);
		return scall<R>("beforeUdpCreate", std::forward<Args>(args)...);
	}

};

#endif
