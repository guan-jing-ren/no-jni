#ifndef sun_net_www_protocol_http_spnego_NegotiateCallbackHandler_HPP
#define sun_net_www_protocol_http_spnego_NegotiateCallbackHandler_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::sun::net::www::protocol::http::spnego::NegotiateCallbackHandler : public jObject<::sun::net::www::protocol::http::spnego::NegotiateCallbackHandler, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_net_www_protocol_http_spnego / "NegotiateCallbackHandler";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::sun::net::www::protocol::http::HttpCallerInfo)>(), //
		jMethod<::jvoid(::javax::security::auth::callback::Callback *)>("handle"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto handle(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("handle")] != -1);
		return call<R>("handle", std::forward<Args>(args)...);
	}

};

#endif
