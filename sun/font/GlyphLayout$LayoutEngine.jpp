#ifndef sun_font_GlyphLayout$LayoutEngine_HPP
#define sun_font_GlyphLayout$LayoutEngine_HPP

#include "../../jfwd_decl.hpp"

class ::sun::font::GlyphLayout$LayoutEngine : public jObject<::sun::font::GlyphLayout$LayoutEngine, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_font / "GlyphLayout$LayoutEngine";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::sun::font::FontStrikeDesc, ::jfloat *, ::jint, ::jint, ::sun::font::TextRecord, ::jint, ::java::awt::geom::Point2D$Float, ::sun::font::GlyphLayout$GVData)>("layout"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto layout(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("layout")] != -1);
		return call<R>("layout", std::forward<Args>(args)...);
	}

};

#endif
