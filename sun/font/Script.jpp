#ifndef sun_font_Script_HPP
#define sun_font_Script_HPP

#include "../../jfwd_decl.hpp"

class ::sun::font::Script : public jObject<::sun::font::Script, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_font / "Script";

	constexpr static Enume field_signatures{
		jField<::jint>("ARABIC"), //
		jField<::jint>("ARMENIAN"), //
		jField<::jint>("BENGALI"), //
		jField<::jint>("BOPOMOFO"), //
		jField<::jint>("BUHID"), //
		jField<::jint>("CANADIAN_ABORIGINAL"), //
		jField<::jint>("CHEROKEE"), //
		jField<::jint>("CODE_LIMIT"), //
		jField<::jint>("COMMON"), //
		jField<::jint>("COPTIC"), //
		jField<::jint>("CYRILLIC"), //
		jField<::jint>("DESERET"), //
		jField<::jint>("DEVANAGARI"), //
		jField<::jint>("ETHIOPIC"), //
		jField<::jint>("GEORGIAN"), //
		jField<::jint>("GOTHIC"), //
		jField<::jint>("GREEK"), //
		jField<::jint>("GUJARATI"), //
		jField<::jint>("GURMUKHI"), //
		jField<::jint>("HAN"), //
		jField<::jint>("HANGUL"), //
		jField<::jint>("HANUNOO"), //
		jField<::jint>("HEBREW"), //
		jField<::jint>("HIRAGANA"), //
		jField<::jint>("INHERITED"), //
		jField<::jint>("INVALID_CODE"), //
		jField<::jint>("KANNADA"), //
		jField<::jint>("KATAKANA"), //
		jField<::jint>("KHMER"), //
		jField<::jint>("LAO"), //
		jField<::jint>("LATIN"), //
		jField<::jint>("MALAYALAM"), //
		jField<::jint>("MONGOLIAN"), //
		jField<::jint>("MYANMAR"), //
		jField<::jint>("OGHAM"), //
		jField<::jint>("OLD_ITALIC"), //
		jField<::jint>("ORIYA"), //
		jField<::jint>("RUNIC"), //
		jField<::jint>("SINHALA"), //
		jField<::jint>("SYRIAC"), //
		jField<::jint>("TAGALOG"), //
		jField<::jint>("TAGBANWA"), //
		jField<::jint>("TAMIL"), //
		jField<::jint>("TELUGU"), //
		jField<::jint>("THAANA"), //
		jField<::jint>("THAI"), //
		jField<::jint>("TIBETAN"), //
		jField<::jint>("UCAS"), //
		jField<::jint>("YI"), //
	};

	template<typename F = ::jint>
	static auto ARABIC() {
		static_assert(field_signatures[jField<F>("ARABIC")] != -1);
		return sat<F>("ARABIC");
	}

	template<typename F = ::jint>
	static auto ARMENIAN() {
		static_assert(field_signatures[jField<F>("ARMENIAN")] != -1);
		return sat<F>("ARMENIAN");
	}

	template<typename F = ::jint>
	static auto BENGALI() {
		static_assert(field_signatures[jField<F>("BENGALI")] != -1);
		return sat<F>("BENGALI");
	}

	template<typename F = ::jint>
	static auto BOPOMOFO() {
		static_assert(field_signatures[jField<F>("BOPOMOFO")] != -1);
		return sat<F>("BOPOMOFO");
	}

	template<typename F = ::jint>
	static auto BUHID() {
		static_assert(field_signatures[jField<F>("BUHID")] != -1);
		return sat<F>("BUHID");
	}

	template<typename F = ::jint>
	static auto CANADIAN_ABORIGINAL() {
		static_assert(field_signatures[jField<F>("CANADIAN_ABORIGINAL")] != -1);
		return sat<F>("CANADIAN_ABORIGINAL");
	}

	template<typename F = ::jint>
	static auto CHEROKEE() {
		static_assert(field_signatures[jField<F>("CHEROKEE")] != -1);
		return sat<F>("CHEROKEE");
	}

	template<typename F = ::jint>
	static auto CODE_LIMIT() {
		static_assert(field_signatures[jField<F>("CODE_LIMIT")] != -1);
		return sat<F>("CODE_LIMIT");
	}

	template<typename F = ::jint>
	static auto COMMON() {
		static_assert(field_signatures[jField<F>("COMMON")] != -1);
		return sat<F>("COMMON");
	}

	template<typename F = ::jint>
	static auto COPTIC() {
		static_assert(field_signatures[jField<F>("COPTIC")] != -1);
		return sat<F>("COPTIC");
	}

	template<typename F = ::jint>
	static auto CYRILLIC() {
		static_assert(field_signatures[jField<F>("CYRILLIC")] != -1);
		return sat<F>("CYRILLIC");
	}

	template<typename F = ::jint>
	static auto DESERET() {
		static_assert(field_signatures[jField<F>("DESERET")] != -1);
		return sat<F>("DESERET");
	}

	template<typename F = ::jint>
	static auto DEVANAGARI() {
		static_assert(field_signatures[jField<F>("DEVANAGARI")] != -1);
		return sat<F>("DEVANAGARI");
	}

	template<typename F = ::jint>
	static auto ETHIOPIC() {
		static_assert(field_signatures[jField<F>("ETHIOPIC")] != -1);
		return sat<F>("ETHIOPIC");
	}

	template<typename F = ::jint>
	static auto GEORGIAN() {
		static_assert(field_signatures[jField<F>("GEORGIAN")] != -1);
		return sat<F>("GEORGIAN");
	}

	template<typename F = ::jint>
	static auto GOTHIC() {
		static_assert(field_signatures[jField<F>("GOTHIC")] != -1);
		return sat<F>("GOTHIC");
	}

	template<typename F = ::jint>
	static auto GREEK() {
		static_assert(field_signatures[jField<F>("GREEK")] != -1);
		return sat<F>("GREEK");
	}

	template<typename F = ::jint>
	static auto GUJARATI() {
		static_assert(field_signatures[jField<F>("GUJARATI")] != -1);
		return sat<F>("GUJARATI");
	}

	template<typename F = ::jint>
	static auto GURMUKHI() {
		static_assert(field_signatures[jField<F>("GURMUKHI")] != -1);
		return sat<F>("GURMUKHI");
	}

	template<typename F = ::jint>
	static auto HAN() {
		static_assert(field_signatures[jField<F>("HAN")] != -1);
		return sat<F>("HAN");
	}

	template<typename F = ::jint>
	static auto HANGUL() {
		static_assert(field_signatures[jField<F>("HANGUL")] != -1);
		return sat<F>("HANGUL");
	}

	template<typename F = ::jint>
	static auto HANUNOO() {
		static_assert(field_signatures[jField<F>("HANUNOO")] != -1);
		return sat<F>("HANUNOO");
	}

	template<typename F = ::jint>
	static auto HEBREW() {
		static_assert(field_signatures[jField<F>("HEBREW")] != -1);
		return sat<F>("HEBREW");
	}

	template<typename F = ::jint>
	static auto HIRAGANA() {
		static_assert(field_signatures[jField<F>("HIRAGANA")] != -1);
		return sat<F>("HIRAGANA");
	}

	template<typename F = ::jint>
	static auto INHERITED() {
		static_assert(field_signatures[jField<F>("INHERITED")] != -1);
		return sat<F>("INHERITED");
	}

	template<typename F = ::jint>
	static auto INVALID_CODE() {
		static_assert(field_signatures[jField<F>("INVALID_CODE")] != -1);
		return sat<F>("INVALID_CODE");
	}

	template<typename F = ::jint>
	static auto KANNADA() {
		static_assert(field_signatures[jField<F>("KANNADA")] != -1);
		return sat<F>("KANNADA");
	}

	template<typename F = ::jint>
	static auto KATAKANA() {
		static_assert(field_signatures[jField<F>("KATAKANA")] != -1);
		return sat<F>("KATAKANA");
	}

	template<typename F = ::jint>
	static auto KHMER() {
		static_assert(field_signatures[jField<F>("KHMER")] != -1);
		return sat<F>("KHMER");
	}

	template<typename F = ::jint>
	static auto LAO() {
		static_assert(field_signatures[jField<F>("LAO")] != -1);
		return sat<F>("LAO");
	}

	template<typename F = ::jint>
	static auto LATIN() {
		static_assert(field_signatures[jField<F>("LATIN")] != -1);
		return sat<F>("LATIN");
	}

	template<typename F = ::jint>
	static auto MALAYALAM() {
		static_assert(field_signatures[jField<F>("MALAYALAM")] != -1);
		return sat<F>("MALAYALAM");
	}

	template<typename F = ::jint>
	static auto MONGOLIAN() {
		static_assert(field_signatures[jField<F>("MONGOLIAN")] != -1);
		return sat<F>("MONGOLIAN");
	}

	template<typename F = ::jint>
	static auto MYANMAR() {
		static_assert(field_signatures[jField<F>("MYANMAR")] != -1);
		return sat<F>("MYANMAR");
	}

	template<typename F = ::jint>
	static auto OGHAM() {
		static_assert(field_signatures[jField<F>("OGHAM")] != -1);
		return sat<F>("OGHAM");
	}

	template<typename F = ::jint>
	static auto OLD_ITALIC() {
		static_assert(field_signatures[jField<F>("OLD_ITALIC")] != -1);
		return sat<F>("OLD_ITALIC");
	}

	template<typename F = ::jint>
	static auto ORIYA() {
		static_assert(field_signatures[jField<F>("ORIYA")] != -1);
		return sat<F>("ORIYA");
	}

	template<typename F = ::jint>
	static auto RUNIC() {
		static_assert(field_signatures[jField<F>("RUNIC")] != -1);
		return sat<F>("RUNIC");
	}

	template<typename F = ::jint>
	static auto SINHALA() {
		static_assert(field_signatures[jField<F>("SINHALA")] != -1);
		return sat<F>("SINHALA");
	}

	template<typename F = ::jint>
	static auto SYRIAC() {
		static_assert(field_signatures[jField<F>("SYRIAC")] != -1);
		return sat<F>("SYRIAC");
	}

	template<typename F = ::jint>
	static auto TAGALOG() {
		static_assert(field_signatures[jField<F>("TAGALOG")] != -1);
		return sat<F>("TAGALOG");
	}

	template<typename F = ::jint>
	static auto TAGBANWA() {
		static_assert(field_signatures[jField<F>("TAGBANWA")] != -1);
		return sat<F>("TAGBANWA");
	}

	template<typename F = ::jint>
	static auto TAMIL() {
		static_assert(field_signatures[jField<F>("TAMIL")] != -1);
		return sat<F>("TAMIL");
	}

	template<typename F = ::jint>
	static auto TELUGU() {
		static_assert(field_signatures[jField<F>("TELUGU")] != -1);
		return sat<F>("TELUGU");
	}

	template<typename F = ::jint>
	static auto THAANA() {
		static_assert(field_signatures[jField<F>("THAANA")] != -1);
		return sat<F>("THAANA");
	}

	template<typename F = ::jint>
	static auto THAI() {
		static_assert(field_signatures[jField<F>("THAI")] != -1);
		return sat<F>("THAI");
	}

	template<typename F = ::jint>
	static auto TIBETAN() {
		static_assert(field_signatures[jField<F>("TIBETAN")] != -1);
		return sat<F>("TIBETAN");
	}

	template<typename F = ::jint>
	static auto UCAS() {
		static_assert(field_signatures[jField<F>("UCAS")] != -1);
		return sat<F>("UCAS");
	}

	template<typename F = ::jint>
	static auto YI() {
		static_assert(field_signatures[jField<F>("YI")] != -1);
		return sat<F>("YI");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
	};

};

#endif
