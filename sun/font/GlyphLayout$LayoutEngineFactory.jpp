#ifndef sun_font_GlyphLayout$LayoutEngineFactory_HPP
#define sun_font_GlyphLayout$LayoutEngineFactory_HPP

#include "../../jfwd_decl.hpp"

class ::sun::font::GlyphLayout$LayoutEngineFactory : public jObject<::sun::font::GlyphLayout$LayoutEngineFactory, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_font / "GlyphLayout$LayoutEngineFactory";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::sun::font::GlyphLayout$LayoutEngine(::sun::font::Font2D, ::jint, ::jint)>("getEngine"), //
		jMethod<::sun::font::GlyphLayout$LayoutEngine(::sun::font::GlyphLayout$LayoutEngineKey)>("getEngine"), //
	};

	template<typename R = ::sun::font::GlyphLayout$LayoutEngine, typename... Args>
	auto getEngine(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getEngine")] != -1);
		return call<R>("getEngine", std::forward<Args>(args)...);
	}

};

#endif
