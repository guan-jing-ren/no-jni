#ifndef sun_reflect_generics_scope_AbstractScope_HPP
#define sun_reflect_generics_scope_AbstractScope_HPP

#include "../../../../jfwd_decl.hpp"

class ::sun::reflect::generics::scope::AbstractScope : public jObject<::sun::reflect::generics::scope::AbstractScope, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_reflect_generics_scope / "AbstractScope";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::reflect::TypeVariable(::java::lang::String)>("lookup"), //
	};

	template<typename R = ::java::lang::reflect::TypeVariable, typename... Args>
	auto lookup(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("lookup")] != -1);
		return call<R>("lookup", std::forward<Args>(args)...);
	}

};

#endif
