#ifndef sun_reflect_generics_tree_Signature_HPP
#define sun_reflect_generics_tree_Signature_HPP

#include "../../../../jfwd_decl.hpp"

class ::sun::reflect::generics::tree::Signature : public jObject<::sun::reflect::generics::tree::Signature, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::sun_reflect_generics_tree / "Signature";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::sun::reflect::generics::tree::FormalTypeParameter *()>("getFormalTypeParameters"), //
	};

	template<typename R = ::sun::reflect::generics::tree::FormalTypeParameter *, typename... Args>
	auto getFormalTypeParameters(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getFormalTypeParameters")] != -1);
		return call<R>("getFormalTypeParameters", std::forward<Args>(args)...);
	}

};

#endif
