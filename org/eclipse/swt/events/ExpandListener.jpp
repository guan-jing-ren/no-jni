#ifndef org_eclipse_swt_events_ExpandListener_HPP
#define org_eclipse_swt_events_ExpandListener_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::eclipse::swt::events::ExpandListener : public jObject<::org::eclipse::swt::events::ExpandListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_eclipse_swt_events / "ExpandListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::org::eclipse::swt::events::ExpandEvent)>("itemCollapsed"), //
		jMethod<::jvoid(::org::eclipse::swt::events::ExpandEvent)>("itemExpanded"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto itemCollapsed(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("itemCollapsed")] != -1);
		return call<R>("itemCollapsed", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto itemExpanded(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("itemExpanded")] != -1);
		return call<R>("itemExpanded", std::forward<Args>(args)...);
	}

};

#endif
