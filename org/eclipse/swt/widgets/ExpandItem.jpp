#ifndef org_eclipse_swt_widgets_ExpandItem_HPP
#define org_eclipse_swt_widgets_ExpandItem_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::eclipse::swt::widgets::ExpandItem : public jObject<::org::eclipse::swt::widgets::ExpandItem, ::org::eclipse::swt::widgets::Item> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_eclipse_swt_widgets / "ExpandItem";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::org::eclipse::swt::widgets::ExpandBar, ::jint)>(), //
		jConstructor<::jvoid(::org::eclipse::swt::widgets::ExpandBar, ::jint, ::jint)>(), //
		jMethod<::org::eclipse::swt::widgets::Control()>("getControl"), //
		jMethod<::jboolean()>("getExpanded"), //
		jMethod<::jint()>("getHeaderHeight"), //
		jMethod<::jint()>("getHeight"), //
		jMethod<::org::eclipse::swt::widgets::ExpandBar()>("getParent"), //
		jMethod<::jvoid(::org::eclipse::swt::widgets::Control)>("setControl"), //
		jMethod<::jvoid(::jboolean)>("setExpanded"), //
		jMethod<::jvoid(::jint)>("setHeight"), //
		jMethod<::jvoid(::org::eclipse::swt::graphics::Image)>("setImage"), //
		jMethod<::jvoid(::java::lang::String)>("setText"), //
	};

	template<typename R = ::org::eclipse::swt::widgets::Control, typename... Args>
	auto getControl(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getControl")] != -1);
		return call<R>("getControl", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto getExpanded(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getExpanded")] != -1);
		return call<R>("getExpanded", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getHeaderHeight(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getHeaderHeight")] != -1);
		return call<R>("getHeaderHeight", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getHeight(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getHeight")] != -1);
		return call<R>("getHeight", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::widgets::ExpandBar, typename... Args>
	auto getParent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getParent")] != -1);
		return call<R>("getParent", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setControl(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setControl")] != -1);
		return call<R>("setControl", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setExpanded(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setExpanded")] != -1);
		return call<R>("setExpanded", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setHeight(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setHeight")] != -1);
		return call<R>("setHeight", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setImage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setImage")] != -1);
		return call<R>("setImage", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setText(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setText")] != -1);
		return call<R>("setText", std::forward<Args>(args)...);
	}

};

#endif
