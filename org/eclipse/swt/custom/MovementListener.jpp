#ifndef org_eclipse_swt_custom_MovementListener_HPP
#define org_eclipse_swt_custom_MovementListener_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::eclipse::swt::custom::MovementListener : public jObject<::org::eclipse::swt::custom::MovementListener, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_eclipse_swt_custom / "MovementListener";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::org::eclipse::swt::custom::MovementEvent)>("getNextOffset"), //
		jMethod<::jvoid(::org::eclipse::swt::custom::MovementEvent)>("getPreviousOffset"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto getNextOffset(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getNextOffset")] != -1);
		return call<R>("getNextOffset", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto getPreviousOffset(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPreviousOffset")] != -1);
		return call<R>("getPreviousOffset", std::forward<Args>(args)...);
	}

};

#endif
