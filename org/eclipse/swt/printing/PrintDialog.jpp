#ifndef org_eclipse_swt_printing_PrintDialog_HPP
#define org_eclipse_swt_printing_PrintDialog_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::eclipse::swt::printing::PrintDialog : public jObject<::org::eclipse::swt::printing::PrintDialog, ::org::eclipse::swt::widgets::Dialog> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_eclipse_swt_printing / "PrintDialog";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::org::eclipse::swt::widgets::Shell)>(), //
		jConstructor<::jvoid(::org::eclipse::swt::widgets::Shell, ::jint)>(), //
		jMethod<::jint()>("getEndPage"), //
		jMethod<::jboolean()>("getPrintToFile"), //
		jMethod<::org::eclipse::swt::printing::PrinterData()>("getPrinterData"), //
		jMethod<::jint()>("getScope"), //
		jMethod<::jint()>("getStartPage"), //
		jMethod<::org::eclipse::swt::printing::PrinterData()>("open"), //
		jMethod<::jvoid(::jint)>("setEndPage"), //
		jMethod<::jvoid(::jboolean)>("setPrintToFile"), //
		jMethod<::jvoid(::org::eclipse::swt::printing::PrinterData)>("setPrinterData"), //
		jMethod<::jvoid(::jint)>("setScope"), //
		jMethod<::jvoid(::jint)>("setStartPage"), //
	};

	template<typename R = ::jint, typename... Args>
	auto getEndPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getEndPage")] != -1);
		return call<R>("getEndPage", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto getPrintToFile(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPrintToFile")] != -1);
		return call<R>("getPrintToFile", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::printing::PrinterData, typename... Args>
	auto getPrinterData(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPrinterData")] != -1);
		return call<R>("getPrinterData", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getScope(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getScope")] != -1);
		return call<R>("getScope", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getStartPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getStartPage")] != -1);
		return call<R>("getStartPage", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::printing::PrinterData, typename... Args>
	auto open(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("open")] != -1);
		return call<R>("open", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setEndPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setEndPage")] != -1);
		return call<R>("setEndPage", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setPrintToFile(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setPrintToFile")] != -1);
		return call<R>("setPrintToFile", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setPrinterData(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setPrinterData")] != -1);
		return call<R>("setPrinterData", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setScope(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setScope")] != -1);
		return call<R>("setScope", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setStartPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setStartPage")] != -1);
		return call<R>("setStartPage", std::forward<Args>(args)...);
	}

};

#endif
