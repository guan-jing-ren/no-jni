#ifndef org_eclipse_swt_printing_Printer_HPP
#define org_eclipse_swt_printing_Printer_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::eclipse::swt::printing::Printer : public jObject<::org::eclipse::swt::printing::Printer, ::org::eclipse::swt::graphics::Device> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_eclipse_swt_printing / "Printer";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jConstructor<::jvoid(::org::eclipse::swt::printing::PrinterData)>(), //
		jMethod<::jvoid()>("cancelJob"), //
		jMethod<::org::eclipse::swt::graphics::Rectangle(::jint, ::jint, ::jint, ::jint)>("computeTrim"), //
		jMethod<::jvoid()>("endJob"), //
		jMethod<::jvoid()>("endPage"), //
		jMethod<::org::eclipse::swt::graphics::Rectangle()>("getBounds"), //
		jMethod<::org::eclipse::swt::graphics::Rectangle()>("getClientArea"), //
		jMethod<::org::eclipse::swt::graphics::Point()>("getDPI"), //
		jMethod<::org::eclipse::swt::printing::PrinterData()>("getDefaultPrinterData"), //
		jMethod<::org::eclipse::swt::printing::PrinterData()>("getPrinterData"), //
		jMethod<::org::eclipse::swt::printing::PrinterData *()>("getPrinterList"), //
		jMethod<::jvoid(::jlong, ::org::eclipse::swt::graphics::GCData)>("internal_dispose_GC"), //
		jMethod<::jlong(::org::eclipse::swt::graphics::GCData)>("internal_new_GC"), //
		jMethod<::jboolean(::java::lang::String)>("startJob"), //
		jMethod<::jboolean()>("startPage"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto cancelJob(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("cancelJob")] != -1);
		return call<R>("cancelJob", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::graphics::Rectangle, typename... Args>
	auto computeTrim(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("computeTrim")] != -1);
		return call<R>("computeTrim", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto endJob(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("endJob")] != -1);
		return call<R>("endJob", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto endPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("endPage")] != -1);
		return call<R>("endPage", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::graphics::Rectangle, typename... Args>
	auto getBounds(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getBounds")] != -1);
		return call<R>("getBounds", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::graphics::Rectangle, typename... Args>
	auto getClientArea(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getClientArea")] != -1);
		return call<R>("getClientArea", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::graphics::Point, typename... Args>
	auto getDPI(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDPI")] != -1);
		return call<R>("getDPI", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::printing::PrinterData, typename... Args>
	static auto getDefaultPrinterData(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getDefaultPrinterData")] != -1);
		return scall<R>("getDefaultPrinterData", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::printing::PrinterData, typename... Args>
	auto getPrinterData(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPrinterData")] != -1);
		return call<R>("getPrinterData", std::forward<Args>(args)...);
	}

	template<typename R = ::org::eclipse::swt::printing::PrinterData *, typename... Args>
	static auto getPrinterList(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPrinterList")] != -1);
		return scall<R>("getPrinterList", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto internal_dispose_GC(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("internal_dispose_GC")] != -1);
		return call<R>("internal_dispose_GC", std::forward<Args>(args)...);
	}

	template<typename R = ::jlong, typename... Args>
	auto internal_new_GC(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("internal_new_GC")] != -1);
		return call<R>("internal_new_GC", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto startJob(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("startJob")] != -1);
		return call<R>("startJob", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto startPage(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("startPage")] != -1);
		return call<R>("startPage", std::forward<Args>(args)...);
	}

};

#endif
