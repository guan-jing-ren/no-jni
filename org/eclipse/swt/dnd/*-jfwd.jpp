#ifndef org_eclipse_swt_dnd_JPP
#define org_eclipse_swt_dnd_JPP

namespace org::eclipse::swt::dnd { class ByteArrayTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::ByteArrayTransfer> = ::org_eclipse_swt_dnd / "ByteArrayTransfer";
namespace org::eclipse::swt::dnd { class Clipboard; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::Clipboard> = ::org_eclipse_swt_dnd / "Clipboard";
namespace org::eclipse::swt::dnd { class ClipboardProxy; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::ClipboardProxy> = ::org_eclipse_swt_dnd / "ClipboardProxy";
namespace org::eclipse::swt::dnd { class ClipboardProxy$1; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::ClipboardProxy$1> = ::org_eclipse_swt_dnd / "ClipboardProxy$1";
namespace org::eclipse::swt::dnd { class DND; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DND> = ::org_eclipse_swt_dnd / "DND";
namespace org::eclipse::swt::dnd { class DNDEvent; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DNDEvent> = ::org_eclipse_swt_dnd / "DNDEvent";
namespace org::eclipse::swt::dnd { class DNDListener; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DNDListener> = ::org_eclipse_swt_dnd / "DNDListener";
namespace org::eclipse::swt::dnd { class DragSource; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSource> = ::org_eclipse_swt_dnd / "DragSource";
namespace org::eclipse::swt::dnd { class DragSource$1; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSource$1> = ::org_eclipse_swt_dnd / "DragSource$1";
namespace org::eclipse::swt::dnd { class DragSource$2; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSource$2> = ::org_eclipse_swt_dnd / "DragSource$2";
namespace org::eclipse::swt::dnd { class DragSourceAdapter; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSourceAdapter> = ::org_eclipse_swt_dnd / "DragSourceAdapter";
namespace org::eclipse::swt::dnd { class DragSourceEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSourceEffect> = ::org_eclipse_swt_dnd / "DragSourceEffect";
namespace org::eclipse::swt::dnd { class DragSourceEvent; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSourceEvent> = ::org_eclipse_swt_dnd / "DragSourceEvent";
namespace org::eclipse::swt::dnd { class DragSourceListener; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DragSourceListener> = ::org_eclipse_swt_dnd / "DragSourceListener";
namespace org::eclipse::swt::dnd { class DropTarget; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTarget> = ::org_eclipse_swt_dnd / "DropTarget";
namespace org::eclipse::swt::dnd { class DropTarget$1; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTarget$1> = ::org_eclipse_swt_dnd / "DropTarget$1";
namespace org::eclipse::swt::dnd { class DropTarget$2; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTarget$2> = ::org_eclipse_swt_dnd / "DropTarget$2";
namespace org::eclipse::swt::dnd { class DropTarget$3; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTarget$3> = ::org_eclipse_swt_dnd / "DropTarget$3";
namespace org::eclipse::swt::dnd { class DropTargetAdapter; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTargetAdapter> = ::org_eclipse_swt_dnd / "DropTargetAdapter";
namespace org::eclipse::swt::dnd { class DropTargetEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTargetEffect> = ::org_eclipse_swt_dnd / "DropTargetEffect";
namespace org::eclipse::swt::dnd { class DropTargetEvent; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTargetEvent> = ::org_eclipse_swt_dnd / "DropTargetEvent";
namespace org::eclipse::swt::dnd { class DropTargetListener; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::DropTargetListener> = ::org_eclipse_swt_dnd / "DropTargetListener";
namespace org::eclipse::swt::dnd { class FileTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::FileTransfer> = ::org_eclipse_swt_dnd / "FileTransfer";
namespace org::eclipse::swt::dnd { class HTMLTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::HTMLTransfer> = ::org_eclipse_swt_dnd / "HTMLTransfer";
namespace org::eclipse::swt::dnd { class ImageTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::ImageTransfer> = ::org_eclipse_swt_dnd / "ImageTransfer";
namespace org::eclipse::swt::dnd { class RTFTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::RTFTransfer> = ::org_eclipse_swt_dnd / "RTFTransfer";
namespace org::eclipse::swt::dnd { class TableDragSourceEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TableDragSourceEffect> = ::org_eclipse_swt_dnd / "TableDragSourceEffect";
namespace org::eclipse::swt::dnd { class TableDropTargetEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TableDropTargetEffect> = ::org_eclipse_swt_dnd / "TableDropTargetEffect";
namespace org::eclipse::swt::dnd { class TextTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TextTransfer> = ::org_eclipse_swt_dnd / "TextTransfer";
namespace org::eclipse::swt::dnd { class Transfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::Transfer> = ::org_eclipse_swt_dnd / "Transfer";
namespace org::eclipse::swt::dnd { class TransferData; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TransferData> = ::org_eclipse_swt_dnd / "TransferData";
namespace org::eclipse::swt::dnd { class TreeDragSourceEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TreeDragSourceEffect> = ::org_eclipse_swt_dnd / "TreeDragSourceEffect";
namespace org::eclipse::swt::dnd { class TreeDropTargetEffect; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::TreeDropTargetEffect> = ::org_eclipse_swt_dnd / "TreeDropTargetEffect";
namespace org::eclipse::swt::dnd { class URLTransfer; }
template<> constexpr auto signature<::org::eclipse::swt::dnd::URLTransfer> = ::org_eclipse_swt_dnd / "URLTransfer";

#endif
