#ifndef org_omg_CORBA_portable_ApplicationException_HPP
#define org_omg_CORBA_portable_ApplicationException_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::omg::CORBA::portable::ApplicationException : public jObject<::org::omg::CORBA::portable::ApplicationException, ::java::lang::Exception> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_omg_CORBA_portable / "ApplicationException";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::org::omg::CORBA::portable::InputStream)>(), //
		jMethod<::java::lang::String()>("getId"), //
		jMethod<::org::omg::CORBA::portable::InputStream()>("getInputStream"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getId(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getId")] != -1);
		return call<R>("getId", forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::portable::InputStream, typename... Args>
	auto getInputStream(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getInputStream")] != -1);
		return call<R>("getInputStream", forward<Args>(args)...);
	}

};

#endif
