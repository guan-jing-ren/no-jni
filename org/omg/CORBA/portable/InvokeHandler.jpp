#ifndef org_omg_CORBA_portable_InvokeHandler_HPP
#define org_omg_CORBA_portable_InvokeHandler_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::omg::CORBA::portable::InvokeHandler : public jObject<::org::omg::CORBA::portable::InvokeHandler, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_omg_CORBA_portable / "InvokeHandler";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::org::omg::CORBA::portable::OutputStream(::java::lang::String, ::org::omg::CORBA::portable::InputStream, ::org::omg::CORBA::portable::ResponseHandler)>("_invoke"), //
	};

	template<typename R = ::org::omg::CORBA::portable::OutputStream, typename... Args>
	auto _invoke(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("_invoke")] != -1);
		return call<R>("_invoke", std::forward<Args>(args)...);
	}

};

#endif
