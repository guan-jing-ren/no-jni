#ifndef org_omg_CORBA_portable_ValueInputStream_HPP
#define org_omg_CORBA_portable_ValueInputStream_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::omg::CORBA::portable::ValueInputStream : public jObject<::org::omg::CORBA::portable::ValueInputStream, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_omg_CORBA_portable / "ValueInputStream";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid()>("end_value"), //
		jMethod<::jvoid()>("start_value"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto end_value(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("end_value")] != -1);
		return call<R>("end_value", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto start_value(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("start_value")] != -1);
		return call<R>("start_value", std::forward<Args>(args)...);
	}

};

#endif
