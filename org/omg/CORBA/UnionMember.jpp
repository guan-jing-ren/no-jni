#ifndef org_omg_CORBA_UnionMember_HPP
#define org_omg_CORBA_UnionMember_HPP

#include "../../../jfwd_decl.hpp"

class ::org::omg::CORBA::UnionMember : public jObject<::org::omg::CORBA::UnionMember, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_omg_CORBA / "UnionMember";

	constexpr static Enume field_signatures{
		jField<::org::omg::CORBA::Any>("label"), //
		jField<::java::lang::String>("name"), //
		jField<::org::omg::CORBA::TypeCode>("type"), //
		jField<::org::omg::CORBA::IDLType>("type_def"), //
	};

	template<typename F = ::org::omg::CORBA::Any>
	auto label() const {
		static_assert(field_signatures[jField<F>("label")] != -1);
		return at<F>("label");
	}

	template<typename F = ::java::lang::String>
	auto name() const {
		static_assert(field_signatures[jField<F>("name")] != -1);
		return at<F>("name");
	}

	template<typename F = ::org::omg::CORBA::TypeCode>
	auto type() const {
		static_assert(field_signatures[jField<F>("type")] != -1);
		return at<F>("type");
	}

	template<typename F = ::org::omg::CORBA::IDLType>
	auto type_def() const {
		static_assert(field_signatures[jField<F>("type_def")] != -1);
		return at<F>("type_def");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jConstructor<::jvoid(::java::lang::String, ::org::omg::CORBA::Any, ::org::omg::CORBA::TypeCode, ::org::omg::CORBA::IDLType)>(), //
	};

};

#endif
