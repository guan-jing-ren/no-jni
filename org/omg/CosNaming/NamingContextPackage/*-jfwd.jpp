#ifndef org_omg_CosNaming_NamingContextPackage_JPP
#define org_omg_CosNaming_NamingContextPackage_JPP

namespace org::omg::CosNaming::NamingContextPackage { class AlreadyBound; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::AlreadyBound> = ::org_omg_CosNaming_NamingContextPackage / "AlreadyBound";
namespace org::omg::CosNaming::NamingContextPackage { class AlreadyBoundHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::AlreadyBoundHelper> = ::org_omg_CosNaming_NamingContextPackage / "AlreadyBoundHelper";
namespace org::omg::CosNaming::NamingContextPackage { class AlreadyBoundHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::AlreadyBoundHolder> = ::org_omg_CosNaming_NamingContextPackage / "AlreadyBoundHolder";
namespace org::omg::CosNaming::NamingContextPackage { class CannotProceed; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::CannotProceed> = ::org_omg_CosNaming_NamingContextPackage / "CannotProceed";
namespace org::omg::CosNaming::NamingContextPackage { class CannotProceedHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::CannotProceedHelper> = ::org_omg_CosNaming_NamingContextPackage / "CannotProceedHelper";
namespace org::omg::CosNaming::NamingContextPackage { class CannotProceedHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::CannotProceedHolder> = ::org_omg_CosNaming_NamingContextPackage / "CannotProceedHolder";
namespace org::omg::CosNaming::NamingContextPackage { class InvalidName; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::InvalidName> = ::org_omg_CosNaming_NamingContextPackage / "InvalidName";
namespace org::omg::CosNaming::NamingContextPackage { class InvalidNameHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::InvalidNameHelper> = ::org_omg_CosNaming_NamingContextPackage / "InvalidNameHelper";
namespace org::omg::CosNaming::NamingContextPackage { class InvalidNameHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::InvalidNameHolder> = ::org_omg_CosNaming_NamingContextPackage / "InvalidNameHolder";
namespace org::omg::CosNaming::NamingContextPackage { class NotEmpty; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotEmpty> = ::org_omg_CosNaming_NamingContextPackage / "NotEmpty";
namespace org::omg::CosNaming::NamingContextPackage { class NotEmptyHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotEmptyHelper> = ::org_omg_CosNaming_NamingContextPackage / "NotEmptyHelper";
namespace org::omg::CosNaming::NamingContextPackage { class NotEmptyHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotEmptyHolder> = ::org_omg_CosNaming_NamingContextPackage / "NotEmptyHolder";
namespace org::omg::CosNaming::NamingContextPackage { class NotFound; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFound> = ::org_omg_CosNaming_NamingContextPackage / "NotFound";
namespace org::omg::CosNaming::NamingContextPackage { class NotFoundHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFoundHelper> = ::org_omg_CosNaming_NamingContextPackage / "NotFoundHelper";
namespace org::omg::CosNaming::NamingContextPackage { class NotFoundHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFoundHolder> = ::org_omg_CosNaming_NamingContextPackage / "NotFoundHolder";
namespace org::omg::CosNaming::NamingContextPackage { class NotFoundReason; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFoundReason> = ::org_omg_CosNaming_NamingContextPackage / "NotFoundReason";
namespace org::omg::CosNaming::NamingContextPackage { class NotFoundReasonHelper; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFoundReasonHelper> = ::org_omg_CosNaming_NamingContextPackage / "NotFoundReasonHelper";
namespace org::omg::CosNaming::NamingContextPackage { class NotFoundReasonHolder; }
template<> constexpr auto signature<::org::omg::CosNaming::NamingContextPackage::NotFoundReasonHolder> = ::org_omg_CosNaming_NamingContextPackage / "NotFoundReasonHolder";

#endif
