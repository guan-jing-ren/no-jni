#ifndef org_omg_PortableServer_Current_HPP
#define org_omg_PortableServer_Current_HPP

#include "../../../jfwd_decl.hpp"

class ::org::omg::PortableServer::Current : public jObject<::org::omg::PortableServer::Current, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_omg_PortableServer / "Current";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::org::omg::PortableServer::POA()>("get_POA"), //
		jMethod<::jbyte *()>("get_object_id"), //
	};

	template<typename R = ::org::omg::PortableServer::POA, typename... Args>
	auto get_POA(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("get_POA")] != -1);
		return call<R>("get_POA", std::forward<Args>(args)...);
	}

	template<typename R = ::jbyte *, typename... Args>
	auto get_object_id(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("get_object_id")] != -1);
		return call<R>("get_object_id", std::forward<Args>(args)...);
	}

};

#endif
