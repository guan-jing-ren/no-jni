#ifndef org_omg_IOP_JPP
#define org_omg_IOP_JPP

namespace org::omg::IOP { class CodeSets; }
template<> constexpr auto signature<::org::omg::IOP::CodeSets> = ::org_omg_IOP / "CodeSets";
namespace org::omg::IOP { class Codec; }
template<> constexpr auto signature<::org::omg::IOP::Codec> = ::org_omg_IOP / "Codec";
namespace org::omg::IOP { class CodecFactory; }
template<> constexpr auto signature<::org::omg::IOP::CodecFactory> = ::org_omg_IOP / "CodecFactory";
namespace org::omg::IOP { class CodecFactoryHelper; }
template<> constexpr auto signature<::org::omg::IOP::CodecFactoryHelper> = ::org_omg_IOP / "CodecFactoryHelper";
namespace org::omg::IOP { class CodecFactoryOperations; }
template<> constexpr auto signature<::org::omg::IOP::CodecFactoryOperations> = ::org_omg_IOP / "CodecFactoryOperations";
namespace org::omg::IOP { class CodecOperations; }
template<> constexpr auto signature<::org::omg::IOP::CodecOperations> = ::org_omg_IOP / "CodecOperations";
namespace org::omg::IOP { class ComponentIdHelper; }
template<> constexpr auto signature<::org::omg::IOP::ComponentIdHelper> = ::org_omg_IOP / "ComponentIdHelper";
namespace org::omg::IOP { class ENCODING_CDR_ENCAPS; }
template<> constexpr auto signature<::org::omg::IOP::ENCODING_CDR_ENCAPS> = ::org_omg_IOP / "ENCODING_CDR_ENCAPS";
namespace org::omg::IOP { class Encoding; }
template<> constexpr auto signature<::org::omg::IOP::Encoding> = ::org_omg_IOP / "Encoding";
namespace org::omg::IOP { class ExceptionDetailMessage; }
template<> constexpr auto signature<::org::omg::IOP::ExceptionDetailMessage> = ::org_omg_IOP / "ExceptionDetailMessage";
namespace org::omg::IOP { class IOR; }
template<> constexpr auto signature<::org::omg::IOP::IOR> = ::org_omg_IOP / "IOR";
namespace org::omg::IOP { class IORHelper; }
template<> constexpr auto signature<::org::omg::IOP::IORHelper> = ::org_omg_IOP / "IORHelper";
namespace org::omg::IOP { class IORHolder; }
template<> constexpr auto signature<::org::omg::IOP::IORHolder> = ::org_omg_IOP / "IORHolder";
namespace org::omg::IOP { class MultipleComponentProfileHelper; }
template<> constexpr auto signature<::org::omg::IOP::MultipleComponentProfileHelper> = ::org_omg_IOP / "MultipleComponentProfileHelper";
namespace org::omg::IOP { class MultipleComponentProfileHolder; }
template<> constexpr auto signature<::org::omg::IOP::MultipleComponentProfileHolder> = ::org_omg_IOP / "MultipleComponentProfileHolder";
namespace org::omg::IOP { class ProfileIdHelper; }
template<> constexpr auto signature<::org::omg::IOP::ProfileIdHelper> = ::org_omg_IOP / "ProfileIdHelper";
namespace org::omg::IOP { class RMICustomMaxStreamFormat; }
template<> constexpr auto signature<::org::omg::IOP::RMICustomMaxStreamFormat> = ::org_omg_IOP / "RMICustomMaxStreamFormat";
namespace org::omg::IOP { class ServiceContext; }
template<> constexpr auto signature<::org::omg::IOP::ServiceContext> = ::org_omg_IOP / "ServiceContext";
namespace org::omg::IOP { class ServiceContextHelper; }
template<> constexpr auto signature<::org::omg::IOP::ServiceContextHelper> = ::org_omg_IOP / "ServiceContextHelper";
namespace org::omg::IOP { class ServiceContextHolder; }
template<> constexpr auto signature<::org::omg::IOP::ServiceContextHolder> = ::org_omg_IOP / "ServiceContextHolder";
namespace org::omg::IOP { class ServiceContextListHelper; }
template<> constexpr auto signature<::org::omg::IOP::ServiceContextListHelper> = ::org_omg_IOP / "ServiceContextListHelper";
namespace org::omg::IOP { class ServiceContextListHolder; }
template<> constexpr auto signature<::org::omg::IOP::ServiceContextListHolder> = ::org_omg_IOP / "ServiceContextListHolder";
namespace org::omg::IOP { class ServiceIdHelper; }
template<> constexpr auto signature<::org::omg::IOP::ServiceIdHelper> = ::org_omg_IOP / "ServiceIdHelper";
namespace org::omg::IOP { class TAG_ALTERNATE_IIOP_ADDRESS; }
template<> constexpr auto signature<::org::omg::IOP::TAG_ALTERNATE_IIOP_ADDRESS> = ::org_omg_IOP / "TAG_ALTERNATE_IIOP_ADDRESS";
namespace org::omg::IOP { class TAG_CODE_SETS; }
template<> constexpr auto signature<::org::omg::IOP::TAG_CODE_SETS> = ::org_omg_IOP / "TAG_CODE_SETS";
namespace org::omg::IOP { class TAG_INTERNET_IOP; }
template<> constexpr auto signature<::org::omg::IOP::TAG_INTERNET_IOP> = ::org_omg_IOP / "TAG_INTERNET_IOP";
namespace org::omg::IOP { class TAG_JAVA_CODEBASE; }
template<> constexpr auto signature<::org::omg::IOP::TAG_JAVA_CODEBASE> = ::org_omg_IOP / "TAG_JAVA_CODEBASE";
namespace org::omg::IOP { class TAG_MULTIPLE_COMPONENTS; }
template<> constexpr auto signature<::org::omg::IOP::TAG_MULTIPLE_COMPONENTS> = ::org_omg_IOP / "TAG_MULTIPLE_COMPONENTS";
namespace org::omg::IOP { class TAG_ORB_TYPE; }
template<> constexpr auto signature<::org::omg::IOP::TAG_ORB_TYPE> = ::org_omg_IOP / "TAG_ORB_TYPE";
namespace org::omg::IOP { class TAG_POLICIES; }
template<> constexpr auto signature<::org::omg::IOP::TAG_POLICIES> = ::org_omg_IOP / "TAG_POLICIES";
namespace org::omg::IOP { class TAG_RMI_CUSTOM_MAX_STREAM_FORMAT; }
template<> constexpr auto signature<::org::omg::IOP::TAG_RMI_CUSTOM_MAX_STREAM_FORMAT> = ::org_omg_IOP / "TAG_RMI_CUSTOM_MAX_STREAM_FORMAT";
namespace org::omg::IOP { class TaggedComponent; }
template<> constexpr auto signature<::org::omg::IOP::TaggedComponent> = ::org_omg_IOP / "TaggedComponent";
namespace org::omg::IOP { class TaggedComponentHelper; }
template<> constexpr auto signature<::org::omg::IOP::TaggedComponentHelper> = ::org_omg_IOP / "TaggedComponentHelper";
namespace org::omg::IOP { class TaggedComponentHolder; }
template<> constexpr auto signature<::org::omg::IOP::TaggedComponentHolder> = ::org_omg_IOP / "TaggedComponentHolder";
namespace org::omg::IOP { class TaggedProfile; }
template<> constexpr auto signature<::org::omg::IOP::TaggedProfile> = ::org_omg_IOP / "TaggedProfile";
namespace org::omg::IOP { class TaggedProfileHelper; }
template<> constexpr auto signature<::org::omg::IOP::TaggedProfileHelper> = ::org_omg_IOP / "TaggedProfileHelper";
namespace org::omg::IOP { class TaggedProfileHolder; }
template<> constexpr auto signature<::org::omg::IOP::TaggedProfileHolder> = ::org_omg_IOP / "TaggedProfileHolder";
namespace org::omg::IOP { class TransactionService; }
template<> constexpr auto signature<::org::omg::IOP::TransactionService> = ::org_omg_IOP / "TransactionService";

#endif
