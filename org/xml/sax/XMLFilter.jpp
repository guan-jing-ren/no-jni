#ifndef org_xml_sax_XMLFilter_HPP
#define org_xml_sax_XMLFilter_HPP

#include "../../../jfwd_decl.hpp"

class ::org::xml::sax::XMLFilter : public jObject<::org::xml::sax::XMLFilter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_xml_sax / "XMLFilter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::org::xml::sax::XMLReader()>("getParent"), //
		jMethod<::jvoid(::org::xml::sax::XMLReader)>("setParent"), //
	};

	template<typename R = ::org::xml::sax::XMLReader, typename... Args>
	auto getParent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getParent")] != -1);
		return call<R>("getParent", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setParent(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setParent")] != -1);
		return call<R>("setParent", std::forward<Args>(args)...);
	}

};

#endif
