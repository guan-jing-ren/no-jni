#ifndef org_w3c_dom_stylesheets_MediaList_HPP
#define org_w3c_dom_stylesheets_MediaList_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::w3c::dom::stylesheets::MediaList : public jObject<::org::w3c::dom::stylesheets::MediaList, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_w3c_dom_stylesheets / "MediaList";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::lang::String)>("appendMedium"), //
		jMethod<::jvoid(::java::lang::String)>("deleteMedium"), //
		jMethod<::jint()>("getLength"), //
		jMethod<::java::lang::String()>("getMediaText"), //
		jMethod<::java::lang::String(::jint)>("item"), //
		jMethod<::jvoid(::java::lang::String)>("setMediaText"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto appendMedium(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("appendMedium")] != -1);
		return call<R>("appendMedium", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto deleteMedium(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("deleteMedium")] != -1);
		return call<R>("deleteMedium", forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getLength(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getLength")] != -1);
		return call<R>("getLength", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getMediaText(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getMediaText")] != -1);
		return call<R>("getMediaText", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto item(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("item")] != -1);
		return call<R>("item", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setMediaText(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("setMediaText")] != -1);
		return call<R>("setMediaText", forward<Args>(args)...);
	}

};

#endif
