#ifndef org_w3c_dom_html_HTMLFrameSetElement_HPP
#define org_w3c_dom_html_HTMLFrameSetElement_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::w3c::dom::html::HTMLFrameSetElement : public jObject<::org::w3c::dom::html::HTMLFrameSetElement, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_w3c_dom_html / "HTMLFrameSetElement";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::String()>("getCols"), //
		jMethod<::java::lang::String()>("getRows"), //
		jMethod<::jvoid(::java::lang::String)>("setCols"), //
		jMethod<::jvoid(::java::lang::String)>("setRows"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getCols(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getCols")] != -1);
		return call<R>("getCols", forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getRows(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("getRows")] != -1);
		return call<R>("getRows", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setCols(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("setCols")] != -1);
		return call<R>("setCols", forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setRows(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(decay_t<Args>...)>("setRows")] != -1);
		return call<R>("setRows", forward<Args>(args)...);
	}

};

#endif
