#ifndef org_w3c_dom_html_HTMLDListElement_HPP
#define org_w3c_dom_html_HTMLDListElement_HPP

#include "../../../../jfwd_decl.hpp"

class ::org::w3c::dom::html::HTMLDListElement : public jObject<::org::w3c::dom::html::HTMLDListElement, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::org_w3c_dom_html / "HTMLDListElement";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jboolean()>("getCompact"), //
		jMethod<::jvoid(::jboolean)>("setCompact"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto getCompact(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCompact")] != -1);
		return call<R>("getCompact", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setCompact(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setCompact")] != -1);
		return call<R>("setCompact", std::forward<Args>(args)...);
	}

};

#endif
