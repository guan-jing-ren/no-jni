#ifndef com_sun_jndi_ldap_sasl_LdapSasl_HPP
#define com_sun_jndi_ldap_sasl_LdapSasl_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::jndi::ldap::sasl::LdapSasl : public jObject<::com::sun::jndi::ldap::sasl::LdapSasl, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_jndi_ldap_sasl / "LdapSasl";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::com::sun::jndi::ldap::LdapResult(::com::sun::jndi::ldap::LdapClient, ::com::sun::jndi::ldap::Connection, ::java::lang::String, ::java::lang::String, ::java::lang::Object, ::java::lang::String, ::java::util::Hashtable, ::javax::naming::ldap::Control *)>("saslBind"), //
	};

	template<typename R = ::com::sun::jndi::ldap::LdapResult, typename... Args>
	static auto saslBind(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("saslBind")] != -1);
		return scall<R>("saslBind", std::forward<Args>(args)...);
	}

};

#endif
