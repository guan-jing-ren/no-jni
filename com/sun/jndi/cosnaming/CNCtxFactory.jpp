#ifndef com_sun_jndi_cosnaming_CNCtxFactory_HPP
#define com_sun_jndi_cosnaming_CNCtxFactory_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::jndi::cosnaming::CNCtxFactory : public jObject<::com::sun::jndi::cosnaming::CNCtxFactory, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_jndi_cosnaming / "CNCtxFactory";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::naming::Context(::java::util::Hashtable)>("getInitialContext"), //
	};

	template<typename R = ::javax::naming::Context, typename... Args>
	auto getInitialContext(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInitialContext")] != -1);
		return call<R>("getInitialContext", std::forward<Args>(args)...);
	}

};

#endif
