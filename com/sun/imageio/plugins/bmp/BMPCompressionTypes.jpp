#ifndef com_sun_imageio_plugins_bmp_BMPCompressionTypes_HPP
#define com_sun_imageio_plugins_bmp_BMPCompressionTypes_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::imageio::plugins::bmp::BMPCompressionTypes : public jObject<::com::sun::imageio::plugins::bmp::BMPCompressionTypes, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_imageio_plugins_bmp / "BMPCompressionTypes";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::lang::String *()>("getCompressionTypes"), //
	};

	template<typename R = ::java::lang::String *, typename... Args>
	static auto getCompressionTypes(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getCompressionTypes")] != -1);
		return scall<R>("getCompressionTypes", std::forward<Args>(args)...);
	}

};

#endif
