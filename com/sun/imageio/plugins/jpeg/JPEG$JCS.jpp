#ifndef com_sun_imageio_plugins_jpeg_JPEG$JCS_HPP
#define com_sun_imageio_plugins_jpeg_JPEG$JCS_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::imageio::plugins::jpeg::JPEG$JCS : public jObject<::com::sun::imageio::plugins::jpeg::JPEG$JCS, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_imageio_plugins_jpeg / "JPEG$JCS";

	constexpr static Enume field_signatures{
		jField<::java::awt::color::ColorSpace>("sRGB"), //
	};

	template<typename F = ::java::awt::color::ColorSpace>
	static auto sRGB() {
		static_assert(field_signatures[jField<F>("sRGB")] != -1);
		return sat<F>("sRGB");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::awt::color::ColorSpace()>("getYCC"), //
	};

	template<typename R = ::java::awt::color::ColorSpace, typename... Args>
	static auto getYCC(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getYCC")] != -1);
		return scall<R>("getYCC", std::forward<Args>(args)...);
	}

};

#endif
