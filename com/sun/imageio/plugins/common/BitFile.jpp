#ifndef com_sun_imageio_plugins_common_BitFile_HPP
#define com_sun_imageio_plugins_common_BitFile_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::imageio::plugins::common::BitFile : public jObject<::com::sun::imageio::plugins::common::BitFile, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_imageio_plugins_common / "BitFile";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::javax::imageio::stream::ImageOutputStream, ::jboolean)>(), //
		jMethod<::jvoid()>("flush"), //
		jMethod<::jvoid(::jint, ::jint)>("writeBits"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto flush(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("flush")] != -1);
		return call<R>("flush", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto writeBits(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("writeBits")] != -1);
		return call<R>("writeBits", std::forward<Args>(args)...);
	}

};

#endif
