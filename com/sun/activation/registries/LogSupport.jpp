#ifndef com_sun_activation_registries_LogSupport_HPP
#define com_sun_activation_registries_LogSupport_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::activation::registries::LogSupport : public jObject<::com::sun::activation::registries::LogSupport, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_activation_registries / "LogSupport";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jboolean()>("isLoggable"), //
		jMethod<::jvoid(::java::lang::String)>("log"), //
		jMethod<::jvoid(::java::lang::String, ::java::lang::Throwable)>("log"), //
	};

	template<typename R = ::jboolean, typename... Args>
	static auto isLoggable(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isLoggable")] != -1);
		return scall<R>("isLoggable", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto log(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("log")] != -1);
		return scall<R>("log", std::forward<Args>(args)...);
	}

};

#endif
