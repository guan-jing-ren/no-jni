#ifndef com_sun_java_swing_plaf_motif_MotifMenuUI$MotifChangeHandler_HPP
#define com_sun_java_swing_plaf_motif_MotifMenuUI$MotifChangeHandler_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::java::swing::plaf::motif::MotifMenuUI$MotifChangeHandler : public jObject<::com::sun::java::swing::plaf::motif::MotifMenuUI$MotifChangeHandler, ::javax::swing::plaf::basic::BasicMenuUI$ChangeHandler> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_java_swing_plaf_motif / "MotifMenuUI$MotifChangeHandler";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::com::sun::java::swing::plaf::motif::MotifMenuUI, ::javax::swing::JMenu, ::com::sun::java::swing::plaf::motif::MotifMenuUI)>(), //
		jMethod<::jvoid(::javax::swing::event::ChangeEvent)>("stateChanged"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto stateChanged(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("stateChanged")] != -1);
		return call<R>("stateChanged", std::forward<Args>(args)...);
	}

};

#endif
