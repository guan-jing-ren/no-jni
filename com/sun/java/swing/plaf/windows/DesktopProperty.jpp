#ifndef com_sun_java_swing_plaf_windows_DesktopProperty_HPP
#define com_sun_java_swing_plaf_windows_DesktopProperty_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::java::swing::plaf::windows::DesktopProperty : public jObject<::com::sun::java::swing::plaf::windows::DesktopProperty, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_java_swing_plaf_windows / "DesktopProperty";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::java::lang::Object)>(), //
		jMethod<::java::lang::Object(::javax::swing::UIDefaults)>("createValue"), //
		jMethod<::jvoid()>("invalidate"), //
		jMethod<::jvoid(::javax::swing::LookAndFeel)>("invalidate"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto createValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("createValue")] != -1);
		return call<R>("createValue", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto invalidate(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("invalidate")] != -1);
		return call<R>("invalidate", std::forward<Args>(args)...);
	}

};

#endif
