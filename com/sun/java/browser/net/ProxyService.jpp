#ifndef com_sun_java_browser_net_ProxyService_HPP
#define com_sun_java_browser_net_ProxyService_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::java::browser::net::ProxyService : public jObject<::com::sun::java::browser::net::ProxyService, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_java_browser_net / "ProxyService";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::com::sun::java::browser::net::ProxyInfo *(::java::net::URL)>("getProxyInfo"), //
		jMethod<::jvoid(::com::sun::java::browser::net::ProxyServiceProvider)>("setProvider"), //
	};

	template<typename R = ::com::sun::java::browser::net::ProxyInfo *, typename... Args>
	static auto getProxyInfo(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getProxyInfo")] != -1);
		return scall<R>("getProxyInfo", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	static auto setProvider(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setProvider")] != -1);
		return scall<R>("setProvider", std::forward<Args>(args)...);
	}

};

#endif
