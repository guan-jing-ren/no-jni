#ifndef com_sun_java_util_jar_pack_ConstantPool$LiteralEntry_HPP
#define com_sun_java_util_jar_pack_ConstantPool$LiteralEntry_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::java::util::jar::pack::ConstantPool$LiteralEntry : public jObject<::com::sun::java::util::jar::pack::ConstantPool$LiteralEntry, ::com::sun::java::util::jar::pack::ConstantPool$Entry> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_java_util_jar_pack / "ConstantPool$LiteralEntry";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Comparable()>("literalValue"), //
	};

	template<typename R = ::java::lang::Comparable, typename... Args>
	auto literalValue(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("literalValue")] != -1);
		return call<R>("literalValue", std::forward<Args>(args)...);
	}

};

#endif
