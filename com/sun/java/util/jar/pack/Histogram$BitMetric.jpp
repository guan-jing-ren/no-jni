#ifndef com_sun_java_util_jar_pack_Histogram$BitMetric_HPP
#define com_sun_java_util_jar_pack_Histogram$BitMetric_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::java::util::jar::pack::Histogram$BitMetric : public jObject<::com::sun::java::util::jar::pack::Histogram$BitMetric, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_java_util_jar_pack / "Histogram$BitMetric";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jdouble(::jint)>("getBitLength"), //
	};

	template<typename R = ::jdouble, typename... Args>
	auto getBitLength(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getBitLength")] != -1);
		return call<R>("getBitLength", std::forward<Args>(args)...);
	}

};

#endif
