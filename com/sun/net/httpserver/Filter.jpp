#ifndef com_sun_net_httpserver_Filter_HPP
#define com_sun_net_httpserver_Filter_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::net::httpserver::Filter : public jObject<::com::sun::net::httpserver::Filter, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_net_httpserver / "Filter";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::String()>("description"), //
		jMethod<::jvoid(::com::sun::net::httpserver::HttpExchange, ::com::sun::net::httpserver::Filter$Chain)>("doFilter"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto description(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("description")] != -1);
		return call<R>("description", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto doFilter(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("doFilter")] != -1);
		return call<R>("doFilter", std::forward<Args>(args)...);
	}

};

#endif
