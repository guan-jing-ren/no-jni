#ifndef com_sun_media_sound_ModelInstrumentComparator_HPP
#define com_sun_media_sound_ModelInstrumentComparator_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::media::sound::ModelInstrumentComparator : public jObject<::com::sun::media::sound::ModelInstrumentComparator, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_media_sound / "ModelInstrumentComparator";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jint(::java::lang::Object, ::java::lang::Object)>("compare"), //
		jMethod<::jint(::javax::sound::midi::Instrument, ::javax::sound::midi::Instrument)>("compare"), //
	};

	template<typename R = ::jint, typename... Args>
	auto compare(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("compare")] != -1);
		return call<R>("compare", std::forward<Args>(args)...);
	}

};

#endif
