#ifndef com_sun_media_sound_FFT_HPP
#define com_sun_media_sound_FFT_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::media::sound::FFT : public jObject<::com::sun::media::sound::FFT, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_media_sound / "FFT";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint, ::jint)>(), //
		jMethod<::jvoid(::jdouble *)>("transform"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto transform(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("transform")] != -1);
		return call<R>("transform", std::forward<Args>(args)...);
	}

};

#endif
