#ifndef com_sun_media_sound_ModelPatch_HPP
#define com_sun_media_sound_ModelPatch_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::media::sound::ModelPatch : public jObject<::com::sun::media::sound::ModelPatch, ::javax::sound::midi::Patch> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_media_sound / "ModelPatch";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::jint, ::jint)>(), //
		jConstructor<::jvoid(::jint, ::jint, ::jboolean)>(), //
		jMethod<::jboolean()>("isPercussion"), //
	};

	template<typename R = ::jboolean, typename... Args>
	auto isPercussion(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isPercussion")] != -1);
		return call<R>("isPercussion", std::forward<Args>(args)...);
	}

};

#endif
