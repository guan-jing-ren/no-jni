#ifndef com_sun_corba_se_spi_copyobject_CopyobjectDefaults_HPP
#define com_sun_corba_se_spi_copyobject_CopyobjectDefaults_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::spi::copyobject::CopyobjectDefaults : public jObject<::com::sun::corba::se::spi::copyobject::CopyobjectDefaults, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_spi_copyobject / "CopyobjectDefaults";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::com::sun::corba::se::spi::copyobject::ObjectCopierFactory()>("getReferenceObjectCopierFactory"), //
		jMethod<::com::sun::corba::se::spi::copyobject::ObjectCopierFactory(::com::sun::corba::se::spi::copyobject::ObjectCopierFactory, ::com::sun::corba::se::spi::copyobject::ObjectCopierFactory)>("makeFallbackObjectCopierFactory"), //
		jMethod<::com::sun::corba::se::spi::copyobject::ObjectCopierFactory(::com::sun::corba::se::spi::orb::ORB)>("makeJavaStreamObjectCopierFactory"), //
		jMethod<::com::sun::corba::se::spi::copyobject::ObjectCopierFactory(::com::sun::corba::se::spi::orb::ORB)>("makeORBStreamObjectCopierFactory"), //
	};

	template<typename R = ::com::sun::corba::se::spi::copyobject::ObjectCopierFactory, typename... Args>
	static auto getReferenceObjectCopierFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getReferenceObjectCopierFactory")] != -1);
		return scall<R>("getReferenceObjectCopierFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::copyobject::ObjectCopierFactory, typename... Args>
	static auto makeFallbackObjectCopierFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeFallbackObjectCopierFactory")] != -1);
		return scall<R>("makeFallbackObjectCopierFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::copyobject::ObjectCopierFactory, typename... Args>
	static auto makeJavaStreamObjectCopierFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeJavaStreamObjectCopierFactory")] != -1);
		return scall<R>("makeJavaStreamObjectCopierFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::copyobject::ObjectCopierFactory, typename... Args>
	static auto makeORBStreamObjectCopierFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeORBStreamObjectCopierFactory")] != -1);
		return scall<R>("makeORBStreamObjectCopierFactory", std::forward<Args>(args)...);
	}

};

#endif
