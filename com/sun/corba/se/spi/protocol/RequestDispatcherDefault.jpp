#ifndef com_sun_corba_se_spi_protocol_RequestDispatcherDefault_HPP
#define com_sun_corba_se_spi_protocol_RequestDispatcherDefault_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::spi::protocol::RequestDispatcherDefault : public jObject<::com::sun::corba::se::spi::protocol::RequestDispatcherDefault, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_spi_protocol / "RequestDispatcherDefault";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher(::com::sun::corba::se::spi::orb::ORB)>("makeBootstrapServerRequestDispatcher"), //
		jMethod<::com::sun::corba::se::pept::protocol::ClientRequestDispatcher()>("makeClientRequestDispatcher"), //
		jMethod<::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory(::com::sun::corba::se::spi::orb::ORB)>("makeFullServantCacheLocalClientRequestDispatcherFactory"), //
		jMethod<::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher(::com::sun::corba::se::spi::orb::ORB)>("makeINSServerRequestDispatcher"), //
		jMethod<::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory(::com::sun::corba::se::spi::orb::ORB)>("makeInfoOnlyServantCacheLocalClientRequestDispatcherFactory"), //
		jMethod<::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory(::com::sun::corba::se::spi::orb::ORB)>("makeJIDLLocalClientRequestDispatcherFactory"), //
		jMethod<::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory(::com::sun::corba::se::spi::orb::ORB)>("makeMinimalServantCacheLocalClientRequestDispatcherFactory"), //
		jMethod<::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory(::com::sun::corba::se::spi::orb::ORB)>("makePOALocalClientRequestDispatcherFactory"), //
		jMethod<::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher(::com::sun::corba::se::spi::orb::ORB)>("makeServerRequestDispatcher"), //
	};

	template<typename R = ::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher, typename... Args>
	static auto makeBootstrapServerRequestDispatcher(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeBootstrapServerRequestDispatcher")] != -1);
		return scall<R>("makeBootstrapServerRequestDispatcher", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::pept::protocol::ClientRequestDispatcher, typename... Args>
	static auto makeClientRequestDispatcher(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeClientRequestDispatcher")] != -1);
		return scall<R>("makeClientRequestDispatcher", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory, typename... Args>
	static auto makeFullServantCacheLocalClientRequestDispatcherFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeFullServantCacheLocalClientRequestDispatcherFactory")] != -1);
		return scall<R>("makeFullServantCacheLocalClientRequestDispatcherFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher, typename... Args>
	static auto makeINSServerRequestDispatcher(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeINSServerRequestDispatcher")] != -1);
		return scall<R>("makeINSServerRequestDispatcher", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory, typename... Args>
	static auto makeInfoOnlyServantCacheLocalClientRequestDispatcherFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeInfoOnlyServantCacheLocalClientRequestDispatcherFactory")] != -1);
		return scall<R>("makeInfoOnlyServantCacheLocalClientRequestDispatcherFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory, typename... Args>
	static auto makeJIDLLocalClientRequestDispatcherFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeJIDLLocalClientRequestDispatcherFactory")] != -1);
		return scall<R>("makeJIDLLocalClientRequestDispatcherFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory, typename... Args>
	static auto makeMinimalServantCacheLocalClientRequestDispatcherFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeMinimalServantCacheLocalClientRequestDispatcherFactory")] != -1);
		return scall<R>("makeMinimalServantCacheLocalClientRequestDispatcherFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory, typename... Args>
	static auto makePOALocalClientRequestDispatcherFactory(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makePOALocalClientRequestDispatcherFactory")] != -1);
		return scall<R>("makePOALocalClientRequestDispatcherFactory", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher, typename... Args>
	static auto makeServerRequestDispatcher(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("makeServerRequestDispatcher")] != -1);
		return scall<R>("makeServerRequestDispatcher", std::forward<Args>(args)...);
	}

};

#endif
