#ifndef com_sun_corba_se_spi_orb_ParserDataFactory_HPP
#define com_sun_corba_se_spi_orb_ParserDataFactory_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::spi::orb::ParserDataFactory : public jObject<::com::sun::corba::se::spi::orb::ParserDataFactory, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_spi_orb / "ParserDataFactory";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::com::sun::corba::se::spi::orb::ParserData(::java::lang::String, ::com::sun::corba::se::spi::orb::Operation, ::java::lang::String, ::java::lang::Object, ::java::lang::Object, ::java::lang::String)>("make"), //
		jMethod<::com::sun::corba::se::spi::orb::ParserData(::java::lang::String, ::com::sun::corba::se::spi::orb::Operation, ::java::lang::String, ::java::lang::Object, ::java::lang::Object, ::com::sun::corba::se::spi::orb::StringPair *, ::java::lang::Class)>("make"), //
	};

	template<typename R = ::com::sun::corba::se::spi::orb::ParserData, typename... Args>
	static auto make(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("make")] != -1);
		return scall<R>("make", std::forward<Args>(args)...);
	}

};

#endif
