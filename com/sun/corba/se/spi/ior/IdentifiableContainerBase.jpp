#ifndef com_sun_corba_se_spi_ior_IdentifiableContainerBase_HPP
#define com_sun_corba_se_spi_ior_IdentifiableContainerBase_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::spi::ior::IdentifiableContainerBase : public jObject<::com::sun::corba::se::spi::ior::IdentifiableContainerBase, ::com::sun::corba::se::impl::ior::FreezableList> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_spi_ior / "IdentifiableContainerBase";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::util::Iterator(::jint)>("iteratorById"), //
	};

	template<typename R = ::java::util::Iterator, typename... Args>
	auto iteratorById(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("iteratorById")] != -1);
		return call<R>("iteratorById", std::forward<Args>(args)...);
	}

};

#endif
