#ifndef com_sun_corba_se_impl_encoding_OSFCodeSetRegistry_HPP
#define com_sun_corba_se_impl_encoding_OSFCodeSetRegistry_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry : public jObject<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_encoding / "OSFCodeSetRegistry";

	constexpr static Enume field_signatures{
		jField<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>("ISO_646"), //
		jField<::jint>("ISO_646_VALUE"), //
		jField<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>("ISO_8859_1"), //
		jField<::jint>("ISO_8859_1_VALUE"), //
		jField<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>("UCS_2"), //
		jField<::jint>("UCS_2_VALUE"), //
		jField<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>("UTF_16"), //
		jField<::jint>("UTF_16_VALUE"), //
		jField<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>("UTF_8"), //
		jField<::jint>("UTF_8_VALUE"), //
	};

	template<typename F = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>
	static auto ISO_646() {
		static_assert(field_signatures[jField<F>("ISO_646")] != -1);
		return sat<F>("ISO_646");
	}

	template<typename F = ::jint>
	static auto ISO_646_VALUE() {
		static_assert(field_signatures[jField<F>("ISO_646_VALUE")] != -1);
		return sat<F>("ISO_646_VALUE");
	}

	template<typename F = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>
	static auto ISO_8859_1() {
		static_assert(field_signatures[jField<F>("ISO_8859_1")] != -1);
		return sat<F>("ISO_8859_1");
	}

	template<typename F = ::jint>
	static auto ISO_8859_1_VALUE() {
		static_assert(field_signatures[jField<F>("ISO_8859_1_VALUE")] != -1);
		return sat<F>("ISO_8859_1_VALUE");
	}

	template<typename F = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>
	static auto UCS_2() {
		static_assert(field_signatures[jField<F>("UCS_2")] != -1);
		return sat<F>("UCS_2");
	}

	template<typename F = ::jint>
	static auto UCS_2_VALUE() {
		static_assert(field_signatures[jField<F>("UCS_2_VALUE")] != -1);
		return sat<F>("UCS_2_VALUE");
	}

	template<typename F = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>
	static auto UTF_16() {
		static_assert(field_signatures[jField<F>("UTF_16")] != -1);
		return sat<F>("UTF_16");
	}

	template<typename F = ::jint>
	static auto UTF_16_VALUE() {
		static_assert(field_signatures[jField<F>("UTF_16_VALUE")] != -1);
		return sat<F>("UTF_16_VALUE");
	}

	template<typename F = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry>
	static auto UTF_8() {
		static_assert(field_signatures[jField<F>("UTF_8")] != -1);
		return sat<F>("UTF_8");
	}

	template<typename F = ::jint>
	static auto UTF_8_VALUE() {
		static_assert(field_signatures[jField<F>("UTF_8_VALUE")] != -1);
		return sat<F>("UTF_8_VALUE");
	}

	constexpr static Enume method_signatures{
		jMethod<::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry(::jint)>("lookupEntry"), //
	};

	template<typename R = ::com::sun::corba::se::impl::encoding::OSFCodeSetRegistry$Entry, typename... Args>
	static auto lookupEntry(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("lookupEntry")] != -1);
		return scall<R>("lookupEntry", std::forward<Args>(args)...);
	}

};

#endif
