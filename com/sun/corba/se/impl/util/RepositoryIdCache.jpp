#ifndef com_sun_corba_se_impl_util_RepositoryIdCache_HPP
#define com_sun_corba_se_impl_util_RepositoryIdCache_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::util::RepositoryIdCache : public jObject<::com::sun::corba::se::impl::util::RepositoryIdCache, ::java::util::Hashtable> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_util / "RepositoryIdCache";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::com::sun::corba::se::impl::util::RepositoryId(::java::lang::String)>("getId"), //
	};

	template<typename R = ::com::sun::corba::se::impl::util::RepositoryId, typename... Args>
	auto getId(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getId")] != -1);
		return call<R>("getId", std::forward<Args>(args)...);
	}

};

#endif
