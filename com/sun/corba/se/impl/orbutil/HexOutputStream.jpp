#ifndef com_sun_corba_se_impl_orbutil_HexOutputStream_HPP
#define com_sun_corba_se_impl_orbutil_HexOutputStream_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::orbutil::HexOutputStream : public jObject<::com::sun::corba::se::impl::orbutil::HexOutputStream, ::java::io::OutputStream> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_orbutil / "HexOutputStream";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::io::StringWriter)>(), //
		jMethod<::jvoid(::jint)>("write"), //
		jMethod<::jvoid(::jbyte *)>("write"), //
		jMethod<::jvoid(::jbyte *, ::jint, ::jint)>("write"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto write(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("write")] != -1);
		return call<R>("write", std::forward<Args>(args)...);
	}

};

#endif
