#ifndef com_sun_corba_se_impl_orbutil_concurrent_SyncUtil_HPP
#define com_sun_corba_se_impl_orbutil_concurrent_SyncUtil_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::orbutil::concurrent::SyncUtil : public jObject<::com::sun::corba::se::impl::orbutil::concurrent::SyncUtil, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_orbutil_concurrent / "SyncUtil";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::com::sun::corba::se::impl::orbutil::concurrent::Sync)>("acquire"), //
	};

	template<typename R = ::jvoid, typename... Args>
	static auto acquire(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("acquire")] != -1);
		return scall<R>("acquire", std::forward<Args>(args)...);
	}

};

#endif
