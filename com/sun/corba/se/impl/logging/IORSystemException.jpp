#ifndef com_sun_corba_se_impl_logging_IORSystemException_HPP
#define com_sun_corba_se_impl_logging_IORSystemException_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::logging::IORSystemException : public jObject<::com::sun::corba::se::impl::logging::IORSystemException, ::com::sun::corba::se::spi::logging::LogWrapperBase> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_logging / "IORSystemException";

	constexpr static Enume field_signatures{
		jField<::jint>("ADAPTER_ID_NOT_AVAILABLE"), //
		jField<::jint>("BAD_IIOP_ADDRESS_PORT"), //
		jField<::jint>("BAD_MAGIC"), //
		jField<::jint>("BAD_OID_IN_IOR_TEMPLATE_LIST"), //
		jField<::jint>("GET_LOCAL_SERVANT_FAILURE"), //
		jField<::jint>("INVALID_JDK1_3_1_PATCH_LEVEL"), //
		jField<::jint>("INVALID_TAGGED_PROFILE"), //
		jField<::jint>("IOR_MUST_HAVE_IIOP_PROFILE"), //
		jField<::jint>("NULL_POA"), //
		jField<::jint>("OBJECT_ADAPTER_ID_NOT_AVAILABLE"), //
		jField<::jint>("ORB_ID_NOT_AVAILABLE"), //
		jField<::jint>("ORT_NOT_INITIALIZED"), //
		jField<::jint>("SERVER_ID_NOT_AVAILABLE"), //
		jField<::jint>("STRINGIFY_WRITE_ERROR"), //
		jField<::jint>("TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND"), //
	};

	template<typename F = ::jint>
	static auto ADAPTER_ID_NOT_AVAILABLE() {
		static_assert(field_signatures[jField<F>("ADAPTER_ID_NOT_AVAILABLE")] != -1);
		return sat<F>("ADAPTER_ID_NOT_AVAILABLE");
	}

	template<typename F = ::jint>
	static auto BAD_IIOP_ADDRESS_PORT() {
		static_assert(field_signatures[jField<F>("BAD_IIOP_ADDRESS_PORT")] != -1);
		return sat<F>("BAD_IIOP_ADDRESS_PORT");
	}

	template<typename F = ::jint>
	static auto BAD_MAGIC() {
		static_assert(field_signatures[jField<F>("BAD_MAGIC")] != -1);
		return sat<F>("BAD_MAGIC");
	}

	template<typename F = ::jint>
	static auto BAD_OID_IN_IOR_TEMPLATE_LIST() {
		static_assert(field_signatures[jField<F>("BAD_OID_IN_IOR_TEMPLATE_LIST")] != -1);
		return sat<F>("BAD_OID_IN_IOR_TEMPLATE_LIST");
	}

	template<typename F = ::jint>
	static auto GET_LOCAL_SERVANT_FAILURE() {
		static_assert(field_signatures[jField<F>("GET_LOCAL_SERVANT_FAILURE")] != -1);
		return sat<F>("GET_LOCAL_SERVANT_FAILURE");
	}

	template<typename F = ::jint>
	static auto INVALID_JDK1_3_1_PATCH_LEVEL() {
		static_assert(field_signatures[jField<F>("INVALID_JDK1_3_1_PATCH_LEVEL")] != -1);
		return sat<F>("INVALID_JDK1_3_1_PATCH_LEVEL");
	}

	template<typename F = ::jint>
	static auto INVALID_TAGGED_PROFILE() {
		static_assert(field_signatures[jField<F>("INVALID_TAGGED_PROFILE")] != -1);
		return sat<F>("INVALID_TAGGED_PROFILE");
	}

	template<typename F = ::jint>
	static auto IOR_MUST_HAVE_IIOP_PROFILE() {
		static_assert(field_signatures[jField<F>("IOR_MUST_HAVE_IIOP_PROFILE")] != -1);
		return sat<F>("IOR_MUST_HAVE_IIOP_PROFILE");
	}

	template<typename F = ::jint>
	static auto NULL_POA() {
		static_assert(field_signatures[jField<F>("NULL_POA")] != -1);
		return sat<F>("NULL_POA");
	}

	template<typename F = ::jint>
	static auto OBJECT_ADAPTER_ID_NOT_AVAILABLE() {
		static_assert(field_signatures[jField<F>("OBJECT_ADAPTER_ID_NOT_AVAILABLE")] != -1);
		return sat<F>("OBJECT_ADAPTER_ID_NOT_AVAILABLE");
	}

	template<typename F = ::jint>
	static auto ORB_ID_NOT_AVAILABLE() {
		static_assert(field_signatures[jField<F>("ORB_ID_NOT_AVAILABLE")] != -1);
		return sat<F>("ORB_ID_NOT_AVAILABLE");
	}

	template<typename F = ::jint>
	static auto ORT_NOT_INITIALIZED() {
		static_assert(field_signatures[jField<F>("ORT_NOT_INITIALIZED")] != -1);
		return sat<F>("ORT_NOT_INITIALIZED");
	}

	template<typename F = ::jint>
	static auto SERVER_ID_NOT_AVAILABLE() {
		static_assert(field_signatures[jField<F>("SERVER_ID_NOT_AVAILABLE")] != -1);
		return sat<F>("SERVER_ID_NOT_AVAILABLE");
	}

	template<typename F = ::jint>
	static auto STRINGIFY_WRITE_ERROR() {
		static_assert(field_signatures[jField<F>("STRINGIFY_WRITE_ERROR")] != -1);
		return sat<F>("STRINGIFY_WRITE_ERROR");
	}

	template<typename F = ::jint>
	static auto TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND() {
		static_assert(field_signatures[jField<F>("TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND")] != -1);
		return sat<F>("TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::util::logging::Logger)>(), //
		jMethod<::org::omg::CORBA::BAD_OPERATION()>("adapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::java::lang::Throwable)>("adapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus)>("adapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("adapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::java::lang::Object)>("badIiopAddressPort"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::java::lang::Throwable, ::java::lang::Object)>("badIiopAddressPort"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus, ::java::lang::Object)>("badIiopAddressPort"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable, ::java::lang::Object)>("badIiopAddressPort"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Object)>("badMagic"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable, ::java::lang::Object)>("badMagic"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Object)>("badMagic"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable, ::java::lang::Object)>("badMagic"), //
		jMethod<::org::omg::CORBA::BAD_PARAM()>("badOidInIorTemplateList"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::java::lang::Throwable)>("badOidInIorTemplateList"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus)>("badOidInIorTemplateList"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("badOidInIorTemplateList"), //
		jMethod<::com::sun::corba::se::impl::logging::IORSystemException(::com::sun::corba::se::spi::orb::ORB, ::java::lang::String)>("get"), //
		jMethod<::com::sun::corba::se::impl::logging::IORSystemException(::java::lang::String)>("get"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Object)>("getLocalServantFailure"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable, ::java::lang::Object)>("getLocalServantFailure"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Object)>("getLocalServantFailure"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable, ::java::lang::Object)>("getLocalServantFailure"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Object)>("invalidJdk131PatchLevel"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable, ::java::lang::Object)>("invalidJdk131PatchLevel"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Object)>("invalidJdk131PatchLevel"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable, ::java::lang::Object)>("invalidJdk131PatchLevel"), //
		jMethod<::org::omg::CORBA::BAD_PARAM()>("invalidTaggedProfile"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::java::lang::Throwable)>("invalidTaggedProfile"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus)>("invalidTaggedProfile"), //
		jMethod<::org::omg::CORBA::BAD_PARAM(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("invalidTaggedProfile"), //
		jMethod<::org::omg::CORBA::INV_OBJREF()>("iorMustHaveIiopProfile"), //
		jMethod<::org::omg::CORBA::INV_OBJREF(::java::lang::Throwable)>("iorMustHaveIiopProfile"), //
		jMethod<::org::omg::CORBA::INV_OBJREF(::org::omg::CORBA::CompletionStatus)>("iorMustHaveIiopProfile"), //
		jMethod<::org::omg::CORBA::INV_OBJREF(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("iorMustHaveIiopProfile"), //
		jMethod<::org::omg::CORBA::INTERNAL()>("nullPoa"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable)>("nullPoa"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus)>("nullPoa"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("nullPoa"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION()>("objectAdapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::java::lang::Throwable)>("objectAdapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus)>("objectAdapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("objectAdapterIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION()>("orbIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::java::lang::Throwable)>("orbIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus)>("orbIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("orbIdNotAvailable"), //
		jMethod<::org::omg::CORBA::INTERNAL()>("ortNotInitialized"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable)>("ortNotInitialized"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus)>("ortNotInitialized"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("ortNotInitialized"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION()>("serverIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::java::lang::Throwable)>("serverIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus)>("serverIdNotAvailable"), //
		jMethod<::org::omg::CORBA::BAD_OPERATION(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("serverIdNotAvailable"), //
		jMethod<::org::omg::CORBA::INTERNAL()>("stringifyWriteError"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable)>("stringifyWriteError"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus)>("stringifyWriteError"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable)>("stringifyWriteError"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Object)>("taggedProfileTemplateFactoryNotFound"), //
		jMethod<::org::omg::CORBA::INTERNAL(::java::lang::Throwable, ::java::lang::Object)>("taggedProfileTemplateFactoryNotFound"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Object)>("taggedProfileTemplateFactoryNotFound"), //
		jMethod<::org::omg::CORBA::INTERNAL(::org::omg::CORBA::CompletionStatus, ::java::lang::Throwable, ::java::lang::Object)>("taggedProfileTemplateFactoryNotFound"), //
	};

	template<typename R = ::org::omg::CORBA::BAD_OPERATION, typename... Args>
	auto adapterIdNotAvailable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("adapterIdNotAvailable")] != -1);
		return call<R>("adapterIdNotAvailable", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_PARAM, typename... Args>
	auto badIiopAddressPort(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("badIiopAddressPort")] != -1);
		return call<R>("badIiopAddressPort", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto badMagic(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("badMagic")] != -1);
		return call<R>("badMagic", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_PARAM, typename... Args>
	auto badOidInIorTemplateList(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("badOidInIorTemplateList")] != -1);
		return call<R>("badOidInIorTemplateList", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::corba::se::impl::logging::IORSystemException, typename... Args>
	static auto get(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("get")] != -1);
		return scall<R>("get", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto getLocalServantFailure(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getLocalServantFailure")] != -1);
		return call<R>("getLocalServantFailure", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto invalidJdk131PatchLevel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("invalidJdk131PatchLevel")] != -1);
		return call<R>("invalidJdk131PatchLevel", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_PARAM, typename... Args>
	auto invalidTaggedProfile(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("invalidTaggedProfile")] != -1);
		return call<R>("invalidTaggedProfile", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INV_OBJREF, typename... Args>
	auto iorMustHaveIiopProfile(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("iorMustHaveIiopProfile")] != -1);
		return call<R>("iorMustHaveIiopProfile", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto nullPoa(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("nullPoa")] != -1);
		return call<R>("nullPoa", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_OPERATION, typename... Args>
	auto objectAdapterIdNotAvailable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("objectAdapterIdNotAvailable")] != -1);
		return call<R>("objectAdapterIdNotAvailable", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_OPERATION, typename... Args>
	auto orbIdNotAvailable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("orbIdNotAvailable")] != -1);
		return call<R>("orbIdNotAvailable", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto ortNotInitialized(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("ortNotInitialized")] != -1);
		return call<R>("ortNotInitialized", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::BAD_OPERATION, typename... Args>
	auto serverIdNotAvailable(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("serverIdNotAvailable")] != -1);
		return call<R>("serverIdNotAvailable", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto stringifyWriteError(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("stringifyWriteError")] != -1);
		return call<R>("stringifyWriteError", std::forward<Args>(args)...);
	}

	template<typename R = ::org::omg::CORBA::INTERNAL, typename... Args>
	auto taggedProfileTemplateFactoryNotFound(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("taggedProfileTemplateFactoryNotFound")] != -1);
		return call<R>("taggedProfileTemplateFactoryNotFound", std::forward<Args>(args)...);
	}

};

#endif
