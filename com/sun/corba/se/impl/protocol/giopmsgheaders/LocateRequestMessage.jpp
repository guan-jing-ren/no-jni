#ifndef com_sun_corba_se_impl_protocol_giopmsgheaders_LocateRequestMessage_HPP
#define com_sun_corba_se_impl_protocol_giopmsgheaders_LocateRequestMessage_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::protocol::giopmsgheaders::LocateRequestMessage : public jObject<::com::sun::corba::se::impl::protocol::giopmsgheaders::LocateRequestMessage, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_protocol_giopmsgheaders / "LocateRequestMessage";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::com::sun::corba::se::spi::ior::ObjectKey()>("getObjectKey"), //
		jMethod<::jint()>("getRequestId"), //
	};

	template<typename R = ::com::sun::corba::se::spi::ior::ObjectKey, typename... Args>
	auto getObjectKey(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getObjectKey")] != -1);
		return call<R>("getObjectKey", std::forward<Args>(args)...);
	}

	template<typename R = ::jint, typename... Args>
	auto getRequestId(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getRequestId")] != -1);
		return call<R>("getRequestId", std::forward<Args>(args)...);
	}

};

#endif
