#ifndef com_sun_corba_se_impl_protocol_giopmsgheaders_Message_1_2_HPP
#define com_sun_corba_se_impl_protocol_giopmsgheaders_Message_1_2_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::protocol::giopmsgheaders::Message_1_2 : public jObject<::com::sun::corba::se::impl::protocol::giopmsgheaders::Message_1_2, ::com::sun::corba::se::impl::protocol::giopmsgheaders::Message_1_1> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_protocol_giopmsgheaders / "Message_1_2";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::java::nio::ByteBuffer)>("unmarshalRequestID"), //
		jMethod<::jvoid(::org::omg::CORBA::portable::OutputStream)>("write"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto unmarshalRequestID(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("unmarshalRequestID")] != -1);
		return call<R>("unmarshalRequestID", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto write(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("write")] != -1);
		return call<R>("write", std::forward<Args>(args)...);
	}

};

#endif
