#ifndef com_sun_corba_se_impl_interceptors_CodecFactoryImpl_HPP
#define com_sun_corba_se_impl_interceptors_CodecFactoryImpl_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::interceptors::CodecFactoryImpl : public jObject<::com::sun::corba::se::impl::interceptors::CodecFactoryImpl, ::org::omg::CORBA::LocalObject> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_interceptors / "CodecFactoryImpl";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::org::omg::CORBA::ORB)>(), //
		jMethod<::org::omg::IOP::Codec(::org::omg::IOP::Encoding)>("create_codec"), //
	};

	template<typename R = ::org::omg::IOP::Codec, typename... Args>
	auto create_codec(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("create_codec")] != -1);
		return call<R>("create_codec", std::forward<Args>(args)...);
	}

};

#endif
