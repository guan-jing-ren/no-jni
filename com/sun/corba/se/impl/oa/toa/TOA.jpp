#ifndef com_sun_corba_se_impl_oa_toa_TOA_HPP
#define com_sun_corba_se_impl_oa_toa_TOA_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::impl::oa::toa::TOA : public jObject<::com::sun::corba::se::impl::oa::toa::TOA, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_impl_oa_toa / "TOA";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::jvoid(::org::omg::CORBA::Object)>("connect"), //
		jMethod<::jvoid(::org::omg::CORBA::Object)>("disconnect"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto connect(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("connect")] != -1);
		return call<R>("connect", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto disconnect(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("disconnect")] != -1);
		return call<R>("disconnect", std::forward<Args>(args)...);
	}

};

#endif
