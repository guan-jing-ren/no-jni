#ifndef com_sun_corba_se_org_omg_CORBA_ORB_HPP
#define com_sun_corba_se_org_omg_CORBA_ORB_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::corba::se::org::omg::CORBA::ORB : public jObject<::com::sun::corba::se::org::omg::CORBA::ORB, ::org::omg::CORBA_2_3::ORB> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_corba_se_org_omg_CORBA / "ORB";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::jvoid(::java::lang::String, ::org::omg::CORBA::Object)>("register_initial_reference"), //
	};

	template<typename R = ::jvoid, typename... Args>
	auto register_initial_reference(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("register_initial_reference")] != -1);
		return call<R>("register_initial_reference", std::forward<Args>(args)...);
	}

};

#endif
