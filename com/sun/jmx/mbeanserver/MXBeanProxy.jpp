#ifndef com_sun_jmx_mbeanserver_MXBeanProxy_HPP
#define com_sun_jmx_mbeanserver_MXBeanProxy_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::jmx::mbeanserver::MXBeanProxy : public jObject<::com::sun::jmx::mbeanserver::MXBeanProxy, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_jmx_mbeanserver / "MXBeanProxy";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::Class)>(), //
		jMethod<::java::lang::Object(::javax::management::MBeanServerConnection, ::javax::management::ObjectName, ::java::lang::reflect::Method, ::java::lang::Object *)>("invoke"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto invoke(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("invoke")] != -1);
		return call<R>("invoke", std::forward<Args>(args)...);
	}

};

#endif
