#ifndef com_sun_jmx_remote_protocol_iiop_ServerProvider_HPP
#define com_sun_jmx_remote_protocol_iiop_ServerProvider_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::jmx::remote::protocol::iiop::ServerProvider : public jObject<::com::sun::jmx::remote::protocol::iiop::ServerProvider, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_jmx_remote_protocol_iiop / "ServerProvider";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::javax::management::remote::JMXConnectorServer(::javax::management::remote::JMXServiceURL, ::java::util::Map, ::javax::management::MBeanServer)>("newJMXConnectorServer"), //
	};

	template<typename R = ::javax::management::remote::JMXConnectorServer, typename... Args>
	auto newJMXConnectorServer(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("newJMXConnectorServer")] != -1);
		return call<R>("newJMXConnectorServer", std::forward<Args>(args)...);
	}

};

#endif
