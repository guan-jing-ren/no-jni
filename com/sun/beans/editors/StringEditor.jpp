#ifndef com_sun_beans_editors_StringEditor_HPP
#define com_sun_beans_editors_StringEditor_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::beans::editors::StringEditor : public jObject<::com::sun::beans::editors::StringEditor, ::java::beans::PropertyEditorSupport> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_beans_editors / "StringEditor";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jMethod<::java::lang::String()>("getJavaInitializationString"), //
		jMethod<::jvoid(::java::lang::String)>("setAsText"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getJavaInitializationString(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getJavaInitializationString")] != -1);
		return call<R>("getJavaInitializationString", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setAsText(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setAsText")] != -1);
		return call<R>("setAsText", std::forward<Args>(args)...);
	}

};

#endif
