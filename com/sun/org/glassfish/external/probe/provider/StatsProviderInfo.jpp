#ifndef com_sun_org_glassfish_external_probe_provider_StatsProviderInfo_HPP
#define com_sun_org_glassfish_external_probe_provider_StatsProviderInfo_HPP

#include "../../../../../../../jfwd_decl.hpp"

class ::com::sun::org::glassfish::external::probe::provider::StatsProviderInfo : public jObject<::com::sun::org::glassfish::external::probe::provider::StatsProviderInfo, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_org_glassfish_external_probe_provider / "StatsProviderInfo";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jConstructor<::jvoid(::java::lang::String, ::com::sun::org::glassfish::external::probe::provider::PluginPoint, ::java::lang::String, ::java::lang::Object)>(), //
		jConstructor<::jvoid(::java::lang::String, ::com::sun::org::glassfish::external::probe::provider::PluginPoint, ::java::lang::String, ::java::lang::Object, ::java::lang::String)>(), //
		jMethod<::java::lang::String()>("getConfigElement"), //
		jMethod<::java::lang::String()>("getConfigLevel"), //
		jMethod<::java::lang::String()>("getInvokerId"), //
		jMethod<::com::sun::org::glassfish::external::probe::provider::PluginPoint()>("getPluginPoint"), //
		jMethod<::java::lang::Object()>("getStatsProvider"), //
		jMethod<::java::lang::String()>("getSubTreeRoot"), //
		jMethod<::jvoid(::java::lang::String)>("setConfigLevel"), //
	};

	template<typename R = ::java::lang::String, typename... Args>
	auto getConfigElement(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getConfigElement")] != -1);
		return call<R>("getConfigElement", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getConfigLevel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getConfigLevel")] != -1);
		return call<R>("getConfigLevel", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getInvokerId(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getInvokerId")] != -1);
		return call<R>("getInvokerId", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::org::glassfish::external::probe::provider::PluginPoint, typename... Args>
	auto getPluginPoint(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getPluginPoint")] != -1);
		return call<R>("getPluginPoint", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::Object, typename... Args>
	auto getStatsProvider(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getStatsProvider")] != -1);
		return call<R>("getStatsProvider", std::forward<Args>(args)...);
	}

	template<typename R = ::java::lang::String, typename... Args>
	auto getSubTreeRoot(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getSubTreeRoot")] != -1);
		return call<R>("getSubTreeRoot", std::forward<Args>(args)...);
	}

	template<typename R = ::jvoid, typename... Args>
	auto setConfigLevel(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("setConfigLevel")] != -1);
		return call<R>("setConfigLevel", std::forward<Args>(args)...);
	}

};

#endif
