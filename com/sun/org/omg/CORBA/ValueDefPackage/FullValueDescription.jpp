#ifndef com_sun_org_omg_CORBA_ValueDefPackage_FullValueDescription_HPP
#define com_sun_org_omg_CORBA_ValueDefPackage_FullValueDescription_HPP

#include "../../../../../../jfwd_decl.hpp"

class ::com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription : public jObject<::com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_org_omg_CORBA_ValueDefPackage / "FullValueDescription";

	constexpr static Enume field_signatures{
		jField<::java::lang::String *>("abstract_base_values"), //
		jField<::com::sun::org::omg::CORBA::AttributeDescription *>("attributes"), //
		jField<::java::lang::String>("base_value"), //
		jField<::java::lang::String>("defined_in"), //
		jField<::java::lang::String>("id"), //
		jField<::com::sun::org::omg::CORBA::Initializer *>("initializers"), //
		jField<::jboolean>("is_abstract"), //
		jField<::jboolean>("is_custom"), //
		jField<::jboolean>("is_truncatable"), //
		jField<::org::omg::CORBA::ValueMember *>("members"), //
		jField<::java::lang::String>("name"), //
		jField<::com::sun::org::omg::CORBA::OperationDescription *>("operations"), //
		jField<::java::lang::String *>("supported_interfaces"), //
		jField<::org::omg::CORBA::TypeCode>("type"), //
		jField<::java::lang::String>("version"), //
	};

	template<typename F = ::java::lang::String *>
	auto abstract_base_values() const {
		static_assert(field_signatures[jField<F>("abstract_base_values")] != -1);
		return at<F>("abstract_base_values");
	}

	template<typename F = ::com::sun::org::omg::CORBA::AttributeDescription *>
	auto attributes() const {
		static_assert(field_signatures[jField<F>("attributes")] != -1);
		return at<F>("attributes");
	}

	template<typename F = ::java::lang::String>
	auto base_value() const {
		static_assert(field_signatures[jField<F>("base_value")] != -1);
		return at<F>("base_value");
	}

	template<typename F = ::java::lang::String>
	auto defined_in() const {
		static_assert(field_signatures[jField<F>("defined_in")] != -1);
		return at<F>("defined_in");
	}

	template<typename F = ::java::lang::String>
	auto id() const {
		static_assert(field_signatures[jField<F>("id")] != -1);
		return at<F>("id");
	}

	template<typename F = ::com::sun::org::omg::CORBA::Initializer *>
	auto initializers() const {
		static_assert(field_signatures[jField<F>("initializers")] != -1);
		return at<F>("initializers");
	}

	template<typename F = ::jboolean>
	auto is_abstract() const {
		static_assert(field_signatures[jField<F>("is_abstract")] != -1);
		return at<F>("is_abstract");
	}

	template<typename F = ::jboolean>
	auto is_custom() const {
		static_assert(field_signatures[jField<F>("is_custom")] != -1);
		return at<F>("is_custom");
	}

	template<typename F = ::jboolean>
	auto is_truncatable() const {
		static_assert(field_signatures[jField<F>("is_truncatable")] != -1);
		return at<F>("is_truncatable");
	}

	template<typename F = ::org::omg::CORBA::ValueMember *>
	auto members() const {
		static_assert(field_signatures[jField<F>("members")] != -1);
		return at<F>("members");
	}

	template<typename F = ::java::lang::String>
	auto name() const {
		static_assert(field_signatures[jField<F>("name")] != -1);
		return at<F>("name");
	}

	template<typename F = ::com::sun::org::omg::CORBA::OperationDescription *>
	auto operations() const {
		static_assert(field_signatures[jField<F>("operations")] != -1);
		return at<F>("operations");
	}

	template<typename F = ::java::lang::String *>
	auto supported_interfaces() const {
		static_assert(field_signatures[jField<F>("supported_interfaces")] != -1);
		return at<F>("supported_interfaces");
	}

	template<typename F = ::org::omg::CORBA::TypeCode>
	auto type() const {
		static_assert(field_signatures[jField<F>("type")] != -1);
		return at<F>("type");
	}

	template<typename F = ::java::lang::String>
	auto version() const {
		static_assert(field_signatures[jField<F>("version")] != -1);
		return at<F>("version");
	}

	constexpr static Enume method_signatures{
		jConstructor<::jvoid()>(), //
		jConstructor<::jvoid(::java::lang::String, ::java::lang::String, ::jboolean, ::jboolean, ::java::lang::String, ::java::lang::String, ::com::sun::org::omg::CORBA::OperationDescription *, ::com::sun::org::omg::CORBA::AttributeDescription *, ::org::omg::CORBA::ValueMember *, ::com::sun::org::omg::CORBA::Initializer *, ::java::lang::String *, ::java::lang::String *, ::jboolean, ::java::lang::String, ::org::omg::CORBA::TypeCode)>(), //
	};

};

#endif
