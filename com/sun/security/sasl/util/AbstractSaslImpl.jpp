#ifndef com_sun_security_sasl_util_AbstractSaslImpl_HPP
#define com_sun_security_sasl_util_AbstractSaslImpl_HPP

#include "../../../../../jfwd_decl.hpp"

class ::com::sun::security::sasl::util::AbstractSaslImpl : public jObject<::com::sun::security::sasl::util::AbstractSaslImpl, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_security_sasl_util / "AbstractSaslImpl";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::java::lang::Object(::java::lang::String)>("getNegotiatedProperty"), //
		jMethod<::jboolean()>("isComplete"), //
	};

	template<typename R = ::java::lang::Object, typename... Args>
	auto getNegotiatedProperty(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("getNegotiatedProperty")] != -1);
		return call<R>("getNegotiatedProperty", std::forward<Args>(args)...);
	}

	template<typename R = ::jboolean, typename... Args>
	auto isComplete(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("isComplete")] != -1);
		return call<R>("isComplete", std::forward<Args>(args)...);
	}

};

#endif
