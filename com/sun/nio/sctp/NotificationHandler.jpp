#ifndef com_sun_nio_sctp_NotificationHandler_HPP
#define com_sun_nio_sctp_NotificationHandler_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::nio::sctp::NotificationHandler : public jObject<::com::sun::nio::sctp::NotificationHandler, ::java::lang::Object> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_nio_sctp / "NotificationHandler";

	constexpr static Enume field_signatures{
		cexprstr{"\0"}, //
	};

	constexpr static Enume method_signatures{
		jMethod<::com::sun::nio::sctp::HandlerResult(::com::sun::nio::sctp::Notification, ::java::lang::Object)>("handleNotification"), //
	};

	template<typename R = ::com::sun::nio::sctp::HandlerResult, typename... Args>
	auto handleNotification(Args &&...args) const {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("handleNotification")] != -1);
		return call<R>("handleNotification", std::forward<Args>(args)...);
	}

};

#endif
