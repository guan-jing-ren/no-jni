#ifndef com_sun_nio_sctp_AssociationChangeNotification$AssocChangeEvent_HPP
#define com_sun_nio_sctp_AssociationChangeNotification$AssocChangeEvent_HPP

#include "../../../../jfwd_decl.hpp"

class ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent : public jObject<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent, ::java::lang::Enum> {
public:
	using jObject::jObject;

	static constexpr auto signature = ::com_sun_nio_sctp / "AssociationChangeNotification$AssocChangeEvent";

	constexpr static Enume field_signatures{
		jField<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>("CANT_START"), //
		jField<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>("COMM_LOST"), //
		jField<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>("COMM_UP"), //
		jField<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>("RESTART"), //
		jField<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>("SHUTDOWN"), //
	};

	template<typename F = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>
	static auto CANT_START() {
		static_assert(field_signatures[jField<F>("CANT_START")] != -1);
		return sat<F>("CANT_START");
	}

	template<typename F = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>
	static auto COMM_LOST() {
		static_assert(field_signatures[jField<F>("COMM_LOST")] != -1);
		return sat<F>("COMM_LOST");
	}

	template<typename F = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>
	static auto COMM_UP() {
		static_assert(field_signatures[jField<F>("COMM_UP")] != -1);
		return sat<F>("COMM_UP");
	}

	template<typename F = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>
	static auto RESTART() {
		static_assert(field_signatures[jField<F>("RESTART")] != -1);
		return sat<F>("RESTART");
	}

	template<typename F = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent>
	static auto SHUTDOWN() {
		static_assert(field_signatures[jField<F>("SHUTDOWN")] != -1);
		return sat<F>("SHUTDOWN");
	}

	constexpr static Enume method_signatures{
		jMethod<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent(::java::lang::String)>("valueOf"), //
		jMethod<::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent *()>("values"), //
	};

	template<typename R = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent, typename... Args>
	static auto valueOf(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("valueOf")] != -1);
		return scall<R>("valueOf", std::forward<Args>(args)...);
	}

	template<typename R = ::com::sun::nio::sctp::AssociationChangeNotification$AssocChangeEvent *, typename... Args>
	static auto values(Args &&...args) {
		static_assert(method_signatures[jMethod<R(std::decay_t<Args>...)>("values")] != -1);
		return scall<R>("values", std::forward<Args>(args)...);
	}

};

#endif
